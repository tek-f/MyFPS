<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="_zone_handler_8cs" kind="file" language="C#">
    <compoundname>ZoneHandler.cs</compoundname>
    <innerclass refid="class_mirror_1_1_examples_1_1_additive_1_1_zone_handler" prot="public">Mirror::Examples::Additive::ZoneHandler</innerclass>
    <innernamespace refid="namespace_mirror">Mirror</innernamespace>
    <innernamespace refid="namespace_mirror_1_1_examples">Mirror::Examples</innernamespace>
    <innernamespace refid="namespace_mirror_1_1_examples_1_1_additive">Mirror::Examples::Additive</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_mirror_1_1_examples_1_1_additive" kindref="compound">Mirror.Examples.Additive</ref></highlight></codeline>
<codeline lineno="4"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>script<sp/>is<sp/>attached<sp/>to<sp/>a<sp/>scene<sp/>object<sp/>called<sp/>Zone<sp/>that<sp/>is<sp/>on<sp/>the<sp/>Player<sp/>layer<sp/>and<sp/>has:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Sphere<sp/>Collider<sp/>with<sp/>isTrigger<sp/>=<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Network<sp/>Identity<sp/>with<sp/>Server<sp/>Only<sp/>checked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>OnTrigger<sp/>events<sp/>only<sp/>run<sp/>on<sp/>the<sp/>server<sp/>and<sp/>will<sp/>only<sp/>send<sp/>a<sp/>message<sp/>to<sp/>the<sp/>player</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>entered<sp/>the<sp/>Zone<sp/>to<sp/>load<sp/>the<sp/>subscene<sp/>assigned<sp/>to<sp/>the<sp/>subscene<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="class_mirror_1_1_examples_1_1_additive_1_1_zone_handler" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_mirror_1_1_examples_1_1_additive_1_1_zone_handler" kindref="compound">ZoneHandler</ref><sp/>:<sp/><ref refid="class_mirror_1_1_network_behaviour" kindref="compound">NetworkBehaviour</ref></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>readonly<sp/>ILogger<sp/>logger<sp/>=<sp/>LogFactory.GetLogger(typeof(<ref refid="class_mirror_1_1_examples_1_1_additive_1_1_zone_handler" kindref="compound">ZoneHandler</ref>));</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[Scene]</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;Assign<sp/>the<sp/>sub-scene<sp/>to<sp/>load<sp/>for<sp/>this<sp/>zone&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>subScene;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[Server]</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnTriggerEnter(Collider<sp/>other)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logger.LogEnabled())<sp/>logger.LogFormat(LogType.Log,<sp/></highlight><highlight class="stringliteral">&quot;Loading<sp/>{0}&quot;</highlight><highlight class="normal">,<sp/>subScene);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity</ref><sp/>networkIdentity<sp/>=<sp/>other.gameObject.GetComponent&lt;<ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity</ref>&gt;();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NetworkServer.SendToClientOfPlayer(networkIdentity,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_mirror_1_1_scene_message" kindref="compound">SceneMessage</ref><sp/>{<sp/>sceneName<sp/>=<sp/>subScene,<sp/>sceneOperation<sp/>=<sp/>SceneOperation.LoadAdditive<sp/>});</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[Server]</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnTriggerExit(Collider<sp/>other)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logger.LogEnabled())<sp/>logger.LogFormat(LogType.Log,<sp/></highlight><highlight class="stringliteral">&quot;Unloading<sp/>{0}&quot;</highlight><highlight class="normal">,<sp/>subScene);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity</ref><sp/>networkIdentity<sp/>=<sp/>other.gameObject.GetComponent&lt;<ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity</ref>&gt;();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NetworkServer.SendToClientOfPlayer(networkIdentity,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_mirror_1_1_scene_message" kindref="compound">SceneMessage</ref><sp/>{<sp/>sceneName<sp/>=<sp/>subScene,<sp/>sceneOperation<sp/>=<sp/>SceneOperation.UnloadAdditive<sp/>});</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Examples/AdditiveScenes/Scripts/ZoneHandler.cs"/>
  </compounddef>
</doxygen>
