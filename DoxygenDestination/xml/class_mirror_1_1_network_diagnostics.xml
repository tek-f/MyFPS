<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="class_mirror_1_1_network_diagnostics" kind="class" language="C#" prot="public">
    <compoundname>Mirror::NetworkDiagnostics</compoundname>
    <innerclass refid="struct_mirror_1_1_network_diagnostics_1_1_message_info" prot="public">Mirror::NetworkDiagnostics::MessageInfo</innerclass>
      <sectiondef kind="event">
      <memberdef kind="event" id="class_mirror_1_1_network_diagnostics_1aec3aba36dae26e5f93122595f8a5c357" prot="public" static="yes" add="no" remove="no" raise="no">
        <type>Action&lt; <ref refid="struct_mirror_1_1_network_diagnostics_1_1_message_info" kindref="compound">MessageInfo</ref> &gt;</type>
        <definition>Action&lt;MessageInfo&gt; Mirror.NetworkDiagnostics.OutMessageEvent</definition>
        <argsstring></argsstring>
        <name>OutMessageEvent</name>
        <briefdescription>
<para>Event that gets raised when <ref refid="namespace_mirror" kindref="compound">Mirror</ref> sends a message Subscribe to this if you want to diagnose the network </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkDiagnostics.cs" line="49" column="36" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkDiagnostics.cs" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="event" id="class_mirror_1_1_network_diagnostics_1a04150649e1ff1a989f15367b9ee30c6a" prot="public" static="yes" add="no" remove="no" raise="no">
        <type>Action&lt; <ref refid="struct_mirror_1_1_network_diagnostics_1_1_message_info" kindref="compound">MessageInfo</ref> &gt;</type>
        <definition>Action&lt;MessageInfo&gt; Mirror.NetworkDiagnostics.InMessageEvent</definition>
        <argsstring></argsstring>
        <name>InMessageEvent</name>
        <briefdescription>
<para>Event that gets raised when <ref refid="namespace_mirror" kindref="compound">Mirror</ref> receives a message Subscribe to this if you want to profile the network </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkDiagnostics.cs" line="67" column="36" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkDiagnostics.cs" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-static-func">
      <memberdef kind="function" id="class_mirror_1_1_network_diagnostics_1a1713d2e7119e0dae7074583dc7892ef8" prot="package" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Mirror.NetworkDiagnostics.OnSend&lt; T &gt;</definition>
        <argsstring>(T message, int channel, int bytes, int count)</argsstring>
        <name>OnSend&lt; T &gt;</name>
        <param>
          <type>T</type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkDiagnostics.cs" line="51" column="25" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkDiagnostics.cs" bodystart="51" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_diagnostics_1ae46890959703f5554a39f907605ad9d3" prot="package" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Mirror.NetworkDiagnostics.OnReceive&lt; T &gt;</definition>
        <argsstring>(T message, int channel, int bytes)</argsstring>
        <name>OnReceive&lt; T &gt;</name>
        <param>
          <type>T</type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkDiagnostics.cs" line="69" column="25" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkDiagnostics.cs" bodystart="69" bodyend="76"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Provides profiling information from mirror A profiler can subscribe to these events and present the data in a friendly way to the user </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkDiagnostics.cs" line="10" column="19" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkDiagnostics.cs" bodystart="11" bodyend="79"/>
    <listofallmembers>
      <member refid="class_mirror_1_1_network_diagnostics_1a04150649e1ff1a989f15367b9ee30c6a" prot="public" virt="non-virtual"><scope>Mirror::NetworkDiagnostics</scope><name>InMessageEvent</name></member>
      <member refid="class_mirror_1_1_network_diagnostics_1ae46890959703f5554a39f907605ad9d3" prot="package" virt="non-virtual"><scope>Mirror::NetworkDiagnostics</scope><name>OnReceive&lt; T &gt;</name></member>
      <member refid="class_mirror_1_1_network_diagnostics_1a1713d2e7119e0dae7074583dc7892ef8" prot="package" virt="non-virtual"><scope>Mirror::NetworkDiagnostics</scope><name>OnSend&lt; T &gt;</name></member>
      <member refid="class_mirror_1_1_network_diagnostics_1aec3aba36dae26e5f93122595f8a5c357" prot="public" virt="non-virtual"><scope>Mirror::NetworkDiagnostics</scope><name>OutMessageEvent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
