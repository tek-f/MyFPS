<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="class_mirror_1_1_l_l_a_p_i_transport" kind="class" language="C#" prot="public">
    <compoundname>Mirror::LLAPITransport</compoundname>
    <basecompoundref refid="class_mirror_1_1_transport" prot="public" virt="non-virtual">Mirror.Transport</basecompoundref>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_mirror_1_1_l_l_a_p_i_transport_1aa6950187168e12127e79f46086930637" prot="public" static="yes" mutable="no">
        <type>const string</type>
        <definition>const string Mirror.LLAPITransport.Scheme</definition>
        <argsstring></argsstring>
        <name>Scheme</name>
        <initializer>= &quot;unet&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="22" column="29" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_mirror_1_1_l_l_a_p_i_transport_1ac64afb46969520ddcc2ecb5d29c5dc18" prot="public" static="no" mutable="no">
        <type>ushort</type>
        <definition>ushort Mirror.LLAPITransport.port</definition>
        <argsstring></argsstring>
        <name>port</name>
        <initializer>= 7777</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="24" column="23" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_l_l_a_p_i_transport_1a5e056ebcb11d48ba12be829e90ee1990" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Mirror.LLAPITransport.useWebsockets</definition>
        <argsstring></argsstring>
        <name>useWebsockets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="27" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_l_l_a_p_i_transport_1a4edbbe28a9feb36df5cb16f7fef162ba" prot="public" static="no" mutable="no">
        <type>ConnectionConfig</type>
        <definition>ConnectionConfig Mirror.LLAPITransport.connectionConfig</definition>
        <argsstring></argsstring>
        <name>connectionConfig</name>
        <initializer>= new ConnectionConfig
        {
            PacketSize = 1500,
            FragmentSize = 500,
            ResendTimeout = 1200,
            DisconnectTimeout = 6000,
            ConnectTimeout = 6000,
            MinUpdateTimeout = 1,
            PingTimeout = 2000,
            ReducedPingTimeout = 100,
            AllCostTimeout = 20,
            NetworkDropThreshold = 80,
            OverflowDropThreshold = 80,
            MaxConnectionAttempt = 10,
            AckDelay = 33,
            SendDelay = 10,
            MaxCombinedReliableMessageSize = 100,
            MaxCombinedReliableMessageCount = 10,
            MaxSentMessageQueueSize = 512,
            AcksType = ConnectionAcksType.Acks128,
            InitialBandwidth = 0,
            BandwidthPeakFactor = 2,
            WebSocketReceiveBufferMaxSize = 0,
            UdpSocketReceiveBufferMaxSize = 0
        }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="30" column="33" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_l_l_a_p_i_transport_1a05e4e93775c80e594aeb76028da3c7f9" prot="public" static="no" mutable="no">
        <type>GlobalConfig</type>
        <definition>GlobalConfig Mirror.LLAPITransport.globalConfig</definition>
        <argsstring></argsstring>
        <name>globalConfig</name>
        <initializer>= new GlobalConfig
        {
            ReactorModel = ReactorModel.SelectReactor,
            ThreadAwakeTimeout = 1,
            ReactorMaximumSentMessages = 4096,
            ReactorMaximumReceivedMessages = 4096,
            MaxPacketSize = 2000,
            MaxHosts = 16,
            ThreadPoolSize = 3,
            MinTimerTimeout = 1,
            MaxTimerTimeout = 12000
        }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="57" column="29" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_mirror_1_1_l_l_a_p_i_transport_1a28e58ce31abe312df6f1ea3fcd466dfd" prot="private" static="no" mutable="no">
        <type>readonly int</type>
        <definition>readonly int Mirror.LLAPITransport.channelId</definition>
        <argsstring></argsstring>
        <name>channelId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="71" column="22" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_l_l_a_p_i_transport_1aaa85a2062bbb952a21b393c2730c9728" prot="private" static="no" mutable="no">
        <type>byte</type>
        <definition>byte Mirror.LLAPITransport.error</definition>
        <argsstring></argsstring>
        <name>error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="72" column="14" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_l_l_a_p_i_transport_1ab5594d1035baaf4d32e339fbdbe6fd2e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Mirror.LLAPITransport.clientId</definition>
        <argsstring></argsstring>
        <name>clientId</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="74" column="13" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_l_l_a_p_i_transport_1ab8c7737960fa00883d8252315c6288ef" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Mirror.LLAPITransport.clientConnectionId</definition>
        <argsstring></argsstring>
        <name>clientConnectionId</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="75" column="13" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_l_l_a_p_i_transport_1a17e7299c14ff6d93fd6d556c1f8c3011" prot="private" static="no" mutable="no">
        <type>readonly byte[]</type>
        <definition>readonly byte [] Mirror.LLAPITransport.clientReceiveBuffer</definition>
        <argsstring></argsstring>
        <name>clientReceiveBuffer</name>
        <initializer>= new byte[4096]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="76" column="23" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_l_l_a_p_i_transport_1a00f589b55c2c8039226e6d6fdf5ec464" prot="private" static="no" mutable="no">
        <type>byte[]</type>
        <definition>byte [] Mirror.LLAPITransport.clientSendBuffer</definition>
        <argsstring></argsstring>
        <name>clientSendBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="77" column="14" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_l_l_a_p_i_transport_1a4c5c18077b6d8d23bed8e978513b33c0" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Mirror.LLAPITransport.serverHostId</definition>
        <argsstring></argsstring>
        <name>serverHostId</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="79" column="13" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_l_l_a_p_i_transport_1ae38f736a45cdb0120e3dae26d8645320" prot="private" static="no" mutable="no">
        <type>readonly byte[]</type>
        <definition>readonly byte [] Mirror.LLAPITransport.serverReceiveBuffer</definition>
        <argsstring></argsstring>
        <name>serverReceiveBuffer</name>
        <initializer>= new byte[4096]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="80" column="23" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_l_l_a_p_i_transport_1acf8edadc5cece943d70ac6e706583d3e" prot="private" static="no" mutable="no">
        <type>byte[]</type>
        <definition>byte [] Mirror.LLAPITransport.serverSendBuffer</definition>
        <argsstring></argsstring>
        <name>serverSendBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="81" column="14" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_mirror_1_1_l_l_a_p_i_transport_1abeeec36183c024acc751e2501562112e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.LLAPITransport.OnValidate</definition>
        <argsstring>()</argsstring>
        <name>OnValidate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="83" column="14" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="83" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_l_l_a_p_i_transport_1ac14f4f272eaf0e3f317f771f4ff43fd6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.LLAPITransport.Awake</definition>
        <argsstring>()</argsstring>
        <name>Awake</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="95" column="14" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="95" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_l_l_a_p_i_transport_1af8b7102ddc193956bcc8040c0cb6647c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.LLAPITransport.ClientConnect</definition>
        <argsstring>(string address, int port)</argsstring>
        <name>ClientConnect</name>
        <param>
          <type>string</type>
          <declname>address</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="119" column="14" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="119" bodyend="138"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_mirror_1_1_l_l_a_p_i_transport_1a65fe94c1f3285c340868568295b7de49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override bool</type>
        <definition>override bool Mirror.LLAPITransport.Available</definition>
        <argsstring>()</argsstring>
        <name>Available</name>
        <reimplements refid="class_mirror_1_1_transport_1a7c662214f058b24b4dec5913d09122e1">Available</reimplements>
        <briefdescription>
<para>Is this transport available in the current platform? </para>
        </briefdescription>
        <detaileddescription>
<para>Some transports might only be available in mobile</para>
<para>Many will not work in webgl</para>
<para>Example usage: return Application.platform == RuntimePlatform.WebGLPlayer</para>
<para><simplesect kind="return"><para>True if this transport works in the current platform</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="105" column="30" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="105" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_l_l_a_p_i_transport_1aa9356af7004bdd06ca6bb8dd2ebbc622" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override bool</type>
        <definition>override bool Mirror.LLAPITransport.ClientConnected</definition>
        <argsstring>()</argsstring>
        <name>ClientConnected</name>
        <reimplements refid="class_mirror_1_1_transport_1a1d37768d58bce8ccfeafb254ff6961b5">ClientConnected</reimplements>
        <briefdescription>
<para>Determines if we are currently connected to the server </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if a connection has been established to the server</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="112" column="30" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_l_l_a_p_i_transport_1a743ef9e759d75eabeaec5b3e453b28b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Mirror.LLAPITransport.ClientConnect</definition>
        <argsstring>(string address)</argsstring>
        <name>ClientConnect</name>
        <reimplements refid="class_mirror_1_1_transport_1aa8e301deea483e11bc3a77241bebd6c8">ClientConnect</reimplements>
        <param>
          <type>string</type>
          <declname>address</declname>
        </param>
        <briefdescription>
<para>Establish a connection to a server </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>address</parametername>
</parameternamelist>
<parameterdescription>
<para>The IP address or FQDN of the server we are trying to connect to</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="140" column="30" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="140" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_l_l_a_p_i_transport_1ad9e4feafe7543d6240359703ef7e4f93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Mirror.LLAPITransport.ClientConnect</definition>
        <argsstring>(Uri uri)</argsstring>
        <name>ClientConnect</name>
        <reimplements refid="class_mirror_1_1_transport_1ac5e84a6ef26c090e2075a513d5724cd4">ClientConnect</reimplements>
        <param>
          <type>Uri</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
<para>Establish a connection to a server </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of the server we are trying to connect to</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="145" column="30" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="145" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_l_l_a_p_i_transport_1a521393e2ef092d5d09b4c49687ba43ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override bool</type>
        <definition>override bool Mirror.LLAPITransport.ClientSend</definition>
        <argsstring>(int channelId, ArraySegment&lt; byte &gt; segment)</argsstring>
        <name>ClientSend</name>
        <reimplements refid="class_mirror_1_1_transport_1a72f04bfce4b5cc2e6e706b069a8a4c35">ClientSend</reimplements>
        <param>
          <type>int</type>
          <declname>channelId</declname>
        </param>
        <param>
          <type>ArraySegment&lt; byte &gt;</type>
          <declname>segment</declname>
        </param>
        <briefdescription>
<para>Send data to the server </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channelId</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel to use. 0 is the default channel, but some transports might want to provide unreliable, encrypted, compressed, or any other feature as new channels</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>segment</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to send to the server. Will be recycled after returning, so either use it directly or copy it internally. This allows for allocation-free sends!</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the send was successful</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="155" column="30" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="155" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_l_l_a_p_i_transport_1a96c2625d819bd686badc02a8133aab2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Mirror.LLAPITransport.ProcessClientMessage</definition>
        <argsstring>()</argsstring>
        <name>ProcessClientMessage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="170" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="170" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_l_l_a_p_i_transport_1a2e8551d0bcc7c91dc8a8574f0da875d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string Mirror.LLAPITransport.ClientGetAddress</definition>
        <argsstring>()</argsstring>
        <name>ClientGetAddress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="210" column="23" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="210" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_l_l_a_p_i_transport_1a4aeda89fc227db785561ade459844bfe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Mirror.LLAPITransport.ClientDisconnect</definition>
        <argsstring>()</argsstring>
        <name>ClientDisconnect</name>
        <reimplements refid="class_mirror_1_1_transport_1adf81d49444738fb55ec8962535c5ed05">ClientDisconnect</reimplements>
        <briefdescription>
<para>Disconnect this client from the server </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="216" column="30" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="216" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_l_l_a_p_i_transport_1a223839c3462561517f67969418f952fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override Uri</type>
        <definition>override Uri Mirror.LLAPITransport.ServerUri</definition>
        <argsstring>()</argsstring>
        <name>ServerUri</name>
        <reimplements refid="class_mirror_1_1_transport_1a4c03319f92bc9bccd60666aa8640b914">ServerUri</reimplements>
        <briefdescription>
<para>Retrieves the address of this server. Useful for network discovery </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the url at which this server can be reached</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="230" column="29" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="230" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_l_l_a_p_i_transport_1afc60310fadd166c7195c070c5033e1dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override bool</type>
        <definition>override bool Mirror.LLAPITransport.ServerActive</definition>
        <argsstring>()</argsstring>
        <name>ServerActive</name>
        <reimplements refid="class_mirror_1_1_transport_1aecd7291bd0108abab27e2188bc3204b0">ServerActive</reimplements>
        <briefdescription>
<para>Determines if the server is up and running </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the transport is ready for connections from clients</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="239" column="30" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="239" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_l_l_a_p_i_transport_1a421beefc75227b19ec0be0256616dc51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Mirror.LLAPITransport.ServerStart</definition>
        <argsstring>()</argsstring>
        <name>ServerStart</name>
        <reimplements refid="class_mirror_1_1_transport_1a104abe48a87936fbe5d31a289d83a36d">ServerStart</reimplements>
        <briefdescription>
<para>Start listening for clients </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="244" column="30" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="244" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_l_l_a_p_i_transport_1a94272da92a5577f6aadf8110fba39feb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override bool</type>
        <definition>override bool Mirror.LLAPITransport.ServerSend</definition>
        <argsstring>(List&lt; int &gt; connectionIds, int channelId, ArraySegment&lt; byte &gt; segment)</argsstring>
        <name>ServerSend</name>
        <reimplements refid="class_mirror_1_1_transport_1a9b7725d91b696845add4defdce3c37ab">ServerSend</reimplements>
        <param>
          <type>List&lt; int &gt;</type>
          <declname>connectionIds</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channelId</declname>
        </param>
        <param>
          <type>ArraySegment&lt; byte &gt;</type>
          <declname>segment</declname>
        </param>
        <briefdescription>
<para>Send data to one or multiple clients. We provide a list, so that transports can make use of multicasting, and avoid allocations where possible. </para>
        </briefdescription>
        <detaileddescription>
<para>We don&apos;t provide a single ServerSend function to reduce complexity. Simply overwrite this one in your <ref refid="class_mirror_1_1_transport" kindref="compound">Transport</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connectionIds</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of client connection ids to send the data to</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channelId</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel to be used. Transports can use channels to implement other features such as unreliable, encryption, compression, etc...</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the data was sent to all clients</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="260" column="30" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="260" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_l_l_a_p_i_transport_1af2175277c222731d51cb6b4a498d1e51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Mirror.LLAPITransport.ProcessServerMessage</definition>
        <argsstring>()</argsstring>
        <name>ProcessServerMessage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="283" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="283" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_l_l_a_p_i_transport_1a0ab6086afaa3f59acabea5556c305e80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override bool</type>
        <definition>override bool Mirror.LLAPITransport.ServerDisconnect</definition>
        <argsstring>(int connectionId)</argsstring>
        <name>ServerDisconnect</name>
        <reimplements refid="class_mirror_1_1_transport_1a733852b2e5bc2922129700e1e3128d8b">ServerDisconnect</reimplements>
        <param>
          <type>int</type>
          <declname>connectionId</declname>
        </param>
        <briefdescription>
<para>Disconnect a client from this server. Useful to kick people out. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connectionId</parametername>
</parameternamelist>
<parameterdescription>
<para>the id of the client to disconnect</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the client was kicked</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="332" column="30" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="332" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_l_l_a_p_i_transport_1a62205c31a7d1d25852eea57a34625853" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override string</type>
        <definition>override string Mirror.LLAPITransport.ServerGetClientAddress</definition>
        <argsstring>(int connectionId)</argsstring>
        <name>ServerGetClientAddress</name>
        <reimplements refid="class_mirror_1_1_transport_1a776ddfb60f41fa6645df0c74833c46f6">ServerGetClientAddress</reimplements>
        <param>
          <type>int</type>
          <declname>connectionId</declname>
        </param>
        <briefdescription>
<para>Get the client address </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connectionId</parametername>
</parameternamelist>
<parameterdescription>
<para>id of the client</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>address of the client</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="337" column="32" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="337" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_l_l_a_p_i_transport_1a79824ce031aeee9c3376aa4fa6d2af65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Mirror.LLAPITransport.ServerStop</definition>
        <argsstring>()</argsstring>
        <name>ServerStop</name>
        <reimplements refid="class_mirror_1_1_transport_1a6e99933a82108c0dcb358ce4e60a3acb">ServerStop</reimplements>
        <briefdescription>
<para>Stop listening for clients and disconnect all existing clients </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="343" column="30" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="343" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_l_l_a_p_i_transport_1a9302dc29e6fe5bba3c54d880037c5001" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.LLAPITransport.LateUpdate</definition>
        <argsstring>()</argsstring>
        <name>LateUpdate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="357" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="357" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_l_l_a_p_i_transport_1a867c89a2d478cf46bce158ed00d6812c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Mirror.LLAPITransport.Shutdown</definition>
        <argsstring>()</argsstring>
        <name>Shutdown</name>
        <reimplements refid="class_mirror_1_1_transport_1a79346ab9427f1cf37ff8154856040449">Shutdown</reimplements>
        <briefdescription>
<para>Shut down the transport, both as client and server </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="364" column="30" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="364" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_l_l_a_p_i_transport_1a10d9d6fda39fe552976a3bc463253dc5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override int</type>
        <definition>override int Mirror.LLAPITransport.GetMaxPacketSize</definition>
        <argsstring>(int channelId)</argsstring>
        <name>GetMaxPacketSize</name>
        <reimplements refid="class_mirror_1_1_transport_1a6340d7bcfced9674d8c4f59b0d0746cf">GetMaxPacketSize</reimplements>
        <param>
          <type>int</type>
          <declname>channelId</declname>
        </param>
        <briefdescription>
<para>The maximum packet size for a given channel. Unreliable transports usually can only deliver small packets. Reliable fragmented channels can usually deliver large ones. </para>
        </briefdescription>
        <detaileddescription>
<para>GetMaxPacketSize needs to return a value at all times. Even if the <ref refid="class_mirror_1_1_transport" kindref="compound">Transport</ref> isn&apos;t running, or isn&apos;t <ref refid="class_mirror_1_1_l_l_a_p_i_transport_1a65fe94c1f3285c340868568295b7de49" kindref="member">Available()</ref>. This is because Fallback and Multiplex transports need to find the smallest possible packet size at runtime.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channelId</parametername>
</parameternamelist>
<parameterdescription>
<para>channel id</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the size in bytes that can be sent via the provided channel</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="372" column="29" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="372" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_l_l_a_p_i_transport_1aba30e941c6f2489c5a6bab7d54ef7fd9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override string</type>
        <definition>override string Mirror.LLAPITransport.ToString</definition>
        <argsstring>()</argsstring>
        <name>ToString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="377" column="32" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="377" bodyend="389"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Mirror.LLAPITransport</label>
        <link refid="class_mirror_1_1_l_l_a_p_i_transport"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>MonoBehaviour</label>
      </node>
      <node id="2">
        <label>Transport</label>
        <link refid="class_mirror_1_1_transport"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>Mirror.UnityEventException</label>
        <link refid="class_mirror_1_1_unity_event_exception"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>UnityEvent&lt; Exception &gt;</label>
      </node>
      <node id="9">
        <label>Mirror.UnityEventIntException</label>
        <link refid="class_mirror_1_1_unity_event_int_exception"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>UnityEvent&lt; ArraySegment&lt; byte &gt;, int &gt;</label>
      </node>
      <node id="11">
        <label>Mirror.ClientDataReceivedEvent</label>
        <link refid="class_mirror_1_1_client_data_received_event"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>Mirror.Transport</label>
        <link refid="class_mirror_1_1_transport"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>OnServerConnected</edgelabel>
          <edgelabel>OnServerDisconnected</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>OnClientError</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>activeTransport</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>OnServerError</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>OnClientDataReceived</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>OnServerDataReceived</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Mirror.UnityEventInt</label>
        <link refid="class_mirror_1_1_unity_event_int"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>UnityEvent&lt; int, Exception &gt;</label>
      </node>
      <node id="1">
        <label>Mirror.LLAPITransport</label>
        <link refid="class_mirror_1_1_l_l_a_p_i_transport"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>MonoBehaviour</label>
      </node>
      <node id="2">
        <label>Transport</label>
        <link refid="class_mirror_1_1_transport"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>OnServerConnected</edgelabel>
          <edgelabel>OnServerDisconnected</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>OnClientError</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>activeTransport</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>OnServerError</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>OnClientDataReceived</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>OnServerDataReceived</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>Mirror.ServerDataReceivedEvent</label>
        <link refid="class_mirror_1_1_server_data_received_event"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>UnityEvent&lt; int &gt;</label>
      </node>
      <node id="14">
        <label>UnityEvent&lt; int, ArraySegment&lt; byte &gt;, int &gt;</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" line="20" column="11" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/LLAPITransport.cs" bodystart="21" bodyend="391"/>
    <listofallmembers>
      <member refid="class_mirror_1_1_transport_1a4e187471cf106ef6068e4347b1d2fdee" prot="public" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>activeTransport</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1a65fe94c1f3285c340868568295b7de49" prot="public" virt="virtual"><scope>Mirror::LLAPITransport</scope><name>Available</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1ac14f4f272eaf0e3f317f771f4ff43fd6" prot="private" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>Awake</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1a28e58ce31abe312df6f1ea3fcd466dfd" prot="private" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>channelId</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1af8b7102ddc193956bcc8040c0cb6647c" prot="private" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>ClientConnect</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1a743ef9e759d75eabeaec5b3e453b28b4" prot="public" virt="virtual"><scope>Mirror::LLAPITransport</scope><name>ClientConnect</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1ad9e4feafe7543d6240359703ef7e4f93" prot="public" virt="virtual"><scope>Mirror::LLAPITransport</scope><name>ClientConnect</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1aa9356af7004bdd06ca6bb8dd2ebbc622" prot="public" virt="virtual"><scope>Mirror::LLAPITransport</scope><name>ClientConnected</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1ab8c7737960fa00883d8252315c6288ef" prot="private" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>clientConnectionId</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1a4aeda89fc227db785561ade459844bfe" prot="public" virt="virtual"><scope>Mirror::LLAPITransport</scope><name>ClientDisconnect</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1a2e8551d0bcc7c91dc8a8574f0da875d1" prot="public" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>ClientGetAddress</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1ab5594d1035baaf4d32e339fbdbe6fd2e" prot="private" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>clientId</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1a17e7299c14ff6d93fd6d556c1f8c3011" prot="private" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>clientReceiveBuffer</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1a521393e2ef092d5d09b4c49687ba43ee" prot="public" virt="virtual"><scope>Mirror::LLAPITransport</scope><name>ClientSend</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1a00f589b55c2c8039226e6d6fdf5ec464" prot="private" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>clientSendBuffer</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1a4edbbe28a9feb36df5cb16f7fef162ba" prot="public" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>connectionConfig</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1aaa85a2062bbb952a21b393c2730c9728" prot="private" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>error</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1a10d9d6fda39fe552976a3bc463253dc5" prot="public" virt="virtual"><scope>Mirror::LLAPITransport</scope><name>GetMaxPacketSize</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1a05e4e93775c80e594aeb76028da3c7f9" prot="public" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>globalConfig</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1a9302dc29e6fe5bba3c54d880037c5001" prot="public" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>LateUpdate</name></member>
      <member refid="class_mirror_1_1_transport_1a60da8b19a9fcc0e4e5b732887ed750dd" prot="public" virt="virtual"><scope>Mirror::LLAPITransport</scope><name>OnApplicationQuit</name></member>
      <member refid="class_mirror_1_1_transport_1acafeb3fc7051eb2456961a4aab66bd67" prot="public" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>OnClientConnected</name></member>
      <member refid="class_mirror_1_1_transport_1a73f5e6da15756d7bf2bcfd12429be058" prot="public" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>OnClientDataReceived</name></member>
      <member refid="class_mirror_1_1_transport_1a32abf6e68728cdb49cd31a9208a7eb55" prot="public" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>OnClientDisconnected</name></member>
      <member refid="class_mirror_1_1_transport_1a288982823f99bfd439277ee2a174173b" prot="public" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>OnClientError</name></member>
      <member refid="class_mirror_1_1_transport_1a4e8ff19ebeb434fec9b7262fa1b9638c" prot="public" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>OnServerConnected</name></member>
      <member refid="class_mirror_1_1_transport_1ac5d03436d77ffe03d3391629a1a85c16" prot="public" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>OnServerDataReceived</name></member>
      <member refid="class_mirror_1_1_transport_1a14b8d3ba13b5f98924aeec45af184d45" prot="public" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>OnServerDisconnected</name></member>
      <member refid="class_mirror_1_1_transport_1a656d1f29dc7a753a6c63e6c9cfdc73cc" prot="public" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>OnServerError</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1abeeec36183c024acc751e2501562112e" prot="private" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>OnValidate</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1ac64afb46969520ddcc2ecb5d29c5dc18" prot="public" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>port</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1a96c2625d819bd686badc02a8133aab2d" prot="public" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>ProcessClientMessage</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1af2175277c222731d51cb6b4a498d1e51" prot="public" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>ProcessServerMessage</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1aa6950187168e12127e79f46086930637" prot="public" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>Scheme</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1afc60310fadd166c7195c070c5033e1dc" prot="public" virt="virtual"><scope>Mirror::LLAPITransport</scope><name>ServerActive</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1a0ab6086afaa3f59acabea5556c305e80" prot="public" virt="virtual"><scope>Mirror::LLAPITransport</scope><name>ServerDisconnect</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1a62205c31a7d1d25852eea57a34625853" prot="public" virt="virtual"><scope>Mirror::LLAPITransport</scope><name>ServerGetClientAddress</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1a4c5c18077b6d8d23bed8e978513b33c0" prot="private" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>serverHostId</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1ae38f736a45cdb0120e3dae26d8645320" prot="private" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>serverReceiveBuffer</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1a94272da92a5577f6aadf8110fba39feb" prot="public" virt="virtual"><scope>Mirror::LLAPITransport</scope><name>ServerSend</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1acf8edadc5cece943d70ac6e706583d3e" prot="private" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>serverSendBuffer</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1a421beefc75227b19ec0be0256616dc51" prot="public" virt="virtual"><scope>Mirror::LLAPITransport</scope><name>ServerStart</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1a79824ce031aeee9c3376aa4fa6d2af65" prot="public" virt="virtual"><scope>Mirror::LLAPITransport</scope><name>ServerStop</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1a223839c3462561517f67969418f952fc" prot="public" virt="virtual"><scope>Mirror::LLAPITransport</scope><name>ServerUri</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1a867c89a2d478cf46bce158ed00d6812c" prot="public" virt="virtual"><scope>Mirror::LLAPITransport</scope><name>Shutdown</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1aba30e941c6f2489c5a6bab7d54ef7fd9" prot="public" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>ToString</name></member>
      <member refid="class_mirror_1_1_transport_1ad1a6da8f541579f53d7a2c61cbc820c6" prot="public" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>Update</name></member>
      <member refid="class_mirror_1_1_l_l_a_p_i_transport_1a5e056ebcb11d48ba12be829e90ee1990" prot="public" virt="non-virtual"><scope>Mirror::LLAPITransport</scope><name>useWebsockets</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
