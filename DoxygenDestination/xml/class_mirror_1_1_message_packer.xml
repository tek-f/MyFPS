<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="class_mirror_1_1_message_packer" kind="class" language="C#" prot="public">
    <compoundname>Mirror::MessagePacker</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_mirror_1_1_message_packer_1aeb2f31e150444300a9d8a37db71ef6bd" prot="private" static="yes" mutable="no">
        <type>readonly ILogger</type>
        <definition>readonly ILogger Mirror.MessagePacker.logger</definition>
        <argsstring></argsstring>
        <name>logger</name>
        <initializer>= LogFactory.GetLogger(typeof(MessagePacker))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/MessagePacker.cs" line="20" column="33" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/MessagePacker.cs" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_mirror_1_1_message_packer_1acd7fe80d34c4d0c7cd5187fd00a04e32" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Mirror.MessagePacker.GetId&lt; T &gt;</definition>
        <argsstring>()</argsstring>
        <name>GetId&lt; T &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/MessagePacker.cs" line="22" column="23" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/MessagePacker.cs" bodystart="22" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_message_packer_1ac1953e68c9549c65ac5c04ec3a70fd61" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Mirror.MessagePacker.GetId</definition>
        <argsstring>(Type type)</argsstring>
        <name>GetId</name>
        <param>
          <type>Type</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/MessagePacker.cs" line="30" column="27" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/MessagePacker.cs" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_message_packer_1a0841df39b002f692ea59020c5c5e9857" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Mirror.MessagePacker.Pack&lt; T &gt;</definition>
        <argsstring>(T message, NetworkWriter writer)</argsstring>
        <name>Pack&lt; T &gt;</name>
        <param>
          <type>T</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="class_mirror_1_1_network_writer" kindref="compound">NetworkWriter</ref></type>
          <declname>writer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/MessagePacker.cs" line="38" column="23" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/MessagePacker.cs" bodystart="38" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_message_packer_1a2dafe744201240476bdd7b1074832637" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte[]</type>
        <definition>static byte [] Mirror.MessagePacker.Pack&lt; T &gt;</definition>
        <argsstring>(T message)</argsstring>
        <name>Pack&lt; T &gt;</name>
        <param>
          <type>T</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/MessagePacker.cs" line="55" column="23" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/MessagePacker.cs" bodystart="55" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_message_packer_1ae0d35b7cc9e863eccd22be03c7aa1df6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>static T Mirror.MessagePacker.Unpack&lt; T &gt;</definition>
        <argsstring>(byte[] data)</argsstring>
        <name>Unpack&lt; T &gt;</name>
        <param>
          <type>byte[]</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/MessagePacker.cs" line="67" column="23" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/MessagePacker.cs" bodystart="67" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_message_packer_1abe8a6d5f298def5a02e5d2aa63bdf9b5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Mirror.MessagePacker.UnpackMessage</definition>
        <argsstring>(NetworkReader messageReader, out int msgType)</argsstring>
        <name>UnpackMessage</name>
        <param>
          <type><ref refid="class_mirror_1_1_network_reader" kindref="compound">NetworkReader</ref></type>
          <declname>messageReader</declname>
        </param>
        <param>
          <type>out int</type>
          <declname>msgType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/MessagePacker.cs" line="88" column="28" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/MessagePacker.cs" bodystart="88" bodyend="101"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-static-func">
      <memberdef kind="function" id="class_mirror_1_1_message_packer_1aa8da3a967197035f1c53ed0785b0ee28" prot="package" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NetworkMessageDelegate</type>
        <definition>static NetworkMessageDelegate Mirror.MessagePacker.MessageHandler&lt; T, C &gt;</definition>
        <argsstring>(Action&lt; C, T &gt; handler, bool requireAuthenication)</argsstring>
        <name>MessageHandler&lt; T, C &gt;</name>
        <param>
          <type>Action&lt; C, T &gt;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>requireAuthenication</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/MessagePacker.cs" line="103" column="25" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/MessagePacker.cs" bodystart="103" bodyend="149"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/MessagePacker.cs" line="18" column="19" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/MessagePacker.cs" bodystart="19" bodyend="150"/>
    <listofallmembers>
      <member refid="class_mirror_1_1_message_packer_1ac1953e68c9549c65ac5c04ec3a70fd61" prot="public" virt="non-virtual"><scope>Mirror::MessagePacker</scope><name>GetId</name></member>
      <member refid="class_mirror_1_1_message_packer_1acd7fe80d34c4d0c7cd5187fd00a04e32" prot="public" virt="non-virtual"><scope>Mirror::MessagePacker</scope><name>GetId&lt; T &gt;</name></member>
      <member refid="class_mirror_1_1_message_packer_1aeb2f31e150444300a9d8a37db71ef6bd" prot="private" virt="non-virtual"><scope>Mirror::MessagePacker</scope><name>logger</name></member>
      <member refid="class_mirror_1_1_message_packer_1aa8da3a967197035f1c53ed0785b0ee28" prot="package" virt="non-virtual"><scope>Mirror::MessagePacker</scope><name>MessageHandler&lt; T, C &gt;</name></member>
      <member refid="class_mirror_1_1_message_packer_1a0841df39b002f692ea59020c5c5e9857" prot="public" virt="non-virtual"><scope>Mirror::MessagePacker</scope><name>Pack&lt; T &gt;</name></member>
      <member refid="class_mirror_1_1_message_packer_1a2dafe744201240476bdd7b1074832637" prot="public" virt="non-virtual"><scope>Mirror::MessagePacker</scope><name>Pack&lt; T &gt;</name></member>
      <member refid="class_mirror_1_1_message_packer_1ae0d35b7cc9e863eccd22be03c7aa1df6" prot="public" virt="non-virtual"><scope>Mirror::MessagePacker</scope><name>Unpack&lt; T &gt;</name></member>
      <member refid="class_mirror_1_1_message_packer_1abe8a6d5f298def5a02e5d2aa63bdf9b5" prot="public" virt="non-virtual"><scope>Mirror::MessagePacker</scope><name>UnpackMessage</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
