<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="class_mirror_1_1_network_reader_pool" kind="class" language="C#" prot="public">
    <compoundname>Mirror::NetworkReaderPool</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_mirror_1_1_network_reader_pool_1a0d9f1d5149af0a500871537ec392796d" prot="private" static="yes" mutable="no">
        <type>readonly ILogger</type>
        <definition>readonly ILogger Mirror.NetworkReaderPool.logger</definition>
        <argsstring></argsstring>
        <name>logger</name>
        <initializer>= LogFactory.GetLogger(typeof(NetworkReaderPool), LogType.Error)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkReaderPool.cs" line="28" column="33" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkReaderPool.cs" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_reader_pool_1a843e57f8f337a30bd64b47b66a2fe233" prot="private" static="yes" mutable="no">
        <type><ref refid="class_mirror_1_1_pooled_network_reader" kindref="compound">PooledNetworkReader</ref>[]</type>
        <definition>PooledNetworkReader [] Mirror.NetworkReaderPool.pool</definition>
        <argsstring></argsstring>
        <name>pool</name>
        <initializer>= new <ref refid="class_mirror_1_1_pooled_network_reader" kindref="compound">PooledNetworkReader</ref>[100]</initializer>
        <briefdescription>
<para><ref refid="namespace_mirror" kindref="compound">Mirror</ref> usually only uses up to 4 readers in nested usings, 100 is a good margin for edge cases when users need a lot readers at the same time. </para>
        </briefdescription>
        <detaileddescription>
<para>keep in mind, most entries of the pool will be null in most cases</para>
<para>Note: we use an Array instead of a Stack because it&apos;s significantly faster: <ulink url="https://github.com/vis2k/Mirror/issues/1614">https://github.com/vis2k/Mirror/issues/1614</ulink> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkReaderPool.cs" line="61" column="36" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkReaderPool.cs" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_reader_pool_1a83fe59de45bf7fbae0917a5b9364c1cf" prot="private" static="yes" mutable="no">
        <type>int</type>
        <definition>int Mirror.NetworkReaderPool.next</definition>
        <argsstring></argsstring>
        <name>next</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkReaderPool.cs" line="63" column="20" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkReaderPool.cs" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_mirror_1_1_network_reader_pool_1a4dbb8617319494ad1a02fa0cf67e6703" prot="public" static="yes" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int Mirror.NetworkReaderPool.Capacity</definition>
        <argsstring></argsstring>
        <name>Capacity</name>
        <briefdescription>
<para>Size of the pool </para>
        </briefdescription>
        <detaileddescription>
<para>If pool is too small getting readers will causes memory allocation</para>
<para>Default value: 100</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkReaderPool.cs" line="35" column="27" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkReaderPool.cs" bodystart="36" bodyend="49"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_mirror_1_1_network_reader_pool_1ab1f014cabbd519d979ad63d9716c13ca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_mirror_1_1_pooled_network_reader" kindref="compound">PooledNetworkReader</ref></type>
        <definition>static PooledNetworkReader Mirror.NetworkReaderPool.GetReader</definition>
        <argsstring>(byte[] bytes)</argsstring>
        <name>GetReader</name>
        <param>
          <type>byte[]</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
<para>Get the next reader in the pool </para>
        </briefdescription>
        <detaileddescription>
<para>If pool is empty, creates a new Reader</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkReaderPool.cs" line="69" column="43" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkReaderPool.cs" bodystart="69" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_reader_pool_1a84206bff084b5b1433d7aa296dc5eecf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_mirror_1_1_pooled_network_reader" kindref="compound">PooledNetworkReader</ref></type>
        <definition>static PooledNetworkReader Mirror.NetworkReaderPool.GetReader</definition>
        <argsstring>(ArraySegment&lt; byte &gt; segment)</argsstring>
        <name>GetReader</name>
        <param>
          <type>ArraySegment&lt; byte &gt;</type>
          <declname>segment</declname>
        </param>
        <briefdescription>
<para>Get the next reader in the pool </para>
        </briefdescription>
        <detaileddescription>
<para>If pool is empty, creates a new Reader</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkReaderPool.cs" line="89" column="43" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkReaderPool.cs" bodystart="89" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_reader_pool_1a20adb27b09924dc3deac3ee25b5affde" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Mirror.NetworkReaderPool.Recycle</definition>
        <argsstring>(PooledNetworkReader reader)</argsstring>
        <name>Recycle</name>
        <param>
          <type><ref refid="class_mirror_1_1_pooled_network_reader" kindref="compound">PooledNetworkReader</ref></type>
          <declname>reader</declname>
        </param>
        <briefdescription>
<para>Puts reader back into pool </para>
        </briefdescription>
        <detaileddescription>
<para>When pool is full, the extra reader is left for the GC</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkReaderPool.cs" line="109" column="28" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkReaderPool.cs" bodystart="109" bodyend="120"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_mirror_1_1_network_reader_pool_1a39e3207124d54862deac6f020966301e" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Mirror.NetworkReaderPool.SetBuffer</definition>
        <argsstring>(NetworkReader reader, byte[] bytes)</argsstring>
        <name>SetBuffer</name>
        <param>
          <type><ref refid="class_mirror_1_1_network_reader" kindref="compound">NetworkReader</ref></type>
          <declname>reader</declname>
        </param>
        <param>
          <type>byte[]</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkReaderPool.cs" line="123" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkReaderPool.cs" bodystart="123" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_reader_pool_1a589d2832e2a205cbe0312edd2351b43a" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Mirror.NetworkReaderPool.SetBuffer</definition>
        <argsstring>(NetworkReader reader, ArraySegment&lt; byte &gt; segment)</argsstring>
        <name>SetBuffer</name>
        <param>
          <type><ref refid="class_mirror_1_1_network_reader" kindref="compound">NetworkReader</ref></type>
          <declname>reader</declname>
        </param>
        <param>
          <type>ArraySegment&lt; byte &gt;</type>
          <declname>segment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkReaderPool.cs" line="129" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkReaderPool.cs" bodystart="129" bodyend="133"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Pool of NetworkReaders </para>
    </briefdescription>
    <detaileddescription>
<para>Use this pool instead of <ref refid="class_mirror_1_1_network_reader" kindref="compound">NetworkReader</ref> to reduce memory allocation</para>
<para>Use <ref refid="" kindref="compound">Capacity</ref> to change size of pool</para>
    </detaileddescription>
    <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkReaderPool.cs" line="26" column="19" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkReaderPool.cs" bodystart="27" bodyend="134"/>
    <listofallmembers>
      <member refid="class_mirror_1_1_network_reader_pool_1a4dbb8617319494ad1a02fa0cf67e6703" prot="public" virt="non-virtual"><scope>Mirror::NetworkReaderPool</scope><name>Capacity</name></member>
      <member refid="class_mirror_1_1_network_reader_pool_1ab1f014cabbd519d979ad63d9716c13ca" prot="public" virt="non-virtual"><scope>Mirror::NetworkReaderPool</scope><name>GetReader</name></member>
      <member refid="class_mirror_1_1_network_reader_pool_1a84206bff084b5b1433d7aa296dc5eecf" prot="public" virt="non-virtual"><scope>Mirror::NetworkReaderPool</scope><name>GetReader</name></member>
      <member refid="class_mirror_1_1_network_reader_pool_1a0d9f1d5149af0a500871537ec392796d" prot="private" virt="non-virtual"><scope>Mirror::NetworkReaderPool</scope><name>logger</name></member>
      <member refid="class_mirror_1_1_network_reader_pool_1a83fe59de45bf7fbae0917a5b9364c1cf" prot="private" virt="non-virtual"><scope>Mirror::NetworkReaderPool</scope><name>next</name></member>
      <member refid="class_mirror_1_1_network_reader_pool_1a843e57f8f337a30bd64b47b66a2fe233" prot="private" virt="non-virtual"><scope>Mirror::NetworkReaderPool</scope><name>pool</name></member>
      <member refid="class_mirror_1_1_network_reader_pool_1a20adb27b09924dc3deac3ee25b5affde" prot="public" virt="non-virtual"><scope>Mirror::NetworkReaderPool</scope><name>Recycle</name></member>
      <member refid="class_mirror_1_1_network_reader_pool_1a39e3207124d54862deac6f020966301e" prot="private" virt="non-virtual"><scope>Mirror::NetworkReaderPool</scope><name>SetBuffer</name></member>
      <member refid="class_mirror_1_1_network_reader_pool_1a589d2832e2a205cbe0312edd2351b43a" prot="private" virt="non-virtual"><scope>Mirror::NetworkReaderPool</scope><name>SetBuffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
