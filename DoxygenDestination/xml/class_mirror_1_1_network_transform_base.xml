<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="class_mirror_1_1_network_transform_base" kind="class" language="C#" prot="public">
    <compoundname>Mirror::NetworkTransformBase</compoundname>
    <basecompoundref refid="class_mirror_1_1_network_behaviour" prot="public" virt="non-virtual">Mirror.NetworkBehaviour</basecompoundref>
    <derivedcompoundref refid="class_mirror_1_1_network_transform" prot="public" virt="non-virtual">Mirror.NetworkTransform</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_network_transform_child" prot="public" virt="non-virtual">Mirror.NetworkTransformChild</derivedcompoundref>
    <innerclass refid="class_mirror_1_1_network_transform_base_1_1_data_point" prot="public">Mirror::NetworkTransformBase::DataPoint</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_mirror_1_1_network_transform_base_1a82bd46206e4361c1c33068ed8c9c9fe6" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Mirror.NetworkTransformBase.clientAuthority</definition>
        <argsstring></argsstring>
        <name>clientAuthority</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="28" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_transform_base_1a4a5076cd7cd400854192a0bace71f2dd" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Mirror.NetworkTransformBase.localPositionSensitivity</definition>
        <argsstring></argsstring>
        <name>localPositionSensitivity</name>
        <initializer>= .01f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="38" column="22" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_transform_base_1a2b2cd091c09671d70b85e65e42c1ddb1" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Mirror.NetworkTransformBase.localRotationSensitivity</definition>
        <argsstring></argsstring>
        <name>localRotationSensitivity</name>
        <initializer>= .01f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="40" column="22" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_transform_base_1a157e5406b4f58b9fa7c2ec8bd406834f" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Mirror.NetworkTransformBase.localScaleSensitivity</definition>
        <argsstring></argsstring>
        <name>localScaleSensitivity</name>
        <initializer>= .01f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="42" column="22" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_mirror_1_1_network_transform_base_1ae025bfcb11990f490476aa343f5eda04" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Mirror.NetworkTransformBase.IsClientWithAuthority</definition>
        <argsstring></argsstring>
        <name>IsClientWithAuthority</name>
        <initializer>=&gt; <ref refid="class_mirror_1_1_network_behaviour_1abd651058bdaeaf65f691fad5bc366836" kindref="member">hasAuthority</ref> &amp;&amp; clientAuthority</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="32" column="14" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_transform_base_1ae61bd18d522e58013b6ba274906d5d16" prot="private" static="no" mutable="no">
        <type>Vector3</type>
        <definition>Vector3 Mirror.NetworkTransformBase.lastPosition</definition>
        <argsstring></argsstring>
        <name>lastPosition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="48" column="17" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_transform_base_1a2174e7bcf95817cd9c07fbd4c46ff9fe" prot="private" static="no" mutable="no">
        <type>Quaternion</type>
        <definition>Quaternion Mirror.NetworkTransformBase.lastRotation</definition>
        <argsstring></argsstring>
        <name>lastRotation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="49" column="20" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_transform_base_1a90576049a0341c7e8115a466e99291d3" prot="private" static="no" mutable="no">
        <type>Vector3</type>
        <definition>Vector3 Mirror.NetworkTransformBase.lastScale</definition>
        <argsstring></argsstring>
        <name>lastScale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="50" column="17" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_transform_base_1a543e58f5d716d3e6d1b72d69fc3ce348" prot="private" static="no" mutable="no">
        <type><ref refid="class_mirror_1_1_network_transform_base_1_1_data_point" kindref="compound">DataPoint</ref></type>
        <definition>DataPoint Mirror.NetworkTransformBase.start</definition>
        <argsstring></argsstring>
        <name>start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="63" column="19" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_transform_base_1ae29dad2e8dba3d2b9eea88f7940f79f2" prot="private" static="no" mutable="no">
        <type><ref refid="class_mirror_1_1_network_transform_base_1_1_data_point" kindref="compound">DataPoint</ref></type>
        <definition>DataPoint Mirror.NetworkTransformBase.goal</definition>
        <argsstring></argsstring>
        <name>goal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="64" column="19" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_transform_base_1a7ef7039734b4dcd346034724e9717d6b" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Mirror.NetworkTransformBase.lastClientSendTime</definition>
        <argsstring></argsstring>
        <name>lastClientSendTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="67" column="15" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_mirror_1_1_network_transform_base_1a923fce594ebc392699976bd9b0e8583d" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>abstract Transform</type>
        <definition>abstract Transform Mirror.NetworkTransformBase.targetComponent</definition>
        <argsstring></argsstring>
        <name>targetComponent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="45" column="38" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="45" bodyend="45"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_mirror_1_1_network_transform_base_1a00c8c5bc47995f3fc7dc8a1cc84dce1c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Mirror.NetworkTransformBase.SerializeIntoWriter</definition>
        <argsstring>(NetworkWriter writer, Vector3 position, Quaternion rotation, Vector3 scale)</argsstring>
        <name>SerializeIntoWriter</name>
        <param>
          <type><ref refid="class_mirror_1_1_network_writer" kindref="compound">NetworkWriter</ref></type>
          <declname>writer</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>position</declname>
        </param>
        <param>
          <type>Quaternion</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="72" column="28" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="72" bodyend="81"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_mirror_1_1_network_transform_base_1a7eaa6f676e85d233513767ded9e0c418" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override bool</type>
        <definition>override bool Mirror.NetworkTransformBase.OnSerialize</definition>
        <argsstring>(NetworkWriter writer, bool initialState)</argsstring>
        <name>OnSerialize</name>
        <reimplements refid="class_mirror_1_1_network_behaviour_1af8b7933f4a95d31db460935cd7906c0c">OnSerialize</reimplements>
        <param>
          <type><ref refid="class_mirror_1_1_network_writer" kindref="compound">NetworkWriter</ref></type>
          <declname>writer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>initialState</declname>
        </param>
        <briefdescription>
<para>Virtual function to override to send custom serialization data. The corresponding function to send serialization data is <ref refid="class_mirror_1_1_network_transform_base_1a98908233dd4f50efa5293edca2974a26" kindref="member">OnDeserialize()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>The initialState flag is useful to differentiate between the first time an object is serialized and when incremental updates can be sent. The first time an object is sent to a client, it must include a full state snapshot, but subsequent updates can save on bandwidth by including only incremental changes. Note that SyncVar hook functions are not called when initialState is true, only for incremental updates.</para>
<para>If a class has SyncVars, then an implementation of this function and <ref refid="class_mirror_1_1_network_transform_base_1a98908233dd4f50efa5293edca2974a26" kindref="member">OnDeserialize()</ref> are added automatically to the class. So a class that has SyncVars cannot also have custom serialization functions.</para>
<para>The OnSerialize function should return true to indicate that an update should be sent. If it returns true, then the dirty bits for that script are set to zero, if it returns false then the dirty bits are not changed. This allows multiple changes to a script to be accumulated over time and sent when the system is ready, instead of every frame.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writer</parametername>
</parameternamelist>
<parameterdescription>
<para>Writer to use to write to the stream.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initialState</parametername>
</parameternamelist>
<parameterdescription>
<para>If this is being called to send initial state.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if data was written.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="83" column="30" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="83" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_transform_base_1a98908233dd4f50efa5293edca2974a26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Mirror.NetworkTransformBase.OnDeserialize</definition>
        <argsstring>(NetworkReader reader, bool initialState)</argsstring>
        <name>OnDeserialize</name>
        <reimplements refid="class_mirror_1_1_network_behaviour_1a26853c614ebc9c116a7d4f045d723be1">OnDeserialize</reimplements>
        <param>
          <type><ref refid="class_mirror_1_1_network_reader" kindref="compound">NetworkReader</ref></type>
          <declname>reader</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>initialState</declname>
        </param>
        <briefdescription>
<para>Virtual function to override to receive custom serialization data. The corresponding function to send serialization data is <ref refid="class_mirror_1_1_network_transform_base_1a7eaa6f676e85d233513767ded9e0c418" kindref="member">OnSerialize()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>Reader to read from the stream.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initialState</parametername>
</parameternamelist>
<parameterdescription>
<para>True if being sent initial state.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="190" column="30" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="190" bodyend="194"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_mirror_1_1_network_transform_base_1abd22e259883dcda58334754ff3c4e22c" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float Mirror.NetworkTransformBase.EstimateMovementSpeed</definition>
        <argsstring>(DataPoint from, DataPoint to, Transform transform, float sendInterval)</argsstring>
        <name>EstimateMovementSpeed</name>
        <param>
          <type><ref refid="class_mirror_1_1_network_transform_base_1_1_data_point" kindref="compound">DataPoint</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="class_mirror_1_1_network_transform_base_1_1_data_point" kindref="compound">DataPoint</ref></type>
          <declname>to</declname>
        </param>
        <param>
          <type>Transform</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>float</type>
          <declname>sendInterval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="95" column="22" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="95" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_transform_base_1ab36693dcf1ea1180b1a554abbe5cd15b" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float Mirror.NetworkTransformBase.CurrentInterpolationFactor</definition>
        <argsstring>(DataPoint start, DataPoint goal)</argsstring>
        <name>CurrentInterpolationFactor</name>
        <param>
          <type><ref refid="class_mirror_1_1_network_transform_base_1_1_data_point" kindref="compound">DataPoint</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="class_mirror_1_1_network_transform_base_1_1_data_point" kindref="compound">DataPoint</ref></type>
          <declname>goal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="218" column="22" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="218" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_transform_base_1ab20c72256ffb2d01d15baaac847e0ea6" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>static Vector3 Mirror.NetworkTransformBase.InterpolatePosition</definition>
        <argsstring>(DataPoint start, DataPoint goal, Vector3 currentPosition)</argsstring>
        <name>InterpolatePosition</name>
        <param>
          <type><ref refid="class_mirror_1_1_network_transform_base_1_1_data_point" kindref="compound">DataPoint</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="class_mirror_1_1_network_transform_base_1_1_data_point" kindref="compound">DataPoint</ref></type>
          <declname>goal</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>currentPosition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="233" column="24" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="233" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_transform_base_1a9a7c0ff156fd183310428ede322e2c19" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Quaternion</type>
        <definition>static Quaternion Mirror.NetworkTransformBase.InterpolateRotation</definition>
        <argsstring>(DataPoint start, DataPoint goal, Quaternion defaultRotation)</argsstring>
        <name>InterpolateRotation</name>
        <param>
          <type><ref refid="class_mirror_1_1_network_transform_base_1_1_data_point" kindref="compound">DataPoint</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="class_mirror_1_1_network_transform_base_1_1_data_point" kindref="compound">DataPoint</ref></type>
          <declname>goal</declname>
        </param>
        <param>
          <type>Quaternion</type>
          <declname>defaultRotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="252" column="27" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="252" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_transform_base_1a5569d3d9cca72a01e846f8816dafa2bc" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>static Vector3 Mirror.NetworkTransformBase.InterpolateScale</definition>
        <argsstring>(DataPoint start, DataPoint goal, Vector3 currentScale)</argsstring>
        <name>InterpolateScale</name>
        <param>
          <type><ref refid="class_mirror_1_1_network_transform_base_1_1_data_point" kindref="compound">DataPoint</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="class_mirror_1_1_network_transform_base_1_1_data_point" kindref="compound">DataPoint</ref></type>
          <declname>goal</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>currentScale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="262" column="24" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="262" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_transform_base_1a47137be62acd5bb10a98d8f14c253f85" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Mirror.NetworkTransformBase.DrawDataPointGizmo</definition>
        <argsstring>(DataPoint data, Color color)</argsstring>
        <name>DrawDataPointGizmo</name>
        <param>
          <type><ref refid="class_mirror_1_1_network_transform_base_1_1_data_point" kindref="compound">DataPoint</ref></type>
          <declname>data</declname>
        </param>
        <param>
          <type>Color</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="386" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="386" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_transform_base_1afb68350c715a066d0e00897a0a2b0c8a" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Mirror.NetworkTransformBase.DrawLineBetweenDataPoints</definition>
        <argsstring>(DataPoint data1, DataPoint data2, Color color)</argsstring>
        <name>DrawLineBetweenDataPoints</name>
        <param>
          <type><ref refid="class_mirror_1_1_network_transform_base_1_1_data_point" kindref="compound">DataPoint</ref></type>
          <declname>data1</declname>
        </param>
        <param>
          <type><ref refid="class_mirror_1_1_network_transform_base_1_1_data_point" kindref="compound">DataPoint</ref></type>
          <declname>data2</declname>
        </param>
        <param>
          <type>Color</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="406" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="406" bodyend="410"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_mirror_1_1_network_transform_base_1a04cade3c40e58d3953ef60aea9165b6c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.NetworkTransformBase.DeserializeFromReader</definition>
        <argsstring>(NetworkReader reader)</argsstring>
        <name>DeserializeFromReader</name>
        <param>
          <type><ref refid="class_mirror_1_1_network_reader" kindref="compound">NetworkReader</ref></type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="104" column="14" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="104" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_transform_base_1ae87b12d8cd5e776821ceb344a42d3922" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.NetworkTransformBase.CmdClientToServerSync</definition>
        <argsstring>(byte[] payload)</argsstring>
        <name>CmdClientToServerSync</name>
        <param>
          <type>byte[]</type>
          <declname>payload</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="198" column="14" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="198" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_transform_base_1a6d240c48616ae25c4a5222a9ea21f35f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Mirror.NetworkTransformBase.NeedsTeleport</definition>
        <argsstring>()</argsstring>
        <name>NeedsTeleport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="277" column="14" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="277" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_transform_base_1a503320fce8daa70240493695364c4ac2" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Mirror.NetworkTransformBase.HasEitherMovedRotatedScaled</definition>
        <argsstring>()</argsstring>
        <name>HasEitherMovedRotatedScaled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="288" column="14" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="288" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_transform_base_1abe5dc9539e345d2e3f788584ca5130a3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.NetworkTransformBase.ApplyPositionRotationScale</definition>
        <argsstring>(Vector3 position, Quaternion rotation, Vector3 scale)</argsstring>
        <name>ApplyPositionRotationScale</name>
        <param>
          <type>Vector3</type>
          <declname>position</declname>
        </param>
        <param>
          <type>Quaternion</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="312" column="14" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="312" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_transform_base_1a1d8980d5c54bc0a30f3f166076101cb2" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.NetworkTransformBase.Update</definition>
        <argsstring>()</argsstring>
        <name>Update</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="320" column="14" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="320" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_transform_base_1aba57deb9b41ee6059421e5c26dfd3122" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.NetworkTransformBase.OnDrawGizmos</definition>
        <argsstring>()</argsstring>
        <name>OnDrawGizmos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="413" column="14" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="413" bodyend="421"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>NetworkBehaviour</label>
        <link refid="class_mirror_1_1_network_behaviour"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Mirror.NetworkTransformBase</label>
        <link refid="class_mirror_1_1_network_transform_base"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Mirror.NetworkTransformChild</label>
        <link refid="class_mirror_1_1_network_transform_child"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>MonoBehaviour</label>
      </node>
      <node id="4">
        <label>Mirror.NetworkTransform</label>
        <link refid="class_mirror_1_1_network_transform"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>NetworkBehaviour</label>
        <link refid="class_mirror_1_1_network_behaviour"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>connectionToClient</edgelabel>
          <edgelabel>connectionToServer</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Mirror.NetworkTransformBase</label>
        <link refid="class_mirror_1_1_network_transform_base"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>IDisposable</label>
      </node>
      <node id="4">
        <label>Mirror.NetworkConnection</label>
        <link refid="class_mirror_1_1_network_connection"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>MonoBehaviour</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" line="24" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Components/NetworkTransformBase.cs" bodystart="25" bodyend="422"/>
    <listofallmembers>
      <member refid="class_mirror_1_1_network_transform_base_1abe5dc9539e345d2e3f788584ca5130a3" prot="private" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>ApplyPositionRotationScale</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a0915f57f9b3f057d544235740e920a2f" prot="public" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>ClearAllDirtyBits</name></member>
      <member refid="class_mirror_1_1_network_transform_base_1a82bd46206e4361c1c33068ed8c9c9fe6" prot="public" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>clientAuthority</name></member>
      <member refid="class_mirror_1_1_network_transform_base_1ae87b12d8cd5e776821ceb344a42d3922" prot="private" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>CmdClientToServerSync</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a2b01d534f1b7fb5ab270423a108ba277" prot="public" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>ComponentIndex</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1ae0365575095f9988d6ae2bfef337573a" prot="public" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>connectionToClient</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1aa490124a374f6e82a780926b2d11fc23" prot="public" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>connectionToServer</name></member>
      <member refid="class_mirror_1_1_network_transform_base_1ab36693dcf1ea1180b1a554abbe5cd15b" prot="private" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>CurrentInterpolationFactor</name></member>
      <member refid="class_mirror_1_1_network_transform_base_1a04cade3c40e58d3953ef60aea9165b6c" prot="private" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>DeserializeFromReader</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a7151d225ada4d6ffc1bbc094cc803f26" prot="package" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>DeSerializeObjectsAll</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a0d125d48839a57c368c039e6476b521f" prot="package" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>DeSerializeObjectsDelta</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a79ce2238da87ce060a835113911f3bea" prot="public" virt="virtual"><scope>Mirror::NetworkTransformBase</scope><name>DeserializeSyncVars</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1abb5fb1c5753b32375a85841174ea8013" prot="package" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>DirtyObjectBits</name></member>
      <member refid="class_mirror_1_1_network_transform_base_1a47137be62acd5bb10a98d8f14c253f85" prot="private" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>DrawDataPointGizmo</name></member>
      <member refid="class_mirror_1_1_network_transform_base_1afb68350c715a066d0e00897a0a2b0c8a" prot="private" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>DrawLineBetweenDataPoints</name></member>
      <member refid="class_mirror_1_1_network_transform_base_1abd22e259883dcda58334754ff3c4e22c" prot="private" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>EstimateMovementSpeed</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1ab794f957ea97db9dec659cbbfe9208f4" prot="protected" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>GetSyncVarGameObject</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a48124410c758c6e85f2d5bdb0872e9a6" prot="protected" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>getSyncVarHookGuard</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a46b6f2edcee89cede23050a2177098df" prot="protected" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>GetSyncVarNetworkIdentity</name></member>
      <member refid="class_mirror_1_1_network_transform_base_1ae29dad2e8dba3d2b9eea88f7940f79f2" prot="private" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>goal</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1abd651058bdaeaf65f691fad5bc366836" prot="public" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>hasAuthority</name></member>
      <member refid="class_mirror_1_1_network_transform_base_1a503320fce8daa70240493695364c4ac2" prot="private" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>HasEitherMovedRotatedScaled</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a3c5d9ef0f604ec39acc7f03269d80656" prot="protected" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>InitSyncObject</name></member>
      <member refid="class_mirror_1_1_network_transform_base_1ab20c72256ffb2d01d15baaac847e0ea6" prot="private" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>InterpolatePosition</name></member>
      <member refid="class_mirror_1_1_network_transform_base_1a9a7c0ff156fd183310428ede322e2c19" prot="private" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>InterpolateRotation</name></member>
      <member refid="class_mirror_1_1_network_transform_base_1a5569d3d9cca72a01e846f8816dafa2bc" prot="private" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>InterpolateScale</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1aea84bcfc5a512ecb2b7a601bf1598d24" prot="public" virt="virtual"><scope>Mirror::NetworkTransformBase</scope><name>InvokeCommand</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a52778428d8b4058c6db0db9e87f88394" prot="public" virt="virtual"><scope>Mirror::NetworkTransformBase</scope><name>InvokeRPC</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a5b931086714c4cfb3dde3118dbfdc7a9" prot="public" virt="virtual"><scope>Mirror::NetworkTransformBase</scope><name>InvokeSyncEvent</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1ab30e4e9deea5ea728bbf8910ba4aa0fc" prot="public" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>isClient</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1abe78215943243c0ee91c2bd9a0057915" prot="public" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>isClientOnly</name></member>
      <member refid="class_mirror_1_1_network_transform_base_1ae025bfcb11990f490476aa343f5eda04" prot="private" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>IsClientWithAuthority</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a76bf9eb3b49700f653620bbf5b7aa826" prot="public" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>IsDirty</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a09f7e5bb2181018bc28fa2c29ed09e8c" prot="public" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>isLocalPlayer</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a6a65dec5ade34544074c2f997932e17a" prot="public" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>isServer</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a8ace9ae035053dab9538482ff74d62ec" prot="public" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>isServerOnly</name></member>
      <member refid="class_mirror_1_1_network_transform_base_1a7ef7039734b4dcd346034724e9717d6b" prot="private" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>lastClientSendTime</name></member>
      <member refid="class_mirror_1_1_network_transform_base_1ae61bd18d522e58013b6ba274906d5d16" prot="private" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>lastPosition</name></member>
      <member refid="class_mirror_1_1_network_transform_base_1a2174e7bcf95817cd9c07fbd4c46ff9fe" prot="private" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>lastRotation</name></member>
      <member refid="class_mirror_1_1_network_transform_base_1a90576049a0341c7e8115a466e99291d3" prot="private" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>lastScale</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a353ad279617c03ab349433f1f38c73bd" prot="package" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>lastSyncTime</name></member>
      <member refid="class_mirror_1_1_network_transform_base_1a4a5076cd7cd400854192a0bace71f2dd" prot="public" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>localPositionSensitivity</name></member>
      <member refid="class_mirror_1_1_network_transform_base_1a2b2cd091c09671d70b85e65e42c1ddb1" prot="public" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>localRotationSensitivity</name></member>
      <member refid="class_mirror_1_1_network_transform_base_1a157e5406b4f58b9fa7c2ec8bd406834f" prot="public" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>localScaleSensitivity</name></member>
      <member refid="class_mirror_1_1_network_transform_base_1a6d240c48616ae25c4a5222a9ea21f35f" prot="private" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>NeedsTeleport</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1ae90a46be8160b84d1256c397718f7ff8" prot="public" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>netId</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a2561021cd1fc5a4fe504a9822c281d11" prot="public" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>netIdentity</name></member>
      <member refid="class_mirror_1_1_network_transform_base_1a98908233dd4f50efa5293edca2974a26" prot="public" virt="virtual"><scope>Mirror::NetworkTransformBase</scope><name>OnDeserialize</name></member>
      <member refid="class_mirror_1_1_network_transform_base_1aba57deb9b41ee6059421e5c26dfd3122" prot="private" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>OnDrawGizmos</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1aea16efb5a763d21dbaa89a6ed88d2bfd" prot="public" virt="virtual"><scope>Mirror::NetworkTransformBase</scope><name>OnNetworkDestroy</name></member>
      <member refid="class_mirror_1_1_network_transform_base_1a7eaa6f676e85d233513767ded9e0c418" prot="public" virt="virtual"><scope>Mirror::NetworkTransformBase</scope><name>OnSerialize</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a1e36e4640f967426ffc113e26e649345" prot="public" virt="virtual"><scope>Mirror::NetworkTransformBase</scope><name>OnStartAuthority</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a699d2fda0c0c8843d8964ffed01d016c" prot="public" virt="virtual"><scope>Mirror::NetworkTransformBase</scope><name>OnStartClient</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a8506dcb5c3cbc297a667e795cc9eafd0" prot="public" virt="virtual"><scope>Mirror::NetworkTransformBase</scope><name>OnStartLocalPlayer</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a7849fd960925fc37005a1b8f2aa065b3" prot="public" virt="virtual"><scope>Mirror::NetworkTransformBase</scope><name>OnStartServer</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1afe494cde0781a38644c80ec14e177f59" prot="public" virt="virtual"><scope>Mirror::NetworkTransformBase</scope><name>OnStopAuthority</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1adabae0597e1228ad256cb35d1616c1ca" prot="public" virt="virtual"><scope>Mirror::NetworkTransformBase</scope><name>OnStopClient</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a27dc77be5d2117b34157b3836f333690" prot="public" virt="virtual"><scope>Mirror::NetworkTransformBase</scope><name>OnStopServer</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a08c0ff954baaab3c19ddab7bbd80d09a" prot="package" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>ResetSyncObjects</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1ac1568659d9c736766b14696efbb4dcb1" prot="protected" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>SendCommandInternal</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a8896e37754d4e3a6a2ed2102aebeee9e" prot="protected" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>SendEventInternal</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1aea3fef3f468d7fdb63c3d550f238e84a" prot="protected" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>SendRPCInternal</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a8bab38b2cbc1df4cba42abf401635a42" prot="protected" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>SendTargetRPCInternal</name></member>
      <member refid="class_mirror_1_1_network_transform_base_1a00c8c5bc47995f3fc7dc8a1cc84dce1c" prot="public" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>SerializeIntoWriter</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1ad49cab5e0ac5e4dace701541c105d371" prot="public" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>SerializeObjectsAll</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a4ba0673f1259fbf07a169aa6ef95dd45" prot="public" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>SerializeObjectsDelta</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1ace23cde46937b5fe490499d983a7e6e3" prot="public" virt="virtual"><scope>Mirror::NetworkTransformBase</scope><name>SerializeSyncVars</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1addda8533ab954db571bda550862034f7" prot="public" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>SetDirtyBit</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a4087b2993b045a197b9b653176411f05" prot="protected" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>SetSyncVar&lt; T &gt;</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1ac3e14f45a522cec35780c9afc367e985" prot="protected" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>SetSyncVarGameObject</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a23b3e60e1abdf4468beb6924bace3ce4" prot="protected" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>setSyncVarHookGuard</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a2b4fc9f99fffd61bf67b4e7995d1d4bb" prot="protected" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>SetSyncVarNetworkIdentity</name></member>
      <member refid="class_mirror_1_1_network_transform_base_1a543e58f5d716d3e6d1b72d69fc3ce348" prot="private" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>start</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a94dbe38f0930d3bbde326d0eed7b6f83" prot="public" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>syncInterval</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1acf0616ac2f967bdd47bf0f579cefe8a7" prot="public" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>syncMode</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1ac9c5caa586acee344c189db183e95efe" prot="protected" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>syncObjects</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a4bb1e7724acf59e001659f0fe0b90c8f" prot="protected" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>syncVarDirtyBits</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a46c40d5ff8bc8bea02e3c0b3886e768a" prot="protected" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>SyncVarEqual&lt; T &gt;</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a7a4e336c889c531a69ec0f51900d0657" prot="protected" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>SyncVarGameObjectEqual</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1abdba57d6c8ff0ac89767ca07acd4ffa9" prot="protected" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>SyncVarNetworkIdentityEqual</name></member>
      <member refid="class_mirror_1_1_network_transform_base_1a923fce594ebc392699976bd9b0e8583d" prot="protected" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>targetComponent</name></member>
      <member refid="class_mirror_1_1_network_transform_base_1a1d8980d5c54bc0a30f3f166076101cb2" prot="private" virt="non-virtual"><scope>Mirror::NetworkTransformBase</scope><name>Update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
