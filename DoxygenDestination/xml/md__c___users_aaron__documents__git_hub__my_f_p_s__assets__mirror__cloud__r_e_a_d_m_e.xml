<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="md__c___users_aaron__documents__git_hub__my_f_p_s__assets__mirror__cloud__r_e_a_d_m_e" kind="page">
    <compoundname>md_C__Users_aaron_Documents_GitHub_MyFPS_Assets_Mirror_Cloud_README</compoundname>
    <title>Mirror Cloud Services</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<sect1 id="md__c___users_aaron__documents__git_hub__my_f_p_s__assets__mirror__cloud__r_e_a_d_m_e_1autotoc_md1">
<title>Mirror List Server</title>
<para>Example has API key that can be used for as a demo.</para>
<para>To get an API key to use within your game you can subscribe on the <ulink url="https://mirror-networking.com/list-server/">Mirror Networking Website</ulink></para>
<sect2 id="md__c___users_aaron__documents__git_hub__my_f_p_s__assets__mirror__cloud__r_e_a_d_m_e_1autotoc_md2">
<title>Key features</title>
<para><itemizedlist>
<listitem><para>The Cloud Service works via https so is secure and can be used from any platform.</para>
</listitem><listitem><para>It runs on Google Cloud so there is no worry about server down time.</para>
</listitem><listitem><para>It scales really well. Default quota is 1000 API requests per minute. If you have high demands, contact us and we can increase that limit.</para>
</listitem></itemizedlist>
</para>
</sect2>
</sect1>
<sect1 id="md__c___users_aaron__documents__git_hub__my_f_p_s__assets__mirror__cloud__r_e_a_d_m_e_1autotoc_md3">
<title>List Server Examples</title>
<para>An example for this can be found in Mirror/Examples/Cloud/</para>
<para><emphasis>Note: you can not connect to your own public ip address, you will need at least people to test this</emphasis></para>
</sect1>
<sect1 id="md__c___users_aaron__documents__git_hub__my_f_p_s__assets__mirror__cloud__r_e_a_d_m_e_1autotoc_md4">
<title>How to use</title>
<para>Add <computeroutput>ApiConnector</computeroutput> component to an object in your game, It is probably best to put this on the same object as your NetworkManager. Once it has been added set the <computeroutput>ApiAddress</computeroutput> and <computeroutput>ApiKey</computeroutput> fields.</para>
<para>To use <computeroutput>ApiConnector</computeroutput> either directly reference it in an inspector field or get it when your script awakes <programlisting filename=".cs"><codeline><highlight class="normal">ApiConnector<sp/>connector;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Awake()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>connector<sp/>=<sp/>FindObjectOfType&lt;ApiConnector&gt;();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>The Api calls are grouped into objects. <computeroutput>connector.ListServer.ServerApi</computeroutput> has the Server api calls like <computeroutput>AddServer</computeroutput>. <computeroutput>connector.ListServer.ClientApi</computeroutput> has the Client Api calls like <computeroutput>GetServerList</computeroutput>.</para>
<sect2 id="md__c___users_aaron__documents__git_hub__my_f_p_s__assets__mirror__cloud__r_e_a_d_m_e_1autotoc_md5">
<title>Server Api Example</title>
<para>Example of how to add server <programlisting filename=".cs"><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddServer(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>playerCount)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Transport<sp/>transport<sp/>=<sp/>Transport.activeTransport;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Uri<sp/>uri<sp/>=<sp/>transport.ServerUri();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port<sp/>=<sp/>uri.Port;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>protocol<sp/>=<sp/>uri.Scheme;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>connector.ListServer.ServerApi.AddServer(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ServerJson</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>displayName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Fun<sp/>game!!!&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>protocol<sp/>=<sp/>protocol,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port<sp/>=<sp/>port,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxPlayerCount<sp/>=<sp/>NetworkManager.singleton.maxConnections,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>playerCount<sp/>=<sp/>playerCount</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
</sect2>
<sect2 id="md__c___users_aaron__documents__git_hub__my_f_p_s__assets__mirror__cloud__r_e_a_d_m_e_1autotoc_md6">
<title>Client Api Example</title>
<para>Example of how to list servers</para>
<para><programlisting filename=".cs"><codeline><highlight class="normal">ApiConnector<sp/>connector;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Awake()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>connector<sp/>=<sp/>FindObjectOfType&lt;ApiConnector&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>listener<sp/>to<sp/>event<sp/>that<sp/>will<sp/>update<sp/>UI<sp/>when<sp/>Server<sp/>list<sp/>is<sp/>refreshed</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>connector.ListServer.ClientApi.onServerListUpdated<sp/>+=<sp/>onServerListUpdated;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>listen<sp/>to<sp/>button<sp/>so<sp/>that<sp/>player<sp/>can<sp/>refresh<sp/>server<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>refreshButton.onClick.AddListener(RefreshButtonHandler);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RefreshButtonHandler()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>connector.ListServer.ClientApi.GetServerList();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onServerListUpdated()<sp/></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>UI<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
</sect2>
</sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
