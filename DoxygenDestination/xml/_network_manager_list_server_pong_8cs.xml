<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="_network_manager_list_server_pong_8cs" kind="file" language="C#">
    <compoundname>NetworkManagerListServerPong.cs</compoundname>
    <innerclass refid="class_mirror_1_1_cloud_1_1_example_1_1_network_manager_list_server_pong" prot="public">Mirror::Cloud::Example::NetworkManagerListServerPong</innerclass>
    <innernamespace refid="namespace_mirror">Mirror</innernamespace>
    <innernamespace refid="namespace_mirror_1_1_cloud">Mirror::Cloud</innernamespace>
    <innernamespace refid="namespace_mirror_1_1_cloud_1_1_example">Mirror::Cloud::Example</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_mirror_1_1_cloud_1_1_example" kindref="compound">Mirror.Cloud.Example</ref></highlight></codeline>
<codeline lineno="4"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5" refid="class_mirror_1_1_cloud_1_1_example_1_1_network_manager_list_server_pong" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>sealed<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_mirror_1_1_cloud_1_1_example_1_1_network_manager_list_server_pong" kindref="compound">NetworkManagerListServerPong</ref><sp/>:<sp/><ref refid="class_mirror_1_1_cloud_1_1_example_1_1_network_manager_list_server" kindref="compound">NetworkManagerListServer</ref></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mirror_1_1_cloud_1_1_example_1_1_network_manager_list_server_pong_1a478ccbcbc8e5fb437a9b80a7850f91aa" kindref="member">OnServerAddPlayer</ref>(<ref refid="class_mirror_1_1_network_connection" kindref="compound">NetworkConnection</ref><sp/>conn)</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Assert(<ref refid="class_mirror_1_1_network_manager_1a9ea7ee41ec27cfb8a8ec06938b0ef63c" kindref="member">startPositions</ref>.Count<sp/>==<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;Pong<sp/>Scene<sp/>should<sp/>have<sp/>2<sp/>start<sp/>Poitions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>player<sp/>at<sp/>correct<sp/>spawn<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Transform<sp/>startPos<sp/>=<sp/><ref refid="class_mirror_1_1_network_manager_1ae8ea1665e8b5401a65f23e9a168b6a89" kindref="member">numPlayers</ref><sp/>==<sp/>0<sp/>?<sp/><ref refid="class_mirror_1_1_network_manager_1a9ea7ee41ec27cfb8a8ec06938b0ef63c" kindref="member">startPositions</ref>[0]<sp/>:<sp/><ref refid="class_mirror_1_1_network_manager_1a9ea7ee41ec27cfb8a8ec06938b0ef63c" kindref="member">startPositions</ref>[1];</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameObject<sp/>player<sp/>=<sp/>startPos<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>Instantiate(<ref refid="class_mirror_1_1_network_manager_1a81bcbc73d62c047faf0e9c73fb6ffd63" kindref="member">playerPrefab</ref>,<sp/>startPos.position,<sp/>startPos.rotation)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Instantiate(<ref refid="class_mirror_1_1_network_manager_1a81bcbc73d62c047faf0e9c73fb6ffd63" kindref="member">playerPrefab</ref>);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NetworkServer.AddPlayerForConnection(conn,<sp/>player);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Examples/Cloud/PongWithListServer/Scripts/NetworkManagerListServerPong.cs"/>
  </compounddef>
</doxygen>
