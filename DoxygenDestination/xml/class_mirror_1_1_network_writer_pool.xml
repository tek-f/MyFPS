<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="class_mirror_1_1_network_writer_pool" kind="class" language="C#" prot="public">
    <compoundname>Mirror::NetworkWriterPool</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_mirror_1_1_network_writer_pool_1a9ba4dbf214381ea400342b78f0ddaeb1" prot="private" static="yes" mutable="no">
        <type>readonly ILogger</type>
        <definition>readonly ILogger Mirror.NetworkWriterPool.logger</definition>
        <argsstring></argsstring>
        <name>logger</name>
        <initializer>= LogFactory.GetLogger(typeof(NetworkWriterPool), LogType.Error)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkWriterPool.cs" line="24" column="33" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkWriterPool.cs" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_writer_pool_1ae6f8d32dfdc9047a81595c24b13668dd" prot="private" static="yes" mutable="no">
        <type><ref refid="class_mirror_1_1_pooled_network_writer" kindref="compound">PooledNetworkWriter</ref>[]</type>
        <definition>PooledNetworkWriter [] Mirror.NetworkWriterPool.pool</definition>
        <argsstring></argsstring>
        <name>pool</name>
        <initializer>= new <ref refid="class_mirror_1_1_pooled_network_writer" kindref="compound">PooledNetworkWriter</ref>[100]</initializer>
        <briefdescription>
<para><ref refid="namespace_mirror" kindref="compound">Mirror</ref> usually only uses up to 4 writes in nested usings, 100 is a good margin for edge cases when users need a lot writers at the same time. </para>
        </briefdescription>
        <detaileddescription>
<para>keep in mind, most entries of the pool will be null in most cases</para>
<para>Note: we use an Array instead of a Stack because it&apos;s significantly faster: <ulink url="https://github.com/vis2k/Mirror/issues/1614">https://github.com/vis2k/Mirror/issues/1614</ulink> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkWriterPool.cs" line="57" column="36" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkWriterPool.cs" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_writer_pool_1aed500b7036601de30f01e22201e37acd" prot="private" static="yes" mutable="no">
        <type>int</type>
        <definition>int Mirror.NetworkWriterPool.next</definition>
        <argsstring></argsstring>
        <name>next</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkWriterPool.cs" line="59" column="20" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkWriterPool.cs" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_mirror_1_1_network_writer_pool_1a03046a3eb2084bb105b82a07056a1e3a" prot="public" static="yes" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int Mirror.NetworkWriterPool.Capacity</definition>
        <argsstring></argsstring>
        <name>Capacity</name>
        <briefdescription>
<para>Size of the pool </para>
        </briefdescription>
        <detaileddescription>
<para>If pool is too small getting writers will causes memory allocation</para>
<para>Default value: 100 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkWriterPool.cs" line="31" column="27" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkWriterPool.cs" bodystart="32" bodyend="45"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_mirror_1_1_network_writer_pool_1a31cd08c7b124e86aa9a80ea4405600c2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_mirror_1_1_pooled_network_writer" kindref="compound">PooledNetworkWriter</ref></type>
        <definition>static PooledNetworkWriter Mirror.NetworkWriterPool.GetWriter</definition>
        <argsstring>()</argsstring>
        <name>GetWriter</name>
        <briefdescription>
<para>Get the next writer in the pool </para>
        </briefdescription>
        <detaileddescription>
<para>If pool is empty, creates a new Writer</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkWriterPool.cs" line="65" column="43" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkWriterPool.cs" bodystart="65" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_writer_pool_1ab873a197dcee0957e56343a4f315dca9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Mirror.NetworkWriterPool.Recycle</definition>
        <argsstring>(PooledNetworkWriter writer)</argsstring>
        <name>Recycle</name>
        <param>
          <type><ref refid="class_mirror_1_1_pooled_network_writer" kindref="compound">PooledNetworkWriter</ref></type>
          <declname>writer</declname>
        </param>
        <briefdescription>
<para>Puts writer back into pool </para>
        </briefdescription>
        <detaileddescription>
<para>When pool is full, the extra writer is left for the GC</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkWriterPool.cs" line="85" column="28" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkWriterPool.cs" bodystart="85" bodyend="96"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Pool of NetworkWriters </para>
    </briefdescription>
    <detaileddescription>
<para>Use this pool instead of <ref refid="class_mirror_1_1_network_writer" kindref="compound">NetworkWriter</ref> to reduce memory allocation</para>
<para>Use <ref refid="" kindref="compound">Capacity</ref> to change size of pool</para>
    </detaileddescription>
    <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkWriterPool.cs" line="22" column="19" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkWriterPool.cs" bodystart="23" bodyend="97"/>
    <listofallmembers>
      <member refid="class_mirror_1_1_network_writer_pool_1a03046a3eb2084bb105b82a07056a1e3a" prot="public" virt="non-virtual"><scope>Mirror::NetworkWriterPool</scope><name>Capacity</name></member>
      <member refid="class_mirror_1_1_network_writer_pool_1a31cd08c7b124e86aa9a80ea4405600c2" prot="public" virt="non-virtual"><scope>Mirror::NetworkWriterPool</scope><name>GetWriter</name></member>
      <member refid="class_mirror_1_1_network_writer_pool_1a9ba4dbf214381ea400342b78f0ddaeb1" prot="private" virt="non-virtual"><scope>Mirror::NetworkWriterPool</scope><name>logger</name></member>
      <member refid="class_mirror_1_1_network_writer_pool_1aed500b7036601de30f01e22201e37acd" prot="private" virt="non-virtual"><scope>Mirror::NetworkWriterPool</scope><name>next</name></member>
      <member refid="class_mirror_1_1_network_writer_pool_1ae6f8d32dfdc9047a81595c24b13668dd" prot="private" virt="non-virtual"><scope>Mirror::NetworkWriterPool</scope><name>pool</name></member>
      <member refid="class_mirror_1_1_network_writer_pool_1ab873a197dcee0957e56343a4f315dca9" prot="public" virt="non-virtual"><scope>Mirror::NetworkWriterPool</scope><name>Recycle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
