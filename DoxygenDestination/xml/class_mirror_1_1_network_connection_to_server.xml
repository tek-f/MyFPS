<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="class_mirror_1_1_network_connection_to_server" kind="class" language="C#" prot="public">
    <compoundname>Mirror::NetworkConnectionToServer</compoundname>
    <basecompoundref refid="class_mirror_1_1_network_connection" prot="public" virt="non-virtual">Mirror.NetworkConnection</basecompoundref>
    <derivedcompoundref refid="class_mirror_1_1_u_local_connection_to_server" prot="public" virt="non-virtual">Mirror.ULocalConnectionToServer</derivedcompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_mirror_1_1_network_connection_to_server_1acd61991b7274f7c447dc1c84a63a69cc" prot="private" static="yes" mutable="no">
        <type>readonly ILogger</type>
        <definition>readonly ILogger Mirror.NetworkConnectionToServer.logger</definition>
        <argsstring></argsstring>
        <name>logger</name>
        <initializer>= LogFactory.GetLogger&lt;<ref refid="class_mirror_1_1_network_connection_to_server" kindref="compound">NetworkConnectionToServer</ref>&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnectionToServer.cs" line="8" column="33" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnectionToServer.cs" bodystart="8" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_mirror_1_1_network_connection_to_server_1ac266361a9ff453d6b4521c545fc6cd81" prot="public" static="no" mutable="no">
        <type>override string</type>
        <definition>override string Mirror.NetworkConnectionToServer.address</definition>
        <argsstring></argsstring>
        <name>address</name>
        <initializer>=&gt; &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnectionToServer.cs" line="10" column="32" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnectionToServer.cs" bodystart="10" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef kind="function" id="class_mirror_1_1_network_connection_to_server_1af484fcb7c42b743754c4f9238f44aafb" prot="package" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override bool</type>
        <definition>override bool Mirror.NetworkConnectionToServer.Send</definition>
        <argsstring>(ArraySegment&lt; byte &gt; segment, int channelId=Channels.DefaultReliable)</argsstring>
        <name>Send</name>
        <reimplements refid="class_mirror_1_1_network_connection_1af946b8d29f4784ef28b97ab7758990ec">Send</reimplements>
        <param>
          <type>ArraySegment&lt; byte &gt;</type>
          <declname>segment</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channelId</declname>
          <defval>Channels.DefaultReliable</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnectionToServer.cs" line="12" column="32" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnectionToServer.cs" bodystart="12" bodyend="22"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_mirror_1_1_network_connection_to_server_1afa1f2d6f6515a8c345df425b8c04ed8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Mirror.NetworkConnectionToServer.Disconnect</definition>
        <argsstring>()</argsstring>
        <name>Disconnect</name>
        <reimplements refid="class_mirror_1_1_network_connection_1a2d3402195c717ebf2c45874b4f3c17bf">Disconnect</reimplements>
        <briefdescription>
<para>Disconnects this connection. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnectionToServer.cs" line="27" column="30" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnectionToServer.cs" bodystart="27" bodyend="34"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>IDisposable</label>
      </node>
      <node id="4">
        <label>Mirror.ULocalConnectionToServer</label>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>NetworkConnection</label>
        <link refid="class_mirror_1_1_network_connection"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Mirror.NetworkConnectionToServer</label>
        <link refid="class_mirror_1_1_network_connection_to_server"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>IDisposable</label>
      </node>
      <node id="2">
        <label>NetworkConnection</label>
        <link refid="class_mirror_1_1_network_connection"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Mirror.NetworkConnectionToServer</label>
        <link refid="class_mirror_1_1_network_connection_to_server"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnectionToServer.cs" line="6" column="11" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnectionToServer.cs" bodystart="7" bodyend="35"/>
    <listofallmembers>
      <member refid="class_mirror_1_1_network_connection_1a6ac1e314ddecd5204388e5d05a248e20" prot="package" virt="non-virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>AddOwnedObject</name></member>
      <member refid="class_mirror_1_1_network_connection_to_server_1ac266361a9ff453d6b4521c545fc6cd81" prot="public" virt="non-virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>address</name></member>
      <member refid="class_mirror_1_1_network_connection_1a39423a04e433bacc029cd10107f1538b" prot="package" virt="non-virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>AddToVisList</name></member>
      <member refid="class_mirror_1_1_network_connection_1a571373632c93c7f18f3e601b8ee0b04f" prot="public" virt="non-virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>authenticationData</name></member>
      <member refid="class_mirror_1_1_network_connection_1a0523c3a787f8e1689300b21bad102e57" prot="public" virt="non-virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>clientOwnedObjects</name></member>
      <member refid="class_mirror_1_1_network_connection_1a1247800fa37e4af183ca3c58e687ecf4" prot="public" virt="non-virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>connectionId</name></member>
      <member refid="class_mirror_1_1_network_connection_1a10b41b5316e86b1d1a2429ee7c56fc1d" prot="package" virt="non-virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>DestroyOwnedObjects</name></member>
      <member refid="class_mirror_1_1_network_connection_to_server_1afa1f2d6f6515a8c345df425b8c04ed8d" prot="public" virt="virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>Disconnect</name></member>
      <member refid="class_mirror_1_1_network_connection_1a3d4805ab08b2af8d6a39b6a873d8256c" prot="public" virt="non-virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>Dispose</name></member>
      <member refid="class_mirror_1_1_network_connection_1a8e92049dba7a22350a018c62d8d1d08f" prot="protected" virt="virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>Dispose</name></member>
      <member refid="class_mirror_1_1_network_connection_1a1d2489f176006bf19fd9bb9850967c76" prot="public" virt="non-virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>identity</name></member>
      <member refid="class_mirror_1_1_network_connection_1a6d7922d2d23294345ea6a7eb0554f430" prot="package" virt="non-virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>InvokeHandler</name></member>
      <member refid="class_mirror_1_1_network_connection_1a2883951cc3bc4b4fd796beb454800a1b" prot="public" virt="non-virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>InvokeHandler&lt; T &gt;</name></member>
      <member refid="class_mirror_1_1_network_connection_1a482f5e49c373a96c29df1c9cbc4a6757" prot="public" virt="non-virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>isAuthenticated</name></member>
      <member refid="class_mirror_1_1_network_connection_1a3650022dcf27ce95b6416400cc7dcbe8" prot="package" virt="virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>IsClientAlive</name></member>
      <member refid="class_mirror_1_1_network_connection_1a94362bc21882fa2d34df1235d706b1f7" prot="public" virt="non-virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>isReady</name></member>
      <member refid="class_mirror_1_1_network_connection_1abfcc29816ddb4bd117dd26a31728a4d8" prot="public" virt="non-virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>lastMessageTime</name></member>
      <member refid="class_mirror_1_1_network_connection_1a96ab2276c0acb1a3ce270a00804db9e1" prot="public" virt="non-virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>LocalConnectionId</name></member>
      <member refid="class_mirror_1_1_network_connection_to_server_1acd61991b7274f7c447dc1c84a63a69cc" prot="private" virt="non-virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>logger</name></member>
      <member refid="class_mirror_1_1_network_connection_1a7ca2603dbf2d32b799a9633a60e269d0" prot="public" virt="non-virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>logNetworkMessages</name></member>
      <member refid="class_mirror_1_1_network_connection_1a5ad5f88069e7e360aa46bae3d15e0ed5" prot="package" virt="non-virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>NetworkConnection</name></member>
      <member refid="class_mirror_1_1_network_connection_1aed0633ae83ada4f5b67c763d865bfba3" prot="package" virt="non-virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>NetworkConnection</name></member>
      <member refid="class_mirror_1_1_network_connection_1a68387adbe60c690e177e4ab9d6f06382" prot="package" virt="non-virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>RemoveFromVisList</name></member>
      <member refid="class_mirror_1_1_network_connection_1a99c541296882372ef41fd01b6cd70380" prot="package" virt="non-virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>RemoveObservers</name></member>
      <member refid="class_mirror_1_1_network_connection_1aabe6e4245221401c6f74df98ae728010" prot="package" virt="non-virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>RemoveOwnedObject</name></member>
      <member refid="class_mirror_1_1_network_connection_to_server_1af484fcb7c42b743754c4f9238f44aafb" prot="package" virt="virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>Send</name></member>
      <member refid="class_mirror_1_1_network_connection_1abd5a3b4206ef5158e23232be1a09f26e" prot="public" virt="non-virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>Send&lt; T &gt;</name></member>
      <member refid="class_mirror_1_1_network_connection_1a792ee1387519808fcd9980612f02704c" prot="package" virt="non-virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>SetHandlers</name></member>
      <member refid="class_mirror_1_1_network_connection_1ab62357e826e041bf33eea9237511bd56" prot="public" virt="non-virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>ToString</name></member>
      <member refid="class_mirror_1_1_network_connection_1a8b93853b218236bffe64e7621e232ab4" prot="package" virt="non-virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>TransportReceive</name></member>
      <member refid="class_mirror_1_1_network_connection_1a953313ac48d4fee15873bdc15a3b3f32" prot="package" virt="non-virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>ValidatePacketSize</name></member>
      <member refid="class_mirror_1_1_network_connection_1a6ddb080149a0b23aa764bdf967044724" prot="package" virt="non-virtual"><scope>Mirror::NetworkConnectionToServer</scope><name>visList</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
