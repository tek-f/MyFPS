<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="class_mirror_1_1_network_behaviour" kind="class" language="C#" prot="public">
    <compoundname>Mirror::NetworkBehaviour</compoundname>
    <basecompoundref prot="public" virt="non-virtual">MonoBehaviour</basecompoundref>
    <derivedcompoundref refid="class_mirror_1_1_cloud_1_1_examples_1_1_pong_1_1_ball" prot="public" virt="non-virtual">Mirror.Cloud.Examples.Pong.Ball</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_cloud_1_1_examples_1_1_pong_1_1_ball_manager" prot="public" virt="non-virtual">Mirror.Cloud.Examples.Pong.BallManager</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_cloud_1_1_examples_1_1_pong_1_1_player" prot="public" virt="non-virtual">Mirror.Cloud.Examples.Pong.Player</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_examples_1_1_additive_1_1_player_controller" prot="public" virt="non-virtual">Mirror.Examples.Additive.PlayerController</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_examples_1_1_additive_1_1_random_color" prot="public" virt="non-virtual">Mirror.Examples.Additive.RandomColor</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_examples_1_1_additive_1_1_shooting_tank_behaviour" prot="public" virt="non-virtual">Mirror.Examples.Additive.ShootingTankBehaviour</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_examples_1_1_additive_1_1_zone_handler" prot="public" virt="non-virtual">Mirror.Examples.Additive.ZoneHandler</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_examples_1_1_basic_1_1_player" prot="public" virt="non-virtual">Mirror.Examples.Basic.Player</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_examples_1_1_chat_1_1_player" prot="public" virt="non-virtual">Mirror.Examples.Chat.Player</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_examples_1_1_multiple_additive_scenes_1_1_physics_collision" prot="public" virt="non-virtual">Mirror.Examples.MultipleAdditiveScenes.PhysicsCollision</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_examples_1_1_multiple_additive_scenes_1_1_player_controller" prot="public" virt="non-virtual">Mirror.Examples.MultipleAdditiveScenes.PlayerController</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_examples_1_1_multiple_additive_scenes_1_1_player_score" prot="public" virt="non-virtual">Mirror.Examples.MultipleAdditiveScenes.PlayerScore</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_examples_1_1_multiple_additive_scenes_1_1_random_color" prot="public" virt="non-virtual">Mirror.Examples.MultipleAdditiveScenes.RandomColor</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_examples_1_1_multiple_additive_scenes_1_1_reward" prot="public" virt="non-virtual">Mirror.Examples.MultipleAdditiveScenes.Reward</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_examples_1_1_multiple_additive_scenes_1_1_spawner" prot="public" virt="non-virtual">Mirror.Examples.MultipleAdditiveScenes.Spawner</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_examples_1_1_network_room_1_1_player_controller" prot="public" virt="non-virtual">Mirror.Examples.NetworkRoom.PlayerController</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_examples_1_1_network_room_1_1_player_score" prot="public" virt="non-virtual">Mirror.Examples.NetworkRoom.PlayerScore</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_examples_1_1_network_room_1_1_random_color" prot="public" virt="non-virtual">Mirror.Examples.NetworkRoom.RandomColor</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_examples_1_1_network_room_1_1_reward" prot="public" virt="non-virtual">Mirror.Examples.NetworkRoom.Reward</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_examples_1_1_network_room_1_1_spawner" prot="public" virt="non-virtual">Mirror.Examples.NetworkRoom.Spawner</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_examples_1_1_one_k_1_1_monster_movement" prot="public" virt="non-virtual">Mirror.Examples.OneK.MonsterMovement</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_examples_1_1_one_k_1_1_player_movement" prot="public" virt="non-virtual">Mirror.Examples.OneK.PlayerMovement</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_examples_1_1_pong_1_1_ball" prot="public" virt="non-virtual">Mirror.Examples.Pong.Ball</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_examples_1_1_pong_1_1_player" prot="public" virt="non-virtual">Mirror.Examples.Pong.Player</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_examples_1_1_rigidbody_physics_1_1_add_force" prot="public" virt="non-virtual">Mirror.Examples.RigidbodyPhysics.AddForce</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_examples_1_1_tanks_1_1_projectile" prot="public" virt="non-virtual">Mirror.Examples.Tanks.Projectile</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_examples_1_1_tanks_1_1_tank" prot="public" virt="non-virtual">Mirror.Examples.Tanks.Tank</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_experimental_1_1_network_lerp_rigidbody" prot="public" virt="non-virtual">Mirror.Experimental.NetworkLerpRigidbody</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_experimental_1_1_network_rigidbody" prot="public" virt="non-virtual">Mirror.Experimental.NetworkRigidbody</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_experimental_1_1_network_transform_base" prot="public" virt="non-virtual">Mirror.Experimental.NetworkTransformBase</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_network_animator" prot="public" virt="non-virtual">Mirror.NetworkAnimator</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_network_room_player" prot="public" virt="non-virtual">Mirror.NetworkRoomPlayer</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_network_transform_base" prot="public" virt="non-virtual">Mirror.NetworkTransformBase</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_network_visibility" prot="public" virt="non-virtual">Mirror.NetworkVisibility</derivedcompoundref>
    <derivedcompoundref refid="class_my_f_p_s_1_1_mirror_1_1_mirror_player_handler" prot="public" virt="non-virtual">MyFPS.Mirror.MirrorPlayerHandler</derivedcompoundref>
    <derivedcompoundref refid="class_my_f_p_s_1_1_mirror_1_1_m_p_player_movement_controller" prot="public" virt="non-virtual">MyFPS.Mirror.MPPlayerMovementController</derivedcompoundref>
    <derivedcompoundref refid="class_my_f_p_s_1_1_mirror_1_1_network_game_player_lobby" prot="public" virt="non-virtual">MyFPS.Mirror.NetworkGamePlayerLobby</derivedcompoundref>
    <derivedcompoundref refid="class_my_f_p_s_1_1_mirror_1_1_network_room_player_lobby" prot="public" virt="non-virtual">MyFPS.Mirror.NetworkRoomPlayerLobby</derivedcompoundref>
    <derivedcompoundref refid="class_my_f_p_s_1_1_mirror_1_1_player_spawn_system" prot="public" virt="non-virtual">MyFPS.Mirror.PlayerSpawnSystem</derivedcompoundref>
    <derivedcompoundref refid="class_my_f_p_s_1_1_m_p_player_camera_controller" prot="public" virt="non-virtual">MyFPS.MPPlayerCameraController</derivedcompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_mirror_1_1_network_behaviour_1a308bb71d0105ceb03bc9f106c32618e1" prot="private" static="yes" mutable="no">
        <type>readonly ILogger</type>
        <definition>readonly ILogger Mirror.NetworkBehaviour.logger</definition>
        <argsstring></argsstring>
        <name>logger</name>
        <initializer>= LogFactory.GetLogger(typeof(<ref refid="class_mirror_1_1_network_behaviour" kindref="compound">NetworkBehaviour</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="27" column="33" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-attrib">
      <memberdef kind="variable" id="class_mirror_1_1_network_behaviour_1a353ad279617c03ab349433f1f38c73bd" prot="package" static="no" mutable="no">
        <type>float</type>
        <definition>float Mirror.NetworkBehaviour.lastSyncTime</definition>
        <argsstring></argsstring>
        <name>lastSyncTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="29" column="24" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_mirror_1_1_network_behaviour_1acf0616ac2f967bdd47bf0f579cefe8a7" prot="public" static="no" mutable="no">
        <type><ref refid="namespace_mirror_1ac9acfe9461893a0d1ebc0eef63d1a6ff" kindref="member">SyncMode</ref></type>
        <definition>SyncMode Mirror.NetworkBehaviour.syncMode</definition>
        <argsstring></argsstring>
        <name>syncMode</name>
        <initializer>= SyncMode.Observers</initializer>
        <briefdescription>
<para>sync mode for OnSerialize </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="35" column="26" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_behaviour_1a94dbe38f0930d3bbde326d0eed7b6f83" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Mirror.NetworkBehaviour.syncInterval</definition>
        <argsstring></argsstring>
        <name>syncInterval</name>
        <initializer>= 0.1f</initializer>
        <briefdescription>
<para>sync interval for OnSerialize (in seconds) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="44" column="23" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_behaviour_1a6a65dec5ade34544074c2f997932e17a" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Mirror.NetworkBehaviour.isServer</definition>
        <argsstring></argsstring>
        <name>isServer</name>
        <initializer>=&gt; netIdentity.isServer</initializer>
        <briefdescription>
<para>Returns true if this object is active on an active server. </para>
        </briefdescription>
        <detaileddescription>
<para>This is only true if the object has been spawned. This is different from NetworkServer.active, which is true if the server itself is active rather than this object being active.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="50" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_behaviour_1ab30e4e9deea5ea728bbf8910ba4aa0fc" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Mirror.NetworkBehaviour.isClient</definition>
        <argsstring></argsstring>
        <name>isClient</name>
        <initializer>=&gt; netIdentity.isClient</initializer>
        <briefdescription>
<para>Returns true if running as a client and this object was spawned by a server. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="55" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_behaviour_1a09f7e5bb2181018bc28fa2c29ed09e8c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Mirror.NetworkBehaviour.isLocalPlayer</definition>
        <argsstring></argsstring>
        <name>isLocalPlayer</name>
        <initializer>=&gt; netIdentity.isLocalPlayer</initializer>
        <briefdescription>
<para>This returns true if this object is the one that represents the player on the local machine. </para>
        </briefdescription>
        <detaileddescription>
<para>In multiplayer games, there are multiple instances of the Player object. The client needs to know which one is for &quot;themselves&quot; so that only that player processes input and potentially has a camera attached. The IsLocalPlayer function will return true only for the player instance that belongs to the player on the local machine, so it can be used to filter out input for non-local players.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="61" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_behaviour_1a8ace9ae035053dab9538482ff74d62ec" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Mirror.NetworkBehaviour.isServerOnly</definition>
        <argsstring></argsstring>
        <name>isServerOnly</name>
        <initializer>=&gt; <ref refid="class_mirror_1_1_network_behaviour_1a6a65dec5ade34544074c2f997932e17a" kindref="member">isServer</ref> &amp;&amp; !<ref refid="class_mirror_1_1_network_behaviour_1ab30e4e9deea5ea728bbf8910ba4aa0fc" kindref="member">isClient</ref></initializer>
        <briefdescription>
<para>True if this object only exists on the server </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="66" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_behaviour_1abe78215943243c0ee91c2bd9a0057915" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Mirror.NetworkBehaviour.isClientOnly</definition>
        <argsstring></argsstring>
        <name>isClientOnly</name>
        <initializer>=&gt; <ref refid="class_mirror_1_1_network_behaviour_1ab30e4e9deea5ea728bbf8910ba4aa0fc" kindref="member">isClient</ref> &amp;&amp; !<ref refid="class_mirror_1_1_network_behaviour_1a6a65dec5ade34544074c2f997932e17a" kindref="member">isServer</ref></initializer>
        <briefdescription>
<para>True if this object exists on a client that is not also acting as a server </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="71" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_behaviour_1abd651058bdaeaf65f691fad5bc366836" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Mirror.NetworkBehaviour.hasAuthority</definition>
        <argsstring></argsstring>
        <name>hasAuthority</name>
        <initializer>=&gt; netIdentity.hasAuthority</initializer>
        <briefdescription>
<para>This returns true if this object is the authoritative version of the object in the distributed network application. </para>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="class_mirror_1_1_network_identity_1a33f4f942b7637852d8b0cfa4025b744a" kindref="member">NetworkIdentity.hasAuthority</ref> value on the <ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity</ref> determines how authority is determined. For most objects, authority is held by the server. For objects with <ref refid="class_mirror_1_1_network_identity_1a33f4f942b7637852d8b0cfa4025b744a" kindref="member">NetworkIdentity.hasAuthority</ref> set, authority is held by the client of that player.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="77" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_behaviour_1ae90a46be8160b84d1256c397718f7ff8" prot="public" static="no" mutable="no">
        <type>uint</type>
        <definition>uint Mirror.NetworkBehaviour.netId</definition>
        <argsstring></argsstring>
        <name>netId</name>
        <initializer>=&gt; netIdentity.netId</initializer>
        <briefdescription>
<para>The unique network Id of this object. </para>
        </briefdescription>
        <detaileddescription>
<para>This is assigned at runtime by the network server and will be unique for all objects for that network session.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="83" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_behaviour_1aa490124a374f6e82a780926b2d11fc23" prot="public" static="no" mutable="no">
        <type><ref refid="class_mirror_1_1_network_connection" kindref="compound">NetworkConnection</ref></type>
        <definition>NetworkConnection Mirror.NetworkBehaviour.connectionToServer</definition>
        <argsstring></argsstring>
        <name>connectionToServer</name>
        <initializer>=&gt; netIdentity.connectionToServer</initializer>
        <briefdescription>
<para>The <ref refid="class_mirror_1_1_network_connection" kindref="compound">NetworkConnection</ref> associated with this <ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity.</ref> This is only valid for player objects on the client. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="88" column="34" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_behaviour_1ae0365575095f9988d6ae2bfef337573a" prot="public" static="no" mutable="no">
        <type><ref refid="class_mirror_1_1_network_connection" kindref="compound">NetworkConnection</ref></type>
        <definition>NetworkConnection Mirror.NetworkBehaviour.connectionToClient</definition>
        <argsstring></argsstring>
        <name>connectionToClient</name>
        <initializer>=&gt; netIdentity.connectionToClient</initializer>
        <briefdescription>
<para>The <ref refid="class_mirror_1_1_network_connection" kindref="compound">NetworkConnection</ref> associated with this <ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity.</ref> This is only valid for player objects on the server. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="93" column="34" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_mirror_1_1_network_behaviour_1a4bb1e7724acf59e001659f0fe0b90c8f" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type>ulong</type>
        <definition>ulong Mirror.NetworkBehaviour.syncVarDirtyBits</definition>
        <argsstring></argsstring>
        <name>syncVarDirtyBits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="95" column="25" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="property" id="class_mirror_1_1_network_behaviour_1a2561021cd1fc5a4fe504a9822c281d11" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity</ref></type>
        <definition>NetworkIdentity Mirror.NetworkBehaviour.netIdentity</definition>
        <argsstring></argsstring>
        <name>netIdentity</name>
        <briefdescription>
<para>Returns the <ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity</ref> of this object </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="124" column="32" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="125" bodyend="139"/>
      </memberdef>
      <memberdef kind="property" id="class_mirror_1_1_network_behaviour_1a2b01d534f1b7fb5ab270423a108ba277" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int Mirror.NetworkBehaviour.ComponentIndex</definition>
        <argsstring></argsstring>
        <name>ComponentIndex</name>
        <briefdescription>
<para>Returns the index of the component on this object </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="144" column="20" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="145" bodyend="161"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_mirror_1_1_network_behaviour_1a3fcb5b65c66b6f05170be6ce4cf67fe7" prot="private" static="no" mutable="no">
        <type>ulong</type>
        <definition>ulong Mirror.NetworkBehaviour.syncVarHookGuard</definition>
        <argsstring></argsstring>
        <name>syncVarHookGuard</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="96" column="15" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_behaviour_1a80ee874771eeb704e71281fa264ed540" prot="private" static="no" mutable="no">
        <type><ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity</ref></type>
        <definition>NetworkIdentity Mirror.NetworkBehaviour.netIdentityCache</definition>
        <argsstring></argsstring>
        <name>netIdentityCache</name>
        <briefdescription>
<para><ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity</ref> component caching for easier access </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="119" column="25" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="119" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_mirror_1_1_network_behaviour_1ac9c5caa586acee344c189db183e95efe" prot="protected" static="no" mutable="no">
        <type>readonly List&lt; <ref refid="interface_mirror_1_1_sync_object" kindref="compound">SyncObject</ref> &gt;</type>
        <definition>readonly List&lt;SyncObject&gt; Mirror.NetworkBehaviour.syncObjects</definition>
        <argsstring></argsstring>
        <name>syncObjects</name>
        <initializer>= new List&lt;<ref refid="interface_mirror_1_1_sync_object" kindref="compound">SyncObject</ref>&gt;()</initializer>
        <briefdescription>
<para>objects that can synchronize themselves, such as synclists </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="114" column="33" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1a48124410c758c6e85f2d5bdb0872e9a6" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Mirror.NetworkBehaviour.getSyncVarHookGuard</definition>
        <argsstring>(ulong dirtyBit)</argsstring>
        <name>getSyncVarHookGuard</name>
        <param>
          <type>ulong</type>
          <declname>dirtyBit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="98" column="24" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1a23b3e60e1abdf4468beb6924bace3ce4" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.NetworkBehaviour.setSyncVarHookGuard</definition>
        <argsstring>(ulong dirtyBit, bool value)</argsstring>
        <name>setSyncVarHookGuard</name>
        <param>
          <type>ulong</type>
          <declname>dirtyBit</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="103" column="24" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="103" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1a3c5d9ef0f604ec39acc7f03269d80656" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.NetworkBehaviour.InitSyncObject</definition>
        <argsstring>(SyncObject syncObject)</argsstring>
        <name>InitSyncObject</name>
        <param>
          <type><ref refid="interface_mirror_1_1_sync_object" kindref="compound">SyncObject</ref></type>
          <declname>syncObject</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="166" column="24" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="166" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1ac1568659d9c736766b14696efbb4dcb1" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.NetworkBehaviour.SendCommandInternal</definition>
        <argsstring>(Type invokeClass, string cmdName, NetworkWriter writer, int channelId, bool ignoreAuthority=false)</argsstring>
        <name>SendCommandInternal</name>
        <param>
          <type>Type</type>
          <declname>invokeClass</declname>
        </param>
        <param>
          <type>string</type>
          <declname>cmdName</declname>
        </param>
        <param>
          <type><ref refid="class_mirror_1_1_network_writer" kindref="compound">NetworkWriter</ref></type>
          <declname>writer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channelId</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ignoreAuthority</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="173" column="24" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="173" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1aea3fef3f468d7fdb63c3d550f238e84a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.NetworkBehaviour.SendRPCInternal</definition>
        <argsstring>(Type invokeClass, string rpcName, NetworkWriter writer, int channelId, bool excludeOwner)</argsstring>
        <name>SendRPCInternal</name>
        <param>
          <type>Type</type>
          <declname>invokeClass</declname>
        </param>
        <param>
          <type>string</type>
          <declname>rpcName</declname>
        </param>
        <param>
          <type><ref refid="class_mirror_1_1_network_writer" kindref="compound">NetworkWriter</ref></type>
          <declname>writer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channelId</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>excludeOwner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="225" column="24" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="225" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1a8bab38b2cbc1df4cba42abf401635a42" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.NetworkBehaviour.SendTargetRPCInternal</definition>
        <argsstring>(NetworkConnection conn, Type invokeClass, string rpcName, NetworkWriter writer, int channelId)</argsstring>
        <name>SendTargetRPCInternal</name>
        <param>
          <type><ref refid="class_mirror_1_1_network_connection" kindref="compound">NetworkConnection</ref></type>
          <declname>conn</declname>
        </param>
        <param>
          <type>Type</type>
          <declname>invokeClass</declname>
        </param>
        <param>
          <type>string</type>
          <declname>rpcName</declname>
        </param>
        <param>
          <type><ref refid="class_mirror_1_1_network_writer" kindref="compound">NetworkWriter</ref></type>
          <declname>writer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channelId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="258" column="24" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="258" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1a8896e37754d4e3a6a2ed2102aebeee9e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.NetworkBehaviour.SendEventInternal</definition>
        <argsstring>(Type invokeClass, string eventName, NetworkWriter writer, int channelId)</argsstring>
        <name>SendEventInternal</name>
        <param>
          <type>Type</type>
          <declname>invokeClass</declname>
        </param>
        <param>
          <type>string</type>
          <declname>eventName</declname>
        </param>
        <param>
          <type><ref refid="class_mirror_1_1_network_writer" kindref="compound">NetworkWriter</ref></type>
          <declname>writer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channelId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="313" column="24" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="313" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1a7a4e336c889c531a69ec0f51900d0657" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Mirror.NetworkBehaviour.SyncVarGameObjectEqual</definition>
        <argsstring>(GameObject newGameObject, uint netIdField)</argsstring>
        <name>SyncVarGameObjectEqual</name>
        <param>
          <type>GameObject</type>
          <declname>newGameObject</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>netIdField</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="354" column="24" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="354" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1ac3e14f45a522cec35780c9afc367e985" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.NetworkBehaviour.SetSyncVarGameObject</definition>
        <argsstring>(GameObject newGameObject, ref GameObject gameObjectField, ulong dirtyBit, ref uint netIdField)</argsstring>
        <name>SetSyncVarGameObject</name>
        <param>
          <type>GameObject</type>
          <declname>newGameObject</declname>
        </param>
        <param>
          <type>ref GameObject</type>
          <declname>gameObjectField</declname>
        </param>
        <param>
          <type>ulong</type>
          <declname>dirtyBit</declname>
        </param>
        <param>
          <type>ref uint</type>
          <declname>netIdField</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="375" column="24" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="375" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1ab794f957ea97db9dec659cbbfe9208f4" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>GameObject</type>
        <definition>GameObject Mirror.NetworkBehaviour.GetSyncVarGameObject</definition>
        <argsstring>(uint netId, ref GameObject gameObjectField)</argsstring>
        <name>GetSyncVarGameObject</name>
        <param>
          <type>uint</type>
          <declname>netId</declname>
        </param>
        <param>
          <type>ref GameObject</type>
          <declname>gameObjectField</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="404" column="30" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="404" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1abdba57d6c8ff0ac89767ca07acd4ffa9" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Mirror.NetworkBehaviour.SyncVarNetworkIdentityEqual</definition>
        <argsstring>(NetworkIdentity newIdentity, uint netIdField)</argsstring>
        <name>SyncVarNetworkIdentityEqual</name>
        <param>
          <type><ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity</ref></type>
          <declname>newIdentity</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>netIdField</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="423" column="24" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="423" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1a2b4fc9f99fffd61bf67b4e7995d1d4bb" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.NetworkBehaviour.SetSyncVarNetworkIdentity</definition>
        <argsstring>(NetworkIdentity newIdentity, ref NetworkIdentity identityField, ulong dirtyBit, ref uint netIdField)</argsstring>
        <name>SetSyncVarNetworkIdentity</name>
        <param>
          <type><ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity</ref></type>
          <declname>newIdentity</declname>
        </param>
        <param>
          <type>ref <ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity</ref></type>
          <declname>identityField</declname>
        </param>
        <param>
          <type>ulong</type>
          <declname>dirtyBit</declname>
        </param>
        <param>
          <type>ref uint</type>
          <declname>netIdField</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="441" column="24" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="441" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1a46b6f2edcee89cede23050a2177098df" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity</ref></type>
        <definition>NetworkIdentity Mirror.NetworkBehaviour.GetSyncVarNetworkIdentity</definition>
        <argsstring>(uint netId, ref NetworkIdentity identityField)</argsstring>
        <name>GetSyncVarNetworkIdentity</name>
        <param>
          <type>uint</type>
          <declname>netId</declname>
        </param>
        <param>
          <type>ref <ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity</ref></type>
          <declname>identityField</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="466" column="35" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="466" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1a46c40d5ff8bc8bea02e3c0b3886e768a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Mirror.NetworkBehaviour.SyncVarEqual&lt; T &gt;</definition>
        <argsstring>(T value, ref T fieldValue)</argsstring>
        <name>SyncVarEqual&lt; T &gt;</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <param>
          <type>ref T</type>
          <declname>fieldValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="481" column="19" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="481" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1a4087b2993b045a197b9b653176411f05" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.NetworkBehaviour.SetSyncVar&lt; T &gt;</definition>
        <argsstring>(T value, ref T fieldValue, ulong dirtyBit)</argsstring>
        <name>SetSyncVar&lt; T &gt;</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <param>
          <type>ref T</type>
          <declname>fieldValue</declname>
        </param>
        <param>
          <type>ulong</type>
          <declname>dirtyBit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="488" column="19" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="488" bodyend="493"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1aea84bcfc5a512ecb2b7a601bf1598d24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Mirror.NetworkBehaviour.InvokeCommand</definition>
        <argsstring>(int cmdHash, NetworkReader reader)</argsstring>
        <name>InvokeCommand</name>
        <param>
          <type>int</type>
          <declname>cmdHash</declname>
        </param>
        <param>
          <type><ref refid="class_mirror_1_1_network_reader" kindref="compound">NetworkReader</ref></type>
          <declname>reader</declname>
        </param>
        <briefdescription>
<para>Manually invoke a Command. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmdHash</parametername>
</parameternamelist>
<parameterdescription>
<para>Hash of the Command name.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameters to pass to the command.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="217" column="29" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="217" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1a52778428d8b4058c6db0db9e87f88394" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Mirror.NetworkBehaviour.InvokeRPC</definition>
        <argsstring>(int rpcHash, NetworkReader reader)</argsstring>
        <name>InvokeRPC</name>
        <param>
          <type>int</type>
          <declname>rpcHash</declname>
        </param>
        <param>
          <type><ref refid="class_mirror_1_1_network_reader" kindref="compound">NetworkReader</ref></type>
          <declname>reader</declname>
        </param>
        <briefdescription>
<para>Manually invoke an RPC function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rpcHash</parametername>
</parameternamelist>
<parameterdescription>
<para>Hash of the RPC name.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameters to pass to the RPC function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="305" column="29" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="305" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1a5b931086714c4cfb3dde3118dbfdc7a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Mirror.NetworkBehaviour.InvokeSyncEvent</definition>
        <argsstring>(int eventHash, NetworkReader reader)</argsstring>
        <name>InvokeSyncEvent</name>
        <param>
          <type>int</type>
          <declname>eventHash</declname>
        </param>
        <param>
          <type><ref refid="class_mirror_1_1_network_reader" kindref="compound">NetworkReader</ref></type>
          <declname>reader</declname>
        </param>
        <briefdescription>
<para>Manually invoke a SyncEvent. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eventHash</parametername>
</parameternamelist>
<parameterdescription>
<para>Hash of the SyncEvent name.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameters to pass to the SyncEvent.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="342" column="29" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="342" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1addda8533ab954db571bda550862034f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.NetworkBehaviour.SetDirtyBit</definition>
        <argsstring>(ulong dirtyBit)</argsstring>
        <name>SetDirtyBit</name>
        <param>
          <type>ulong</type>
          <declname>dirtyBit</declname>
        </param>
        <briefdescription>
<para>Used to set the behaviour as dirty, so that a network update will be sent for the object. these are masks, not bit numbers, ie. 0x004 not 2 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dirtyBit</parametername>
</parameternamelist>
<parameterdescription>
<para>Bit mask to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="501" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="501" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1a0915f57f9b3f057d544235740e920a2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.NetworkBehaviour.ClearAllDirtyBits</definition>
        <argsstring>()</argsstring>
        <name>ClearAllDirtyBits</name>
        <briefdescription>
<para>This clears all the dirty bits that were set on this script by SetDirtyBits(); </para>
        </briefdescription>
        <detaileddescription>
<para>This is automatically invoked when an update is sent for this object, but can be called manually as well.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="510" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="510" bodyend="523"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1a76bf9eb3b49700f653620bbf5b7aa826" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Mirror.NetworkBehaviour.IsDirty</definition>
        <argsstring>()</argsstring>
        <name>IsDirty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="540" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="540" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1af8b7933f4a95d31db460935cd7906c0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Mirror.NetworkBehaviour.OnSerialize</definition>
        <argsstring>(NetworkWriter writer, bool initialState)</argsstring>
        <name>OnSerialize</name>
        <reimplementedby refid="class_mirror_1_1_network_animator_1a126c378d4196ae17f4b1661cad4faa4e">OnSerialize</reimplementedby>
        <reimplementedby refid="class_mirror_1_1_network_transform_base_1a7eaa6f676e85d233513767ded9e0c418">OnSerialize</reimplementedby>
        <param>
          <type><ref refid="class_mirror_1_1_network_writer" kindref="compound">NetworkWriter</ref></type>
          <declname>writer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>initialState</declname>
        </param>
        <briefdescription>
<para>Virtual function to override to send custom serialization data. The corresponding function to send serialization data is <ref refid="class_mirror_1_1_network_behaviour_1a26853c614ebc9c116a7d4f045d723be1" kindref="member">OnDeserialize()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>The initialState flag is useful to differentiate between the first time an object is serialized and when incremental updates can be sent. The first time an object is sent to a client, it must include a full state snapshot, but subsequent updates can save on bandwidth by including only incremental changes. Note that SyncVar hook functions are not called when initialState is true, only for incremental updates.</para>
<para>If a class has SyncVars, then an implementation of this function and <ref refid="class_mirror_1_1_network_behaviour_1a26853c614ebc9c116a7d4f045d723be1" kindref="member">OnDeserialize()</ref> are added automatically to the class. So a class that has SyncVars cannot also have custom serialization functions.</para>
<para>The OnSerialize function should return true to indicate that an update should be sent. If it returns true, then the dirty bits for that script are set to zero, if it returns false then the dirty bits are not changed. This allows multiple changes to a script to be accumulated over time and sent when the system is ready, instead of every frame.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writer</parametername>
</parameternamelist>
<parameterdescription>
<para>Writer to use to write to the stream.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initialState</parametername>
</parameternamelist>
<parameterdescription>
<para>If this is being called to send initial state.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if data was written.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="560" column="29" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="560" bodyend="577"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1a26853c614ebc9c116a7d4f045d723be1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Mirror.NetworkBehaviour.OnDeserialize</definition>
        <argsstring>(NetworkReader reader, bool initialState)</argsstring>
        <name>OnDeserialize</name>
        <reimplementedby refid="class_mirror_1_1_network_animator_1a3bfef0fd09998b38a2b59232a207954c">OnDeserialize</reimplementedby>
        <reimplementedby refid="class_mirror_1_1_network_transform_base_1a98908233dd4f50efa5293edca2974a26">OnDeserialize</reimplementedby>
        <param>
          <type><ref refid="class_mirror_1_1_network_reader" kindref="compound">NetworkReader</ref></type>
          <declname>reader</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>initialState</declname>
        </param>
        <briefdescription>
<para>Virtual function to override to receive custom serialization data. The corresponding function to send serialization data is <ref refid="class_mirror_1_1_network_behaviour_1af8b7933f4a95d31db460935cd7906c0c" kindref="member">OnSerialize()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>Reader to read from the stream.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initialState</parametername>
</parameternamelist>
<parameterdescription>
<para>True if being sent initial state.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="585" column="29" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="585" bodyend="597"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1ace23cde46937b5fe490499d983a7e6e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Mirror.NetworkBehaviour.SerializeSyncVars</definition>
        <argsstring>(NetworkWriter writer, bool initialState)</argsstring>
        <name>SerializeSyncVars</name>
        <param>
          <type><ref refid="class_mirror_1_1_network_writer" kindref="compound">NetworkWriter</ref></type>
          <declname>writer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>initialState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="600" column="29" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="600" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1a79ce2238da87ce060a835113911f3bea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Mirror.NetworkBehaviour.DeserializeSyncVars</definition>
        <argsstring>(NetworkReader reader, bool initialState)</argsstring>
        <name>DeserializeSyncVars</name>
        <param>
          <type><ref refid="class_mirror_1_1_network_reader" kindref="compound">NetworkReader</ref></type>
          <declname>reader</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>initialState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="614" column="29" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="614" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1ad49cab5e0ac5e4dace701541c105d371" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Mirror.NetworkBehaviour.SerializeObjectsAll</definition>
        <argsstring>(NetworkWriter writer)</argsstring>
        <name>SerializeObjectsAll</name>
        <param>
          <type><ref refid="class_mirror_1_1_network_writer" kindref="compound">NetworkWriter</ref></type>
          <declname>writer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="639" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="639" bodyend="649"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1a4ba0673f1259fbf07a169aa6ef95dd45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Mirror.NetworkBehaviour.SerializeObjectsDelta</definition>
        <argsstring>(NetworkWriter writer)</argsstring>
        <name>SerializeObjectsDelta</name>
        <param>
          <type><ref refid="class_mirror_1_1_network_writer" kindref="compound">NetworkWriter</ref></type>
          <declname>writer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="651" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="651" bodyend="667"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1aea16efb5a763d21dbaa89a6ed88d2bfd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Mirror.NetworkBehaviour.OnNetworkDestroy</definition>
        <argsstring>()</argsstring>
        <name>OnNetworkDestroy</name>
        <briefdescription>
<para>Obsolete: Use <ref refid="class_mirror_1_1_network_behaviour_1adabae0597e1228ad256cb35d1616c1ca" kindref="member">OnStopClient()</ref> instead </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="704" column="29" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="704" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1adabae0597e1228ad256cb35d1616c1ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Mirror.NetworkBehaviour.OnStopClient</definition>
        <argsstring>()</argsstring>
        <name>OnStopClient</name>
        <reimplementedby refid="class_my_f_p_s_1_1_mirror_1_1_network_game_player_lobby_1a89de39087daa207a3c4b31d7c3d47594">OnStopClient</reimplementedby>
        <reimplementedby refid="class_my_f_p_s_1_1_mirror_1_1_network_room_player_lobby_1a96fe05fb5d9079852422f84f214eaac8">OnStopClient</reimplementedby>
        <briefdescription>
<para>This is invoked on clients when the server has caused this object to be destroyed. </para>
        </briefdescription>
        <detaileddescription>
<para>This can be used as a hook to invoke effects or do client specific cleanup.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="710" column="29" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="710" bodyend="716"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1a7849fd960925fc37005a1b8f2aa065b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Mirror.NetworkBehaviour.OnStartServer</definition>
        <argsstring>()</argsstring>
        <name>OnStartServer</name>
        <reimplementedby refid="class_mirror_1_1_network_match_checker_1a5d3be00b811564a494364df1b1e657b8">OnStartServer</reimplementedby>
        <reimplementedby refid="class_mirror_1_1_network_proximity_checker_1a47d5100dfe87995818c6aa340d6a235b">OnStartServer</reimplementedby>
        <reimplementedby refid="class_mirror_1_1_network_scene_checker_1af51ebf8edc6db7b6013a7c6fef9391b7">OnStartServer</reimplementedby>
        <reimplementedby refid="class_mirror_1_1_examples_1_1_additive_1_1_random_color_1ae2702b98fd96062f928d43a95b993710">OnStartServer</reimplementedby>
        <reimplementedby refid="class_mirror_1_1_examples_1_1_basic_1_1_player_1adaaf43858cfa131f4fa88b71932f1112">OnStartServer</reimplementedby>
        <reimplementedby refid="class_mirror_1_1_examples_1_1_one_k_1_1_monster_movement_1a92fd322b0a71ca65940390d9b39f4e10">OnStartServer</reimplementedby>
        <reimplementedby refid="class_mirror_1_1_cloud_1_1_examples_1_1_pong_1_1_ball_1a6a2290778efbc26cdc8f8b791f9450b1">OnStartServer</reimplementedby>
        <reimplementedby refid="class_mirror_1_1_cloud_1_1_examples_1_1_pong_1_1_ball_manager_1a57f13b3d70cc053435bbb4f7d0d00774">OnStartServer</reimplementedby>
        <reimplementedby refid="class_mirror_1_1_examples_1_1_multiple_additive_scenes_1_1_random_color_1ab71cdd2df63d39eebab4adc028391db9">OnStartServer</reimplementedby>
        <reimplementedby refid="class_mirror_1_1_examples_1_1_multiple_additive_scenes_1_1_spawner_1a086f318348c0027670cd599467d9b5d7">OnStartServer</reimplementedby>
        <reimplementedby refid="class_mirror_1_1_examples_1_1_pong_1_1_ball_1a3be0965ff33ec34ff4b4c6ac5081b5fc">OnStartServer</reimplementedby>
        <reimplementedby refid="class_mirror_1_1_examples_1_1_network_room_1_1_player_score_1ae284aa27a4b84ff237759ee4c1e61f2b">OnStartServer</reimplementedby>
        <reimplementedby refid="class_mirror_1_1_examples_1_1_network_room_1_1_random_color_1a91ecbb5c73d1f0876f002a2f848bd82b">OnStartServer</reimplementedby>
        <reimplementedby refid="class_mirror_1_1_examples_1_1_network_room_1_1_spawner_1ac0c94adbf0f75eb315affc6b1cc2f645">OnStartServer</reimplementedby>
        <reimplementedby refid="class_mirror_1_1_examples_1_1_tanks_1_1_projectile_1af50741b3ace021b7156bbaca8b191593">OnStartServer</reimplementedby>
        <reimplementedby refid="class_my_f_p_s_1_1_mirror_1_1_player_spawn_system_1a2c6457a76c067970125a267bcfef3248">OnStartServer</reimplementedby>
        <briefdescription>
<para>This is invoked for <ref refid="class_mirror_1_1_network_behaviour" kindref="compound">NetworkBehaviour</ref> objects when they become active on the server. </para>
        </briefdescription>
        <detaileddescription>
<para>This could be triggered by NetworkServer.Listen() for objects in the scene, or by NetworkServer.Spawn() for objects that are dynamically created.</para>
<para>This will be called for objects on a &quot;host&quot; as well as for object on a dedicated server.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="723" column="29" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1a27dc77be5d2117b34157b3836f333690" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Mirror.NetworkBehaviour.OnStopServer</definition>
        <argsstring>()</argsstring>
        <name>OnStopServer</name>
        <reimplementedby refid="class_mirror_1_1_network_proximity_checker_1a35d47e2d6e1b3ac86d1839929db4a198">OnStopServer</reimplementedby>
        <reimplementedby refid="class_mirror_1_1_cloud_1_1_examples_1_1_pong_1_1_ball_manager_1ac6a3fee59c6beae30aa9620f2abbba72">OnStopServer</reimplementedby>
        <briefdescription>
<para>Invoked on the server when the object is unspawned </para>
        </briefdescription>
        <detaileddescription>
<para>Useful for saving object data in persistant storage</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="729" column="29" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="729" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1a699d2fda0c0c8843d8964ffed01d016c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Mirror.NetworkBehaviour.OnStartClient</definition>
        <argsstring>()</argsstring>
        <name>OnStartClient</name>
        <reimplementedby refid="class_mirror_1_1_examples_1_1_basic_1_1_player_1a3a32ec29ed604ac83eaf6e6d4abb2b19">OnStartClient</reimplementedby>
        <reimplementedby refid="class_mirror_1_1_examples_1_1_network_room_1_1_network_room_player_ext_1a6d12a7649e3fc4afbcdb47f55836799f">OnStartClient</reimplementedby>
        <reimplementedby refid="class_my_f_p_s_1_1_mirror_1_1_network_game_player_lobby_1a0dacd55bc9ba224a51cdc091440f8839">OnStartClient</reimplementedby>
        <reimplementedby refid="class_my_f_p_s_1_1_mirror_1_1_network_room_player_lobby_1ac6ae1ca1402f24cd46c7e0a9087d9b83">OnStartClient</reimplementedby>
        <briefdescription>
<para>Called on every <ref refid="class_mirror_1_1_network_behaviour" kindref="compound">NetworkBehaviour</ref> when it is activated on a client. </para>
        </briefdescription>
        <detaileddescription>
<para>Objects on the host have this function called, as there is a local client on the host. The values of SyncVars on object are guaranteed to be initialized correctly with the latest state from the server when this function is called on the client.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="735" column="29" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="735" bodyend="735"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1a8506dcb5c3cbc297a667e795cc9eafd0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Mirror.NetworkBehaviour.OnStartLocalPlayer</definition>
        <argsstring>()</argsstring>
        <name>OnStartLocalPlayer</name>
        <reimplementedby refid="class_mirror_1_1_examples_1_1_additive_1_1_player_controller_1a3e762b756320326dea923556db942802">OnStartLocalPlayer</reimplementedby>
        <reimplementedby refid="class_mirror_1_1_examples_1_1_basic_1_1_player_1aa1c251dcc0a76068fdde108ca9bc2691">OnStartLocalPlayer</reimplementedby>
        <reimplementedby refid="class_mirror_1_1_examples_1_1_multiple_additive_scenes_1_1_player_controller_1a287259b857ae4ba7b25b337b44436853">OnStartLocalPlayer</reimplementedby>
        <reimplementedby refid="class_mirror_1_1_examples_1_1_network_room_1_1_player_controller_1a9d87306c89fcc445ac5014a1f5b8383d">OnStartLocalPlayer</reimplementedby>
        <briefdescription>
<para>Called when the local player object has been set up. </para>
        </briefdescription>
        <detaileddescription>
<para>This happens after <ref refid="class_mirror_1_1_network_behaviour_1a699d2fda0c0c8843d8964ffed01d016c" kindref="member">OnStartClient()</ref>, as it is triggered by an ownership message from the server. This is an appropriate place to activate components or functionality that should only be active for the local player, such as cameras and input.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="741" column="29" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="741" bodyend="741"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1a1e36e4640f967426ffc113e26e649345" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Mirror.NetworkBehaviour.OnStartAuthority</definition>
        <argsstring>()</argsstring>
        <name>OnStartAuthority</name>
        <reimplementedby refid="class_my_f_p_s_1_1_m_p_player_camera_controller_1aed4dddf58063ece4580d67b1ae2e63b9">OnStartAuthority</reimplementedby>
        <reimplementedby refid="class_my_f_p_s_1_1_mirror_1_1_m_p_player_movement_controller_1aeba49ccc97051a31f8da728e2da8f30f">OnStartAuthority</reimplementedby>
        <reimplementedby refid="class_my_f_p_s_1_1_mirror_1_1_network_room_player_lobby_1af373b3e24825c3fe6741da812b1a11f8">OnStartAuthority</reimplementedby>
        <briefdescription>
<para>This is invoked on behaviours that have authority, based on context and <ref refid="class_mirror_1_1_network_identity_1a33f4f942b7637852d8b0cfa4025b744a" kindref="member">NetworkIdentity.hasAuthority</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>This is called after <ref refid="class_mirror_1_1_network_behaviour_1a7849fd960925fc37005a1b8f2aa065b3" kindref="member">OnStartServer</ref> and before <ref refid="class_mirror_1_1_network_behaviour_1a699d2fda0c0c8843d8964ffed01d016c" kindref="member">OnStartClient.</ref></para>
<para>When <ref refid="class_mirror_1_1_network_identity_1a2bf39f8adcbc4aa9b5e105d741ff4aa6" kindref="member">AssignClientAuthority</ref> is called on the server, this will be called on the client that owns the object. When an object is spawned with <ref refid="" kindref="compound">NetworkServer.Spawn</ref> with a <ref refid="class_mirror_1_1_network_connection" kindref="compound">NetworkConnection</ref> parameter included, this will be called on the client that owns the object.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="748" column="29" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="748" bodyend="748"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1afe494cde0781a38644c80ec14e177f59" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Mirror.NetworkBehaviour.OnStopAuthority</definition>
        <argsstring>()</argsstring>
        <name>OnStopAuthority</name>
        <briefdescription>
<para>This is invoked on behaviours when authority is removed. </para>
        </briefdescription>
        <detaileddescription>
<para>When <ref refid="class_mirror_1_1_network_identity_1ab1c34c695ff0a05c3e81d2c530da822f" kindref="member">NetworkIdentity.RemoveClientAuthority</ref> is called on the server, this will be called on the client that owns the object.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="754" column="29" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="754" bodyend="754"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1aaf1ba43c144caa0664402d9d1f579b67" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Mirror.NetworkBehaviour.AnySyncObjectDirty</definition>
        <argsstring>()</argsstring>
        <name>AnySyncObjectDirty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="525" column="14" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="525" bodyend="538"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1abb5fb1c5753b32375a85841174ea8013" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ulong</type>
        <definition>ulong Mirror.NetworkBehaviour.DirtyObjectBits</definition>
        <argsstring>()</argsstring>
        <name>DirtyObjectBits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="625" column="24" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="625" bodyend="637"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1a7151d225ada4d6ffc1bbc094cc803f26" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.NetworkBehaviour.DeSerializeObjectsAll</definition>
        <argsstring>(NetworkReader reader)</argsstring>
        <name>DeSerializeObjectsAll</name>
        <param>
          <type><ref refid="class_mirror_1_1_network_reader" kindref="compound">NetworkReader</ref></type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="669" column="23" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="669" bodyend="676"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1a0d125d48839a57c368c039e6476b521f" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.NetworkBehaviour.DeSerializeObjectsDelta</definition>
        <argsstring>(NetworkReader reader)</argsstring>
        <name>DeSerializeObjectsDelta</name>
        <param>
          <type><ref refid="class_mirror_1_1_network_reader" kindref="compound">NetworkReader</ref></type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="678" column="23" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="678" bodyend="689"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_behaviour_1a08c0ff954baaab3c19ddab7bbd80d09a" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.NetworkBehaviour.ResetSyncObjects</definition>
        <argsstring>()</argsstring>
        <name>ResetSyncObjects</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="691" column="23" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="691" bodyend="697"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class which should be inherited by scripts which contain networking functionality. </para>
    </briefdescription>
    <detaileddescription>
<para>This is a MonoBehaviour class so scripts which need to use the networking feature should inherit this class instead of MonoBehaviour. It allows you to invoke networked actions, receive various callbacks, and automatically synchronize state from server-to-client.</para>
<para>The <ref refid="class_mirror_1_1_network_behaviour" kindref="compound">NetworkBehaviour</ref> component requires a <ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity</ref> on the game object. There can be multiple NetworkBehaviours on a single game object. For an object with sub-components in a hierarchy, the <ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity</ref> must be on the root object, and <ref refid="class_mirror_1_1_network_behaviour" kindref="compound">NetworkBehaviour</ref> scripts must also be on the root object.</para>
<para>Some of the built-in components of the networking system are derived from <ref refid="class_mirror_1_1_network_behaviour" kindref="compound">NetworkBehaviour</ref>, including NetworkTransport, <ref refid="class_mirror_1_1_network_animator" kindref="compound">NetworkAnimator</ref> and <ref refid="class_mirror_1_1_network_proximity_checker" kindref="compound">NetworkProximityChecker</ref>.</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="48">
        <label>MyFPS.Mirror.NetworkGamePlayerLobby</label>
        <link refid="class_my_f_p_s_1_1_mirror_1_1_network_game_player_lobby"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="33">
        <label>Mirror.Experimental.NetworkTransform</label>
        <link refid="class_mirror_1_1_experimental_1_1_network_transform"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>Mirror.Examples.OneK.PlayerMovement</label>
        <link refid="class_mirror_1_1_examples_1_1_one_k_1_1_player_movement"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="45">
        <label>Mirror.NetworkSceneChecker</label>
        <link refid="class_mirror_1_1_network_scene_checker"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>Mirror.Experimental.NetworkRigidbody</label>
        <link refid="class_mirror_1_1_experimental_1_1_network_rigidbody"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="37">
        <label>Mirror.Examples.NetworkRoom.NetworkRoomPlayerExt</label>
        <link refid="class_mirror_1_1_examples_1_1_network_room_1_1_network_room_player_ext"/>
        <childnode refid="36" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>Mirror.Examples.NetworkRoom.RandomColor</label>
        <link refid="class_mirror_1_1_examples_1_1_network_room_1_1_random_color"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="42">
        <label>Mirror.NetworkVisibility</label>
        <link refid="class_mirror_1_1_network_visibility"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>Mirror.Examples.RigidbodyPhysics.AddForce</label>
        <link refid="class_mirror_1_1_examples_1_1_rigidbody_physics_1_1_add_force"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="49">
        <label>MyFPS.Mirror.NetworkRoomPlayerLobby</label>
        <link refid="class_my_f_p_s_1_1_mirror_1_1_network_room_player_lobby"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="32">
        <label>Mirror.Experimental.NetworkTransformBase</label>
        <link refid="class_mirror_1_1_experimental_1_1_network_transform_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="47">
        <label>MyFPS.Mirror.MPPlayerMovementController</label>
        <link refid="class_my_f_p_s_1_1_mirror_1_1_m_p_player_movement_controller"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="38">
        <label>Mirror.NetworkLobbyPlayer</label>
        <link refid="class_mirror_1_1_network_lobby_player"/>
        <childnode refid="36" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>Mirror.Examples.Pong.Ball</label>
        <link refid="class_mirror_1_1_examples_1_1_pong_1_1_ball"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>Mirror.Examples.MultipleAdditiveScenes.RandomColor</label>
        <link refid="class_mirror_1_1_examples_1_1_multiple_additive_scenes_1_1_random_color"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="50">
        <label>MyFPS.Mirror.PlayerSpawnSystem</label>
        <link refid="class_my_f_p_s_1_1_mirror_1_1_player_spawn_system"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Mirror.Cloud.Examples.Pong.Player</label>
        <link refid="class_mirror_1_1_cloud_1_1_examples_1_1_pong_1_1_player"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>Mirror.Examples.NetworkRoom.PlayerScore</label>
        <link refid="class_mirror_1_1_examples_1_1_network_room_1_1_player_score"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="39">
        <label>Mirror.NetworkTransformBase</label>
        <link refid="class_mirror_1_1_network_transform_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>Mirror.Examples.Additive.ShootingTankBehaviour</label>
        <link refid="class_mirror_1_1_examples_1_1_additive_1_1_shooting_tank_behaviour"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>Mirror.Examples.Chat.Player</label>
        <link refid="class_mirror_1_1_examples_1_1_chat_1_1_player"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>Mirror.Examples.MultipleAdditiveScenes.Reward</label>
        <link refid="class_mirror_1_1_examples_1_1_multiple_additive_scenes_1_1_reward"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="51">
        <label>MyFPS.MPPlayerCameraController</label>
        <link refid="class_my_f_p_s_1_1_m_p_player_camera_controller"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>Mirror.Examples.Tanks.Tank</label>
        <link refid="class_mirror_1_1_examples_1_1_tanks_1_1_tank"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="36">
        <label>Mirror.NetworkRoomPlayer</label>
        <link refid="class_mirror_1_1_network_room_player"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>Mirror.Examples.NetworkRoom.PlayerController</label>
        <link refid="class_mirror_1_1_examples_1_1_network_room_1_1_player_controller"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="41">
        <label>Mirror.NetworkTransformChild</label>
        <link refid="class_mirror_1_1_network_transform_child"/>
        <childnode refid="39" relation="public-inheritance">
        </childnode>
      </node>
      <node id="30">
        <label>Mirror.Experimental.NetworkLerpRigidbody</label>
        <link refid="class_mirror_1_1_experimental_1_1_network_lerp_rigidbody"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>Mirror.Examples.OneK.MonsterMovement</label>
        <link refid="class_mirror_1_1_examples_1_1_one_k_1_1_monster_movement"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>Mirror.Examples.Pong.Player</label>
        <link refid="class_mirror_1_1_examples_1_1_pong_1_1_player"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>Mirror.Examples.Basic.Player</label>
        <link refid="class_mirror_1_1_examples_1_1_basic_1_1_player"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>Mirror.Examples.MultipleAdditiveScenes.PlayerScore</label>
        <link refid="class_mirror_1_1_examples_1_1_multiple_additive_scenes_1_1_player_score"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="46">
        <label>MyFPS.Mirror.MirrorPlayerHandler</label>
        <link refid="class_my_f_p_s_1_1_mirror_1_1_mirror_player_handler"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>Mirror.Examples.MultipleAdditiveScenes.Spawner</label>
        <link refid="class_mirror_1_1_examples_1_1_multiple_additive_scenes_1_1_spawner"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>MonoBehaviour</label>
      </node>
      <node id="3">
        <label>Mirror.Cloud.Examples.Pong.Ball</label>
        <link refid="class_mirror_1_1_cloud_1_1_examples_1_1_pong_1_1_ball"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>Mirror.Examples.Additive.ZoneHandler</label>
        <link refid="class_mirror_1_1_examples_1_1_additive_1_1_zone_handler"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Mirror.Examples.Additive.PlayerController</label>
        <link refid="class_mirror_1_1_examples_1_1_additive_1_1_player_controller"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>Mirror.NetworkMatchChecker</label>
        <link refid="class_mirror_1_1_network_match_checker"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Mirror.NetworkBehaviour</label>
        <link refid="class_mirror_1_1_network_behaviour"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="34">
        <label>Mirror.Experimental.NetworkTransformChild</label>
        <link refid="class_mirror_1_1_experimental_1_1_network_transform_child"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>Mirror.Examples.NetworkRoom.Reward</label>
        <link refid="class_mirror_1_1_examples_1_1_network_room_1_1_reward"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>Mirror.Examples.MultipleAdditiveScenes.PlayerController</label>
        <link refid="class_mirror_1_1_examples_1_1_multiple_additive_scenes_1_1_player_controller"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>Mirror.Examples.NetworkRoom.Spawner</label>
        <link refid="class_mirror_1_1_examples_1_1_network_room_1_1_spawner"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Mirror.Cloud.Examples.Pong.BallManager</label>
        <link refid="class_mirror_1_1_cloud_1_1_examples_1_1_pong_1_1_ball_manager"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="44">
        <label>Mirror.NetworkProximityChecker</label>
        <link refid="class_mirror_1_1_network_proximity_checker"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>Mirror.NetworkAnimator</label>
        <link refid="class_mirror_1_1_network_animator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Mirror.Examples.Additive.RandomColor</label>
        <link refid="class_mirror_1_1_examples_1_1_additive_1_1_random_color"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="40">
        <label>Mirror.NetworkTransform</label>
        <link refid="class_mirror_1_1_network_transform"/>
        <childnode refid="39" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>Mirror.Examples.MultipleAdditiveScenes.PhysicsCollision</label>
        <link refid="class_mirror_1_1_examples_1_1_multiple_additive_scenes_1_1_physics_collision"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>Mirror.Examples.Tanks.Projectile</label>
        <link refid="class_mirror_1_1_examples_1_1_tanks_1_1_projectile"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>IDisposable</label>
      </node>
      <node id="3">
        <label>Mirror.NetworkConnection</label>
        <link refid="class_mirror_1_1_network_connection"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>MonoBehaviour</label>
      </node>
      <node id="1">
        <label>Mirror.NetworkBehaviour</label>
        <link refid="class_mirror_1_1_network_behaviour"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>connectionToClient</edgelabel>
          <edgelabel>connectionToServer</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" line="25" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkBehaviour.cs" bodystart="26" bodyend="755"/>
    <listofallmembers>
      <member refid="class_mirror_1_1_network_behaviour_1aaf1ba43c144caa0664402d9d1f579b67" prot="private" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>AnySyncObjectDirty</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a0915f57f9b3f057d544235740e920a2f" prot="public" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>ClearAllDirtyBits</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a2b01d534f1b7fb5ab270423a108ba277" prot="public" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>ComponentIndex</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1ae0365575095f9988d6ae2bfef337573a" prot="public" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>connectionToClient</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1aa490124a374f6e82a780926b2d11fc23" prot="public" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>connectionToServer</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a7151d225ada4d6ffc1bbc094cc803f26" prot="package" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>DeSerializeObjectsAll</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a0d125d48839a57c368c039e6476b521f" prot="package" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>DeSerializeObjectsDelta</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a79ce2238da87ce060a835113911f3bea" prot="public" virt="virtual"><scope>Mirror::NetworkBehaviour</scope><name>DeserializeSyncVars</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1abb5fb1c5753b32375a85841174ea8013" prot="package" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>DirtyObjectBits</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1ab794f957ea97db9dec659cbbfe9208f4" prot="protected" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>GetSyncVarGameObject</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a48124410c758c6e85f2d5bdb0872e9a6" prot="protected" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>getSyncVarHookGuard</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a46b6f2edcee89cede23050a2177098df" prot="protected" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>GetSyncVarNetworkIdentity</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1abd651058bdaeaf65f691fad5bc366836" prot="public" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>hasAuthority</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a3c5d9ef0f604ec39acc7f03269d80656" prot="protected" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>InitSyncObject</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1aea84bcfc5a512ecb2b7a601bf1598d24" prot="public" virt="virtual"><scope>Mirror::NetworkBehaviour</scope><name>InvokeCommand</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a52778428d8b4058c6db0db9e87f88394" prot="public" virt="virtual"><scope>Mirror::NetworkBehaviour</scope><name>InvokeRPC</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a5b931086714c4cfb3dde3118dbfdc7a9" prot="public" virt="virtual"><scope>Mirror::NetworkBehaviour</scope><name>InvokeSyncEvent</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1ab30e4e9deea5ea728bbf8910ba4aa0fc" prot="public" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>isClient</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1abe78215943243c0ee91c2bd9a0057915" prot="public" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>isClientOnly</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a76bf9eb3b49700f653620bbf5b7aa826" prot="public" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>IsDirty</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a09f7e5bb2181018bc28fa2c29ed09e8c" prot="public" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>isLocalPlayer</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a6a65dec5ade34544074c2f997932e17a" prot="public" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>isServer</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a8ace9ae035053dab9538482ff74d62ec" prot="public" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>isServerOnly</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a353ad279617c03ab349433f1f38c73bd" prot="package" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>lastSyncTime</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a308bb71d0105ceb03bc9f106c32618e1" prot="private" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>logger</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1ae90a46be8160b84d1256c397718f7ff8" prot="public" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>netId</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a2561021cd1fc5a4fe504a9822c281d11" prot="public" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>netIdentity</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a80ee874771eeb704e71281fa264ed540" prot="private" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>netIdentityCache</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a26853c614ebc9c116a7d4f045d723be1" prot="public" virt="virtual"><scope>Mirror::NetworkBehaviour</scope><name>OnDeserialize</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1aea16efb5a763d21dbaa89a6ed88d2bfd" prot="public" virt="virtual"><scope>Mirror::NetworkBehaviour</scope><name>OnNetworkDestroy</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1af8b7933f4a95d31db460935cd7906c0c" prot="public" virt="virtual"><scope>Mirror::NetworkBehaviour</scope><name>OnSerialize</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a1e36e4640f967426ffc113e26e649345" prot="public" virt="virtual"><scope>Mirror::NetworkBehaviour</scope><name>OnStartAuthority</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a699d2fda0c0c8843d8964ffed01d016c" prot="public" virt="virtual"><scope>Mirror::NetworkBehaviour</scope><name>OnStartClient</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a8506dcb5c3cbc297a667e795cc9eafd0" prot="public" virt="virtual"><scope>Mirror::NetworkBehaviour</scope><name>OnStartLocalPlayer</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a7849fd960925fc37005a1b8f2aa065b3" prot="public" virt="virtual"><scope>Mirror::NetworkBehaviour</scope><name>OnStartServer</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1afe494cde0781a38644c80ec14e177f59" prot="public" virt="virtual"><scope>Mirror::NetworkBehaviour</scope><name>OnStopAuthority</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1adabae0597e1228ad256cb35d1616c1ca" prot="public" virt="virtual"><scope>Mirror::NetworkBehaviour</scope><name>OnStopClient</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a27dc77be5d2117b34157b3836f333690" prot="public" virt="virtual"><scope>Mirror::NetworkBehaviour</scope><name>OnStopServer</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a08c0ff954baaab3c19ddab7bbd80d09a" prot="package" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>ResetSyncObjects</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1ac1568659d9c736766b14696efbb4dcb1" prot="protected" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>SendCommandInternal</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a8896e37754d4e3a6a2ed2102aebeee9e" prot="protected" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>SendEventInternal</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1aea3fef3f468d7fdb63c3d550f238e84a" prot="protected" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>SendRPCInternal</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a8bab38b2cbc1df4cba42abf401635a42" prot="protected" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>SendTargetRPCInternal</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1ad49cab5e0ac5e4dace701541c105d371" prot="public" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>SerializeObjectsAll</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a4ba0673f1259fbf07a169aa6ef95dd45" prot="public" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>SerializeObjectsDelta</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1ace23cde46937b5fe490499d983a7e6e3" prot="public" virt="virtual"><scope>Mirror::NetworkBehaviour</scope><name>SerializeSyncVars</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1addda8533ab954db571bda550862034f7" prot="public" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>SetDirtyBit</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a4087b2993b045a197b9b653176411f05" prot="protected" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>SetSyncVar&lt; T &gt;</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1ac3e14f45a522cec35780c9afc367e985" prot="protected" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>SetSyncVarGameObject</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a23b3e60e1abdf4468beb6924bace3ce4" prot="protected" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>setSyncVarHookGuard</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a2b4fc9f99fffd61bf67b4e7995d1d4bb" prot="protected" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>SetSyncVarNetworkIdentity</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a94dbe38f0930d3bbde326d0eed7b6f83" prot="public" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>syncInterval</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1acf0616ac2f967bdd47bf0f579cefe8a7" prot="public" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>syncMode</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1ac9c5caa586acee344c189db183e95efe" prot="protected" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>syncObjects</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a4bb1e7724acf59e001659f0fe0b90c8f" prot="protected" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>syncVarDirtyBits</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a46c40d5ff8bc8bea02e3c0b3886e768a" prot="protected" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>SyncVarEqual&lt; T &gt;</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a7a4e336c889c531a69ec0f51900d0657" prot="protected" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>SyncVarGameObjectEqual</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1a3fcb5b65c66b6f05170be6ce4cf67fe7" prot="private" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>syncVarHookGuard</name></member>
      <member refid="class_mirror_1_1_network_behaviour_1abdba57d6c8ff0ac89767ca07acd4ffa9" prot="protected" virt="non-virtual"><scope>Mirror::NetworkBehaviour</scope><name>SyncVarNetworkIdentityEqual</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
