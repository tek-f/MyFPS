<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="class_mirror_1_1_fallback_transport" kind="class" language="C#" prot="public">
    <compoundname>Mirror::FallbackTransport</compoundname>
    <basecompoundref refid="class_mirror_1_1_transport" prot="public" virt="non-virtual">Mirror.Transport</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_mirror_1_1_fallback_transport_1a57079cceead2d64f147b954a80897cbd" prot="public" static="no" mutable="no">
        <type><ref refid="class_mirror_1_1_transport" kindref="compound">Transport</ref>[]</type>
        <definition>Transport [] Mirror.FallbackTransport.transports</definition>
        <argsstring></argsstring>
        <name>transports</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" line="13" column="26" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_mirror_1_1_fallback_transport_1a29c13cfcf989fe3b21b0b0b766cb826e" prot="private" static="no" mutable="no">
        <type><ref refid="class_mirror_1_1_transport" kindref="compound">Transport</ref></type>
        <definition>Transport Mirror.FallbackTransport.available</definition>
        <argsstring></argsstring>
        <name>available</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" line="16" column="19" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_mirror_1_1_fallback_transport_1a7adb14d03d95c38ac0a3066866e14ed0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.FallbackTransport.Awake</definition>
        <argsstring>()</argsstring>
        <name>Awake</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" line="18" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" bodystart="18" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_fallback_transport_1a1daef2d72f0ef35677d2a2f26e187d56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override bool</type>
        <definition>override bool Mirror.FallbackTransport.Available</definition>
        <argsstring>()</argsstring>
        <name>Available</name>
        <reimplements refid="class_mirror_1_1_transport_1a7c662214f058b24b4dec5913d09122e1">Available</reimplements>
        <briefdescription>
<para>Is this transport available in the current platform? </para>
        </briefdescription>
        <detaileddescription>
<para>Some transports might only be available in mobile</para>
<para>Many will not work in webgl</para>
<para>Example usage: return Application.platform == RuntimePlatform.WebGLPlayer</para>
<para><simplesect kind="return"><para>True if this transport works in the current platform</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" line="53" column="30" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_fallback_transport_1aabcb7a9b999ac2daf796ca3c603aaa59" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Mirror.FallbackTransport.ClientConnect</definition>
        <argsstring>(string address)</argsstring>
        <name>ClientConnect</name>
        <reimplements refid="class_mirror_1_1_transport_1aa8e301deea483e11bc3a77241bebd6c8">ClientConnect</reimplements>
        <param>
          <type>string</type>
          <declname>address</declname>
        </param>
        <briefdescription>
<para>Establish a connection to a server </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>address</parametername>
</parameternamelist>
<parameterdescription>
<para>The IP address or FQDN of the server we are trying to connect to</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" line="71" column="30" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_fallback_transport_1a1b7af306dc91a815bd79a1df1bee04c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Mirror.FallbackTransport.ClientConnect</definition>
        <argsstring>(Uri uri)</argsstring>
        <name>ClientConnect</name>
        <reimplements refid="class_mirror_1_1_transport_1ac5e84a6ef26c090e2075a513d5724cd4">ClientConnect</reimplements>
        <param>
          <type>Uri</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
<para>Establish a connection to a server </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of the server we are trying to connect to</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" line="76" column="30" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" bodystart="76" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_fallback_transport_1a5211e0a68ae31e84bf7a4969b23e1dd5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override bool</type>
        <definition>override bool Mirror.FallbackTransport.ClientConnected</definition>
        <argsstring>()</argsstring>
        <name>ClientConnected</name>
        <reimplements refid="class_mirror_1_1_transport_1a1d37768d58bce8ccfeafb254ff6961b5">ClientConnected</reimplements>
        <briefdescription>
<para>Determines if we are currently connected to the server </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if a connection has been established to the server</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" line="96" column="30" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_fallback_transport_1a3f1f6810917dfc142f5fa932135c269c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Mirror.FallbackTransport.ClientDisconnect</definition>
        <argsstring>()</argsstring>
        <name>ClientDisconnect</name>
        <reimplements refid="class_mirror_1_1_transport_1adf81d49444738fb55ec8962535c5ed05">ClientDisconnect</reimplements>
        <briefdescription>
<para>Disconnect this client from the server </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" line="101" column="30" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_fallback_transport_1af0264ad1e1e1ee76bf40bcb470a56f73" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override bool</type>
        <definition>override bool Mirror.FallbackTransport.ClientSend</definition>
        <argsstring>(int channelId, ArraySegment&lt; byte &gt; segment)</argsstring>
        <name>ClientSend</name>
        <reimplements refid="class_mirror_1_1_transport_1a72f04bfce4b5cc2e6e706b069a8a4c35">ClientSend</reimplements>
        <param>
          <type>int</type>
          <declname>channelId</declname>
        </param>
        <param>
          <type>ArraySegment&lt; byte &gt;</type>
          <declname>segment</declname>
        </param>
        <briefdescription>
<para>Send data to the server </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channelId</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel to use. 0 is the default channel, but some transports might want to provide unreliable, encrypted, compressed, or any other feature as new channels</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>segment</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to send to the server. Will be recycled after returning, so either use it directly or copy it internally. This allows for allocation-free sends!</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the send was successful</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" line="106" column="30" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_fallback_transport_1a128e27d87a56b4c6b5a55ebefe96f0b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>override Uri</type>
        <definition>override Uri Mirror.FallbackTransport.ServerUri</definition>
        <argsstring>()</argsstring>
        <name>ServerUri</name>
        <reimplements refid="class_mirror_1_1_transport_1a4c03319f92bc9bccd60666aa8640b914">ServerUri</reimplements>
        <briefdescription>
<para>Retrieves the address of this server. Useful for network discovery </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the url at which this server can be reached</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" line="125" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_fallback_transport_1adf1f173fa3033451a16e09099b3e0fd7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override bool</type>
        <definition>override bool Mirror.FallbackTransport.ServerActive</definition>
        <argsstring>()</argsstring>
        <name>ServerActive</name>
        <reimplements refid="class_mirror_1_1_transport_1aecd7291bd0108abab27e2188bc3204b0">ServerActive</reimplements>
        <briefdescription>
<para>Determines if the server is up and running </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the transport is ready for connections from clients</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" line="127" column="30" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_fallback_transport_1a8b4b57854f8e36d901eb6b421a208918" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override string</type>
        <definition>override string Mirror.FallbackTransport.ServerGetClientAddress</definition>
        <argsstring>(int connectionId)</argsstring>
        <name>ServerGetClientAddress</name>
        <reimplements refid="class_mirror_1_1_transport_1a776ddfb60f41fa6645df0c74833c46f6">ServerGetClientAddress</reimplements>
        <param>
          <type>int</type>
          <declname>connectionId</declname>
        </param>
        <briefdescription>
<para>Get the client address </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connectionId</parametername>
</parameternamelist>
<parameterdescription>
<para>id of the client</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>address of the client</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" line="132" column="32" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_fallback_transport_1a5edd2631591699ff8fbb144405e00a2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override bool</type>
        <definition>override bool Mirror.FallbackTransport.ServerDisconnect</definition>
        <argsstring>(int connectionId)</argsstring>
        <name>ServerDisconnect</name>
        <reimplements refid="class_mirror_1_1_transport_1a733852b2e5bc2922129700e1e3128d8b">ServerDisconnect</reimplements>
        <param>
          <type>int</type>
          <declname>connectionId</declname>
        </param>
        <briefdescription>
<para>Disconnect a client from this server. Useful to kick people out. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connectionId</parametername>
</parameternamelist>
<parameterdescription>
<para>the id of the client to disconnect</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the client was kicked</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" line="137" column="30" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_fallback_transport_1a9becb241804d6544cc977f2066348fe0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override bool</type>
        <definition>override bool Mirror.FallbackTransport.ServerSend</definition>
        <argsstring>(List&lt; int &gt; connectionIds, int channelId, ArraySegment&lt; byte &gt; segment)</argsstring>
        <name>ServerSend</name>
        <reimplements refid="class_mirror_1_1_transport_1a9b7725d91b696845add4defdce3c37ab">ServerSend</reimplements>
        <param>
          <type>List&lt; int &gt;</type>
          <declname>connectionIds</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channelId</declname>
        </param>
        <param>
          <type>ArraySegment&lt; byte &gt;</type>
          <declname>segment</declname>
        </param>
        <briefdescription>
<para>Send data to one or multiple clients. We provide a list, so that transports can make use of multicasting, and avoid allocations where possible. </para>
        </briefdescription>
        <detaileddescription>
<para>We don&apos;t provide a single ServerSend function to reduce complexity. Simply overwrite this one in your <ref refid="class_mirror_1_1_transport" kindref="compound">Transport</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connectionIds</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of client connection ids to send the data to</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channelId</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel to be used. Transports can use channels to implement other features such as unreliable, encryption, compression, etc...</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the data was sent to all clients</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" line="142" column="30" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" bodystart="142" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_fallback_transport_1a387178ccbbfd744542ef4c665cb05602" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Mirror.FallbackTransport.ServerStart</definition>
        <argsstring>()</argsstring>
        <name>ServerStart</name>
        <reimplements refid="class_mirror_1_1_transport_1a104abe48a87936fbe5d31a289d83a36d">ServerStart</reimplements>
        <briefdescription>
<para>Start listening for clients </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" line="147" column="30" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" bodystart="147" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_fallback_transport_1a3c1948b479a16f126b35ac34333d76e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Mirror.FallbackTransport.ServerStop</definition>
        <argsstring>()</argsstring>
        <name>ServerStop</name>
        <reimplements refid="class_mirror_1_1_transport_1a6e99933a82108c0dcb358ce4e60a3acb">ServerStop</reimplements>
        <briefdescription>
<para>Stop listening for clients and disconnect all existing clients </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" line="152" column="30" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_fallback_transport_1a9dd3430d939e5e031dec2856ce14aa93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Mirror.FallbackTransport.Shutdown</definition>
        <argsstring>()</argsstring>
        <name>Shutdown</name>
        <reimplements refid="class_mirror_1_1_transport_1a79346ab9427f1cf37ff8154856040449">Shutdown</reimplements>
        <briefdescription>
<para>Shut down the transport, both as client and server </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" line="157" column="30" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_fallback_transport_1ae091227ae3e3cedc0e9fcd4319ae8bb4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override int</type>
        <definition>override int Mirror.FallbackTransport.GetMaxPacketSize</definition>
        <argsstring>(int channelId=0)</argsstring>
        <name>GetMaxPacketSize</name>
        <reimplements refid="class_mirror_1_1_transport_1a6340d7bcfced9674d8c4f59b0d0746cf">GetMaxPacketSize</reimplements>
        <param>
          <type>int</type>
          <declname>channelId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>The maximum packet size for a given channel. Unreliable transports usually can only deliver small packets. Reliable fragmented channels can usually deliver large ones. </para>
        </briefdescription>
        <detaileddescription>
<para>GetMaxPacketSize needs to return a value at all times. Even if the <ref refid="class_mirror_1_1_transport" kindref="compound">Transport</ref> isn&apos;t running, or isn&apos;t <ref refid="class_mirror_1_1_fallback_transport_1a1daef2d72f0ef35677d2a2f26e187d56" kindref="member">Available()</ref>. This is because Fallback and Multiplex transports need to find the smallest possible packet size at runtime.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channelId</parametername>
</parameternamelist>
<parameterdescription>
<para>channel id</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the size in bytes that can be sent via the provided channel</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" line="162" column="29" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" bodystart="162" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_fallback_transport_1a749bed26a548713dabbf79ca192d845c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override string</type>
        <definition>override string Mirror.FallbackTransport.ToString</definition>
        <argsstring>()</argsstring>
        <name>ToString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" line="184" column="32" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" bodystart="184" bodyend="187"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_mirror_1_1_fallback_transport_1a9d1ad9b3c98ca971414fe7294839e763" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.FallbackTransport.OnEnable</definition>
        <argsstring>()</argsstring>
        <name>OnEnable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" line="30" column="14" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_fallback_transport_1ade0c4f69a44d00f583c7aa5412efcc3d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.FallbackTransport.OnDisable</definition>
        <argsstring>()</argsstring>
        <name>OnDisable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" line="35" column="14" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_fallback_transport_1a9e1c857bbe5583b0da4e3b98831cfa6d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_mirror_1_1_transport" kindref="compound">Transport</ref></type>
        <definition>Transport Mirror.FallbackTransport.GetAvailableTransport</definition>
        <argsstring>()</argsstring>
        <name>GetAvailableTransport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" line="41" column="19" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" bodystart="41" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_fallback_transport_1a8f22bf089908a3205a40ec4f357063c6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.FallbackTransport.InitClient</definition>
        <argsstring>()</argsstring>
        <name>InitClient</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" line="59" column="14" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" bodystart="59" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_fallback_transport_1aabcfbd559c9ec5bd875feee1d97605fb" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.FallbackTransport.InitServer</definition>
        <argsstring>()</argsstring>
        <name>InitServer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" line="111" column="14" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" bodystart="111" bodyend="121"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Mirror.FallbackTransport</label>
        <link refid="class_mirror_1_1_fallback_transport"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>MonoBehaviour</label>
      </node>
      <node id="2">
        <label>Transport</label>
        <link refid="class_mirror_1_1_transport"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>Mirror.UnityEventException</label>
        <link refid="class_mirror_1_1_unity_event_exception"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>UnityEvent&lt; Exception &gt;</label>
      </node>
      <node id="9">
        <label>Mirror.UnityEventIntException</label>
        <link refid="class_mirror_1_1_unity_event_int_exception"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Mirror.FallbackTransport</label>
        <link refid="class_mirror_1_1_fallback_transport"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>transports</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>UnityEvent&lt; ArraySegment&lt; byte &gt;, int &gt;</label>
      </node>
      <node id="11">
        <label>Mirror.ClientDataReceivedEvent</label>
        <link refid="class_mirror_1_1_client_data_received_event"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>Mirror.Transport</label>
        <link refid="class_mirror_1_1_transport"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>OnServerConnected</edgelabel>
          <edgelabel>OnServerDisconnected</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>OnClientError</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>activeTransport</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>OnServerError</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>OnClientDataReceived</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>OnServerDataReceived</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Mirror.UnityEventInt</label>
        <link refid="class_mirror_1_1_unity_event_int"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>UnityEvent&lt; int, Exception &gt;</label>
      </node>
      <node id="3">
        <label>MonoBehaviour</label>
      </node>
      <node id="2">
        <label>Transport</label>
        <link refid="class_mirror_1_1_transport"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>OnServerConnected</edgelabel>
          <edgelabel>OnServerDisconnected</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>OnClientError</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>activeTransport</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>OnServerError</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>OnClientDataReceived</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>OnServerDataReceived</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>Mirror.ServerDataReceivedEvent</label>
        <link refid="class_mirror_1_1_server_data_received_event"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>UnityEvent&lt; int &gt;</label>
      </node>
      <node id="14">
        <label>UnityEvent&lt; int, ArraySegment&lt; byte &gt;, int &gt;</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" line="11" column="11" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Transport/FallbackTransport.cs" bodystart="12" bodyend="189"/>
    <listofallmembers>
      <member refid="class_mirror_1_1_transport_1a4e187471cf106ef6068e4347b1d2fdee" prot="public" virt="non-virtual"><scope>Mirror::FallbackTransport</scope><name>activeTransport</name></member>
      <member refid="class_mirror_1_1_fallback_transport_1a29c13cfcf989fe3b21b0b0b766cb826e" prot="private" virt="non-virtual"><scope>Mirror::FallbackTransport</scope><name>available</name></member>
      <member refid="class_mirror_1_1_fallback_transport_1a1daef2d72f0ef35677d2a2f26e187d56" prot="public" virt="virtual"><scope>Mirror::FallbackTransport</scope><name>Available</name></member>
      <member refid="class_mirror_1_1_fallback_transport_1a7adb14d03d95c38ac0a3066866e14ed0" prot="public" virt="non-virtual"><scope>Mirror::FallbackTransport</scope><name>Awake</name></member>
      <member refid="class_mirror_1_1_fallback_transport_1aabcb7a9b999ac2daf796ca3c603aaa59" prot="public" virt="virtual"><scope>Mirror::FallbackTransport</scope><name>ClientConnect</name></member>
      <member refid="class_mirror_1_1_fallback_transport_1a1b7af306dc91a815bd79a1df1bee04c0" prot="public" virt="virtual"><scope>Mirror::FallbackTransport</scope><name>ClientConnect</name></member>
      <member refid="class_mirror_1_1_fallback_transport_1a5211e0a68ae31e84bf7a4969b23e1dd5" prot="public" virt="virtual"><scope>Mirror::FallbackTransport</scope><name>ClientConnected</name></member>
      <member refid="class_mirror_1_1_fallback_transport_1a3f1f6810917dfc142f5fa932135c269c" prot="public" virt="virtual"><scope>Mirror::FallbackTransport</scope><name>ClientDisconnect</name></member>
      <member refid="class_mirror_1_1_fallback_transport_1af0264ad1e1e1ee76bf40bcb470a56f73" prot="public" virt="virtual"><scope>Mirror::FallbackTransport</scope><name>ClientSend</name></member>
      <member refid="class_mirror_1_1_fallback_transport_1a9e1c857bbe5583b0da4e3b98831cfa6d" prot="private" virt="non-virtual"><scope>Mirror::FallbackTransport</scope><name>GetAvailableTransport</name></member>
      <member refid="class_mirror_1_1_fallback_transport_1ae091227ae3e3cedc0e9fcd4319ae8bb4" prot="public" virt="virtual"><scope>Mirror::FallbackTransport</scope><name>GetMaxPacketSize</name></member>
      <member refid="class_mirror_1_1_fallback_transport_1a8f22bf089908a3205a40ec4f357063c6" prot="private" virt="non-virtual"><scope>Mirror::FallbackTransport</scope><name>InitClient</name></member>
      <member refid="class_mirror_1_1_fallback_transport_1aabcfbd559c9ec5bd875feee1d97605fb" prot="private" virt="non-virtual"><scope>Mirror::FallbackTransport</scope><name>InitServer</name></member>
      <member refid="class_mirror_1_1_transport_1a60da8b19a9fcc0e4e5b732887ed750dd" prot="public" virt="virtual"><scope>Mirror::FallbackTransport</scope><name>OnApplicationQuit</name></member>
      <member refid="class_mirror_1_1_transport_1acafeb3fc7051eb2456961a4aab66bd67" prot="public" virt="non-virtual"><scope>Mirror::FallbackTransport</scope><name>OnClientConnected</name></member>
      <member refid="class_mirror_1_1_transport_1a73f5e6da15756d7bf2bcfd12429be058" prot="public" virt="non-virtual"><scope>Mirror::FallbackTransport</scope><name>OnClientDataReceived</name></member>
      <member refid="class_mirror_1_1_transport_1a32abf6e68728cdb49cd31a9208a7eb55" prot="public" virt="non-virtual"><scope>Mirror::FallbackTransport</scope><name>OnClientDisconnected</name></member>
      <member refid="class_mirror_1_1_transport_1a288982823f99bfd439277ee2a174173b" prot="public" virt="non-virtual"><scope>Mirror::FallbackTransport</scope><name>OnClientError</name></member>
      <member refid="class_mirror_1_1_fallback_transport_1ade0c4f69a44d00f583c7aa5412efcc3d" prot="private" virt="non-virtual"><scope>Mirror::FallbackTransport</scope><name>OnDisable</name></member>
      <member refid="class_mirror_1_1_fallback_transport_1a9d1ad9b3c98ca971414fe7294839e763" prot="private" virt="non-virtual"><scope>Mirror::FallbackTransport</scope><name>OnEnable</name></member>
      <member refid="class_mirror_1_1_transport_1a4e8ff19ebeb434fec9b7262fa1b9638c" prot="public" virt="non-virtual"><scope>Mirror::FallbackTransport</scope><name>OnServerConnected</name></member>
      <member refid="class_mirror_1_1_transport_1ac5d03436d77ffe03d3391629a1a85c16" prot="public" virt="non-virtual"><scope>Mirror::FallbackTransport</scope><name>OnServerDataReceived</name></member>
      <member refid="class_mirror_1_1_transport_1a14b8d3ba13b5f98924aeec45af184d45" prot="public" virt="non-virtual"><scope>Mirror::FallbackTransport</scope><name>OnServerDisconnected</name></member>
      <member refid="class_mirror_1_1_transport_1a656d1f29dc7a753a6c63e6c9cfdc73cc" prot="public" virt="non-virtual"><scope>Mirror::FallbackTransport</scope><name>OnServerError</name></member>
      <member refid="class_mirror_1_1_fallback_transport_1adf1f173fa3033451a16e09099b3e0fd7" prot="public" virt="virtual"><scope>Mirror::FallbackTransport</scope><name>ServerActive</name></member>
      <member refid="class_mirror_1_1_fallback_transport_1a5edd2631591699ff8fbb144405e00a2d" prot="public" virt="virtual"><scope>Mirror::FallbackTransport</scope><name>ServerDisconnect</name></member>
      <member refid="class_mirror_1_1_fallback_transport_1a8b4b57854f8e36d901eb6b421a208918" prot="public" virt="virtual"><scope>Mirror::FallbackTransport</scope><name>ServerGetClientAddress</name></member>
      <member refid="class_mirror_1_1_fallback_transport_1a9becb241804d6544cc977f2066348fe0" prot="public" virt="virtual"><scope>Mirror::FallbackTransport</scope><name>ServerSend</name></member>
      <member refid="class_mirror_1_1_fallback_transport_1a387178ccbbfd744542ef4c665cb05602" prot="public" virt="virtual"><scope>Mirror::FallbackTransport</scope><name>ServerStart</name></member>
      <member refid="class_mirror_1_1_fallback_transport_1a3c1948b479a16f126b35ac34333d76e7" prot="public" virt="virtual"><scope>Mirror::FallbackTransport</scope><name>ServerStop</name></member>
      <member refid="class_mirror_1_1_fallback_transport_1a128e27d87a56b4c6b5a55ebefe96f0b3" prot="public" virt="virtual"><scope>Mirror::FallbackTransport</scope><name>ServerUri</name></member>
      <member refid="class_mirror_1_1_fallback_transport_1a9dd3430d939e5e031dec2856ce14aa93" prot="public" virt="virtual"><scope>Mirror::FallbackTransport</scope><name>Shutdown</name></member>
      <member refid="class_mirror_1_1_fallback_transport_1a749bed26a548713dabbf79ca192d845c" prot="public" virt="non-virtual"><scope>Mirror::FallbackTransport</scope><name>ToString</name></member>
      <member refid="class_mirror_1_1_fallback_transport_1a57079cceead2d64f147b954a80897cbd" prot="public" virt="non-virtual"><scope>Mirror::FallbackTransport</scope><name>transports</name></member>
      <member refid="class_mirror_1_1_transport_1ad1a6da8f541579f53d7a2c61cbc820c6" prot="public" virt="non-virtual"><scope>Mirror::FallbackTransport</scope><name>Update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
