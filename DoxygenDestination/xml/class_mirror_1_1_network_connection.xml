<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="class_mirror_1_1_network_connection" kind="class" language="C#" prot="public" abstract="yes">
    <compoundname>Mirror::NetworkConnection</compoundname>
    <basecompoundref prot="public" virt="non-virtual">IDisposable</basecompoundref>
    <derivedcompoundref refid="class_mirror_1_1_network_connection_to_client" prot="public" virt="non-virtual">Mirror.NetworkConnectionToClient</derivedcompoundref>
    <derivedcompoundref refid="class_mirror_1_1_network_connection_to_server" prot="public" virt="non-virtual">Mirror.NetworkConnectionToServer</derivedcompoundref>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_mirror_1_1_network_connection_1a96ab2276c0acb1a3ce270a00804db9e1" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int Mirror.NetworkConnection.LocalConnectionId</definition>
        <argsstring></argsstring>
        <name>LocalConnectionId</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="19" column="26" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_mirror_1_1_network_connection_1ad95e8cb5fc10bac0d2ad0a9c4cf1e116" prot="private" static="yes" mutable="no">
        <type>readonly ILogger</type>
        <definition>readonly ILogger Mirror.NetworkConnection.logger</definition>
        <argsstring></argsstring>
        <name>logger</name>
        <initializer>= LogFactory.GetLogger&lt;<ref refid="class_mirror_1_1_network_connection" kindref="compound">NetworkConnection</ref>&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="20" column="33" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-attrib">
      <memberdef kind="variable" id="class_mirror_1_1_network_connection_1a6ddb080149a0b23aa764bdf967044724" prot="package" static="no" mutable="no">
        <type>readonly HashSet&lt; <ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity</ref> &gt;</type>
        <definition>readonly HashSet&lt;NetworkIdentity&gt; Mirror.NetworkConnection.visList</definition>
        <argsstring></argsstring>
        <name>visList</name>
        <initializer>= new HashSet&lt;<ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity</ref>&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="23" column="35" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_mirror_1_1_network_connection_1afc73db46666e33b6f50981952b7565be" prot="private" static="no" mutable="no">
        <type>Dictionary&lt; int, NetworkMessageDelegate &gt;</type>
        <definition>Dictionary&lt;int, NetworkMessageDelegate&gt; Mirror.NetworkConnection.messageHandlers</definition>
        <argsstring></argsstring>
        <name>messageHandlers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="25" column="20" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_mirror_1_1_network_connection_1a1247800fa37e4af183ca3c58e687ecf4" prot="public" static="no" mutable="no">
        <type>readonly int</type>
        <definition>readonly int Mirror.NetworkConnection.connectionId</definition>
        <argsstring></argsstring>
        <name>connectionId</name>
        <briefdescription>
<para>Unique identifier for this connection that is assigned by the transport layer. </para>
        </briefdescription>
        <detaileddescription>
<para>On a server, this Id is unique for every connection on the server. On a client this Id is local to the client, it is not the same as the Id on the server for this connection.</para>
<para><ref refid="class_mirror_1_1_transport" kindref="compound">Transport</ref> layers connections begin at one. So on a client with a single connection to a server, the connectionId of that connection will be one. In NetworkServer, the connectionId of the local connection is zero.</para>
<para>Clients do not know their connectionId on the server, and do not know the connectionId of other clients on the server.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="35" column="29" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_connection_1a482f5e49c373a96c29df1c9cbc4a6757" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Mirror.NetworkConnection.isAuthenticated</definition>
        <argsstring></argsstring>
        <name>isAuthenticated</name>
        <briefdescription>
<para><ref refid="class_flag" kindref="compound">Flag</ref> that indicates the client has been authenticated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="40" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_connection_1a571373632c93c7f18f3e601b8ee0b04f" prot="public" static="no" mutable="no">
        <type>object</type>
        <definition>object Mirror.NetworkConnection.authenticationData</definition>
        <argsstring></argsstring>
        <name>authenticationData</name>
        <briefdescription>
<para>General purpose object to hold authentication data, character selection, tokens, etc. associated with the connection for reference after Authentication completes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="46" column="23" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_connection_1a94362bc21882fa2d34df1235d706b1f7" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Mirror.NetworkConnection.isReady</definition>
        <argsstring></argsstring>
        <name>isReady</name>
        <briefdescription>
<para><ref refid="class_flag" kindref="compound">Flag</ref> that tells if the connection has been marked as &quot;ready&quot; by a client calling ClientScene.Ready(). </para>
        </briefdescription>
        <detaileddescription>
<para>This property is read-only. It is set by the system on the client when ClientScene.Ready() is called, and set by the system on the server when a ready message is received from a client.</para>
<para>A client that is ready is sent spawned objects by the server and updates to the state of spawned objects. A client that is not ready is not sent spawned objects.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="53" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_connection_1abfcc29816ddb4bd117dd26a31728a4d8" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Mirror.NetworkConnection.lastMessageTime</definition>
        <argsstring></argsstring>
        <name>lastMessageTime</name>
        <briefdescription>
<para>The last time that a message was received on this connection. </para>
        </briefdescription>
        <detaileddescription>
<para>This includes internal system messages (such as Commands and ClientRpc calls) and user messages.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="65" column="22" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_connection_1a0523c3a787f8e1689300b21bad102e57" prot="public" static="no" mutable="no">
        <type>readonly HashSet&lt; <ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity</ref> &gt;</type>
        <definition>readonly HashSet&lt;NetworkIdentity&gt; Mirror.NetworkConnection.clientOwnedObjects</definition>
        <argsstring></argsstring>
        <name>clientOwnedObjects</name>
        <initializer>= new HashSet&lt;<ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity</ref>&gt;()</initializer>
        <briefdescription>
<para>A list of the <ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity</ref> objects owned by this connection. This list is read-only. </para>
        </briefdescription>
        <detaileddescription>
<para>This includes the player object for the connection - if it has localPlayerAutority set, and any objects spawned with local authority or set with AssignLocalAuthority.</para>
<para>This list can be used to validate messages from clients, to ensure that clients are only trying to control objects that they own.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="79" column="33" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_network_connection_1a7ca2603dbf2d32b799a9633a60e269d0" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Mirror.NetworkConnection.logNetworkMessages</definition>
        <argsstring></argsstring>
        <name>logNetworkMessages</name>
        <briefdescription>
<para>Setting this to true will log the contents of network message to the console. </para>
        </briefdescription>
        <detaileddescription>
<para>Warning: this can be a lot of data and can be very slow. Both incoming and outgoing messages are logged. The format of the logs is:</para>
<para>ConnectionSend con:1 bytes:11 msgId:5 FB59D743FD120000000000 ConnectionRecv con:1 bytes:27 msgId:8 14F21000000000016800AC3FE090C240437846403CDDC0BD3B0000</para>
<para>Note that these are application-level network messages, not protocol-level packets. There will typically be multiple network messages combined in a single protocol packet.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="90" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_mirror_1_1_network_connection_1a23cbe763dddbb12ba43ef129c456db37" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>abstract string</type>
        <definition>abstract string Mirror.NetworkConnection.address</definition>
        <argsstring></argsstring>
        <name>address</name>
        <briefdescription>
<para>The IP address / URL / FQDN associated with the connection. Can be useful for a game master to do IP Bans etc. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="59" column="32" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="property" id="class_mirror_1_1_network_connection_1a1d2489f176006bf19fd9bb9850967c76" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity</ref></type>
        <definition>NetworkIdentity Mirror.NetworkConnection.identity</definition>
        <argsstring></argsstring>
        <name>identity</name>
        <briefdescription>
<para>The <ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity</ref> for this connection. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="70" column="32" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="70" bodyend="70"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef kind="function" id="class_mirror_1_1_network_connection_1a5ad5f88069e7e360aa46bae3d15e0ed5" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Mirror.NetworkConnection.NetworkConnection</definition>
        <argsstring>()</argsstring>
        <name>NetworkConnection</name>
        <briefdescription>
<para>Creates a new <ref refid="class_mirror_1_1_network_connection" kindref="compound">NetworkConnection</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="95" column="18" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="95" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_connection_1aed0633ae83ada4f5b67c763d865bfba3" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Mirror.NetworkConnection.NetworkConnection</definition>
        <argsstring>(int networkConnectionId)</argsstring>
        <name>NetworkConnection</name>
        <param>
          <type>int</type>
          <declname>networkConnectionId</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="class_mirror_1_1_network_connection" kindref="compound">NetworkConnection</ref> with the specified connectionId </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>networkConnectionId</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="105" column="18" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_connection_1a792ee1387519808fcd9980612f02704c" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.NetworkConnection.SetHandlers</definition>
        <argsstring>(Dictionary&lt; int, NetworkMessageDelegate &gt; handlers)</argsstring>
        <name>SetHandlers</name>
        <param>
          <type>Dictionary&lt; int, NetworkMessageDelegate &gt;</type>
          <declname>handlers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="137" column="23" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_connection_1af946b8d29f4784ef28b97ab7758990ec" prot="package" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>abstract bool</type>
        <definition>abstract bool Mirror.NetworkConnection.Send</definition>
        <argsstring>(ArraySegment&lt; byte &gt; segment, int channelId=Channels.DefaultReliable)</argsstring>
        <name>Send</name>
        <reimplementedby refid="class_mirror_1_1_u_local_connection_to_client_1a8f6f6b3b2194620ae5d1bf4ad914ff12">Send</reimplementedby>
        <reimplementedby refid="class_mirror_1_1_network_connection_to_client_1ab84966a053d56e3fc565c0f85b1496d2">Send</reimplementedby>
        <reimplementedby refid="class_mirror_1_1_network_connection_to_server_1af484fcb7c42b743754c4f9238f44aafb">Send</reimplementedby>
        <param>
          <type>ArraySegment&lt; byte &gt;</type>
          <declname>segment</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channelId</declname>
          <defval>Channels.DefaultReliable</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="186" column="32"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_connection_1a39423a04e433bacc029cd10107f1538b" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.NetworkConnection.AddToVisList</definition>
        <argsstring>(NetworkIdentity identity)</argsstring>
        <name>AddToVisList</name>
        <param>
          <type><ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity</ref></type>
          <declname>identity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="193" column="23" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="193" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_connection_1a68387adbe60c690e177e4ab9d6f06382" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.NetworkConnection.RemoveFromVisList</definition>
        <argsstring>(NetworkIdentity identity, bool isDestroyed)</argsstring>
        <name>RemoveFromVisList</name>
        <param>
          <type><ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity</ref></type>
          <declname>identity</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isDestroyed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="201" column="23" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="201" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_connection_1a99c541296882372ef41fd01b6cd70380" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.NetworkConnection.RemoveObservers</definition>
        <argsstring>()</argsstring>
        <name>RemoveObservers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="212" column="23" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="212" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_connection_1a6d7922d2d23294345ea6a7eb0554f430" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Mirror.NetworkConnection.InvokeHandler</definition>
        <argsstring>(int msgType, NetworkReader reader, int channelId)</argsstring>
        <name>InvokeHandler</name>
        <param>
          <type>int</type>
          <declname>msgType</declname>
        </param>
        <param>
          <type><ref refid="class_mirror_1_1_network_reader" kindref="compound">NetworkReader</ref></type>
          <declname>reader</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channelId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="221" column="23" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="221" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_connection_1a8b93853b218236bffe64e7621e232ab4" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.NetworkConnection.TransportReceive</definition>
        <argsstring>(ArraySegment&lt; byte &gt; buffer, int channelId)</argsstring>
        <name>TransportReceive</name>
        <param>
          <type>ArraySegment&lt; byte &gt;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channelId</declname>
        </param>
        <briefdescription>
<para>This function allows custom network connection classes to process data from the network before it is passed to the application. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The data received.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="267" column="23" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="267" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_connection_1a3650022dcf27ce95b6416400cc7dcbe8" prot="package" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Mirror.NetworkConnection.IsClientAlive</definition>
        <argsstring>()</argsstring>
        <name>IsClientAlive</name>
        <reimplementedby refid="class_mirror_1_1_u_local_connection_to_client_1a271b5326f837a4026c5f96fdacab613c">IsClientAlive</reimplementedby>
        <reimplementedby refid="class_mirror_1_1_network_connection_to_client_1a46651ad77418684e751d333a5806bcdd">IsClientAlive</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="297" column="31" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="297" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_connection_1a6ac1e314ddecd5204388e5d05a248e20" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.NetworkConnection.AddOwnedObject</definition>
        <argsstring>(NetworkIdentity obj)</argsstring>
        <name>AddOwnedObject</name>
        <param>
          <type><ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="302" column="23" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="302" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_connection_1aabe6e4245221401c6f74df98ae728010" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.NetworkConnection.RemoveOwnedObject</definition>
        <argsstring>(NetworkIdentity obj)</argsstring>
        <name>RemoveOwnedObject</name>
        <param>
          <type><ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="307" column="23" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="307" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_connection_1a10b41b5316e86b1d1a2429ee7c56fc1d" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.NetworkConnection.DestroyOwnedObjects</definition>
        <argsstring>()</argsstring>
        <name>DestroyOwnedObjects</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="312" column="23" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="312" bodyend="326"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_mirror_1_1_network_connection_1a8fa62feb5e1cbacc2557c413d4a30d2a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Mirror.NetworkConnection.~NetworkConnection</definition>
        <argsstring>()</argsstring>
        <name>~NetworkConnection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="110" column="9" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="110" bodyend="113"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_mirror_1_1_network_connection_1a3d4805ab08b2af8d6a39b6a873d8256c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Mirror.NetworkConnection.Dispose</definition>
        <argsstring>()</argsstring>
        <name>Dispose</name>
        <briefdescription>
<para>Disposes of this connection, releasing channel buffers that it holds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="118" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="118" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_connection_1a2d3402195c717ebf2c45874b4f3c17bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>abstract void</type>
        <definition>abstract void Mirror.NetworkConnection.Disconnect</definition>
        <argsstring>()</argsstring>
        <name>Disconnect</name>
        <reimplementedby refid="class_mirror_1_1_u_local_connection_to_client_1af3413c485f73747e687bdbf0f2f286d3">Disconnect</reimplementedby>
        <reimplementedby refid="class_mirror_1_1_network_connection_to_client_1a578cd702f7b9a289d9f0b04c2e4978e2">Disconnect</reimplementedby>
        <reimplementedby refid="class_mirror_1_1_network_connection_to_server_1afa1f2d6f6515a8c345df425b8c04ed8d">Disconnect</reimplementedby>
        <briefdescription>
<para>Disconnects this connection. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="135" column="30"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_connection_1abd5a3b4206ef5158e23232be1a09f26e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Mirror.NetworkConnection.Send&lt; T &gt;</definition>
        <argsstring>(T msg, int channelId=Channels.DefaultReliable)</argsstring>
        <name>Send&lt; T &gt;</name>
        <param>
          <type>T</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channelId</declname>
          <defval>Channels.DefaultReliable</defval>
        </param>
        <briefdescription>
<para>This sends a network message with a message ID on the connection. This message is sent on channel zero, which by default is the reliable channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The message type to unregister.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to send.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channelId</parametername>
</parameternamelist>
<parameterdescription>
<para>The transport layer channel to send on.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="149" column="16" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="149" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_connection_1ab62357e826e041bf33eea9237511bd56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override string</type>
        <definition>override string Mirror.NetworkConnection.ToString</definition>
        <argsstring>()</argsstring>
        <name>ToString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="188" column="32" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="188" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_network_connection_1a2883951cc3bc4b4fd796beb454800a1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Mirror.NetworkConnection.InvokeHandler&lt; T &gt;</definition>
        <argsstring>(T msg, int channelId)</argsstring>
        <name>InvokeHandler&lt; T &gt;</name>
        <param>
          <type>T</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channelId</declname>
        </param>
        <briefdescription>
<para>This function invokes the registered handler function for a message. </para>
        </briefdescription>
        <detaileddescription>
<para>Network connections used by the NetworkClient and NetworkServer use this function for handling network messages.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The message type to unregister.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>The message object to process.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if the handler was successfully invoked</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="239" column="16" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="239" bodyend="255"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_mirror_1_1_network_connection_1a8e92049dba7a22350a018c62d8d1d08f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Mirror.NetworkConnection.Dispose</definition>
        <argsstring>(bool disposing)</argsstring>
        <name>Dispose</name>
        <param>
          <type>bool</type>
          <declname>disposing</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="127" column="32" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="127" bodyend="130"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-static-func">
      <memberdef kind="function" id="class_mirror_1_1_network_connection_1a953313ac48d4fee15873bdc15a3b3f32" prot="package" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Mirror.NetworkConnection.ValidatePacketSize</definition>
        <argsstring>(ArraySegment&lt; byte &gt; segment, int channelId)</argsstring>
        <name>ValidatePacketSize</name>
        <param>
          <type>ArraySegment&lt; byte &gt;</type>
          <declname>segment</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channelId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="165" column="40" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="165" bodyend="182"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A High level network connection. This is used for connections from client-to-server and for connection from server-to-client. </para>
    </briefdescription>
    <detaileddescription>
<para>A <ref refid="class_mirror_1_1_network_connection" kindref="compound">NetworkConnection</ref> corresponds to a specific connection for a host in the transport layer. It has a connectionId that is assigned by the transport layer and passed to the Initialize function.</para>
<para>A NetworkClient has one <ref refid="class_mirror_1_1_network_connection" kindref="compound">NetworkConnection</ref>. A NetworkServerSimple manages multiple NetworkConnections. The NetworkServer has multiple &quot;remote&quot; connections and a &quot;local&quot; connection for the local client.</para>
<para>The <ref refid="class_mirror_1_1_network_connection" kindref="compound">NetworkConnection</ref> class provides message sending and handling facilities. For sending data over a network, there are methods to send message objects, byte arrays, and <ref refid="class_mirror_1_1_network_writer" kindref="compound">NetworkWriter</ref> objects. To handle data arriving from the network, handler functions can be registered for message Ids, byte arrays can be processed by HandleBytes(), and <ref refid="class_mirror_1_1_network_reader" kindref="compound">NetworkReader</ref> object can be processed by HandleReader().</para>
<para><ref refid="class_mirror_1_1_network_connection" kindref="compound">NetworkConnection</ref> objects also act as observers for networked objects. When a connection is an observer of a networked object with a <ref refid="class_mirror_1_1_network_identity" kindref="compound">NetworkIdentity</ref>, then the object will be visible to corresponding client for the connection, and incremental state changes will be sent to the client.</para>
<para>There are many virtual functions on <ref refid="class_mirror_1_1_network_connection" kindref="compound">NetworkConnection</ref> that allow its behaviour to be customized. NetworkClient and NetworkServer can both be made to instantiate custom classes derived from <ref refid="class_mirror_1_1_network_connection" kindref="compound">NetworkConnection</ref> by setting their networkConnectionClass member variable.</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>IDisposable</label>
      </node>
      <node id="1">
        <label>Mirror.NetworkConnection</label>
        <link refid="class_mirror_1_1_network_connection"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Mirror.ULocalConnectionToServer</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Mirror.NetworkConnectionToClient</label>
        <link refid="class_mirror_1_1_network_connection_to_client"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Mirror.NetworkConnectionToServer</label>
        <link refid="class_mirror_1_1_network_connection_to_server"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Mirror.ULocalConnectionToClient</label>
        <link refid="class_mirror_1_1_u_local_connection_to_client"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>IDisposable</label>
      </node>
      <node id="1">
        <label>Mirror.NetworkConnection</label>
        <link refid="class_mirror_1_1_network_connection"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" line="17" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/NetworkConnection.cs" bodystart="18" bodyend="327"/>
    <listofallmembers>
      <member refid="class_mirror_1_1_network_connection_1a6ac1e314ddecd5204388e5d05a248e20" prot="package" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>AddOwnedObject</name></member>
      <member refid="class_mirror_1_1_network_connection_1a23cbe763dddbb12ba43ef129c456db37" prot="public" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>address</name></member>
      <member refid="class_mirror_1_1_network_connection_1a39423a04e433bacc029cd10107f1538b" prot="package" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>AddToVisList</name></member>
      <member refid="class_mirror_1_1_network_connection_1a571373632c93c7f18f3e601b8ee0b04f" prot="public" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>authenticationData</name></member>
      <member refid="class_mirror_1_1_network_connection_1a0523c3a787f8e1689300b21bad102e57" prot="public" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>clientOwnedObjects</name></member>
      <member refid="class_mirror_1_1_network_connection_1a1247800fa37e4af183ca3c58e687ecf4" prot="public" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>connectionId</name></member>
      <member refid="class_mirror_1_1_network_connection_1a10b41b5316e86b1d1a2429ee7c56fc1d" prot="package" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>DestroyOwnedObjects</name></member>
      <member refid="class_mirror_1_1_network_connection_1a2d3402195c717ebf2c45874b4f3c17bf" prot="public" virt="pure-virtual"><scope>Mirror::NetworkConnection</scope><name>Disconnect</name></member>
      <member refid="class_mirror_1_1_network_connection_1a3d4805ab08b2af8d6a39b6a873d8256c" prot="public" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>Dispose</name></member>
      <member refid="class_mirror_1_1_network_connection_1a8e92049dba7a22350a018c62d8d1d08f" prot="protected" virt="virtual"><scope>Mirror::NetworkConnection</scope><name>Dispose</name></member>
      <member refid="class_mirror_1_1_network_connection_1a1d2489f176006bf19fd9bb9850967c76" prot="public" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>identity</name></member>
      <member refid="class_mirror_1_1_network_connection_1a6d7922d2d23294345ea6a7eb0554f430" prot="package" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>InvokeHandler</name></member>
      <member refid="class_mirror_1_1_network_connection_1a2883951cc3bc4b4fd796beb454800a1b" prot="public" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>InvokeHandler&lt; T &gt;</name></member>
      <member refid="class_mirror_1_1_network_connection_1a482f5e49c373a96c29df1c9cbc4a6757" prot="public" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>isAuthenticated</name></member>
      <member refid="class_mirror_1_1_network_connection_1a3650022dcf27ce95b6416400cc7dcbe8" prot="package" virt="virtual"><scope>Mirror::NetworkConnection</scope><name>IsClientAlive</name></member>
      <member refid="class_mirror_1_1_network_connection_1a94362bc21882fa2d34df1235d706b1f7" prot="public" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>isReady</name></member>
      <member refid="class_mirror_1_1_network_connection_1abfcc29816ddb4bd117dd26a31728a4d8" prot="public" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>lastMessageTime</name></member>
      <member refid="class_mirror_1_1_network_connection_1a96ab2276c0acb1a3ce270a00804db9e1" prot="public" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>LocalConnectionId</name></member>
      <member refid="class_mirror_1_1_network_connection_1ad95e8cb5fc10bac0d2ad0a9c4cf1e116" prot="private" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>logger</name></member>
      <member refid="class_mirror_1_1_network_connection_1a7ca2603dbf2d32b799a9633a60e269d0" prot="public" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>logNetworkMessages</name></member>
      <member refid="class_mirror_1_1_network_connection_1afc73db46666e33b6f50981952b7565be" prot="private" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>messageHandlers</name></member>
      <member refid="class_mirror_1_1_network_connection_1a5ad5f88069e7e360aa46bae3d15e0ed5" prot="package" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>NetworkConnection</name></member>
      <member refid="class_mirror_1_1_network_connection_1aed0633ae83ada4f5b67c763d865bfba3" prot="package" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>NetworkConnection</name></member>
      <member refid="class_mirror_1_1_network_connection_1a68387adbe60c690e177e4ab9d6f06382" prot="package" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>RemoveFromVisList</name></member>
      <member refid="class_mirror_1_1_network_connection_1a99c541296882372ef41fd01b6cd70380" prot="package" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>RemoveObservers</name></member>
      <member refid="class_mirror_1_1_network_connection_1aabe6e4245221401c6f74df98ae728010" prot="package" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>RemoveOwnedObject</name></member>
      <member refid="class_mirror_1_1_network_connection_1af946b8d29f4784ef28b97ab7758990ec" prot="package" virt="pure-virtual"><scope>Mirror::NetworkConnection</scope><name>Send</name></member>
      <member refid="class_mirror_1_1_network_connection_1abd5a3b4206ef5158e23232be1a09f26e" prot="public" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>Send&lt; T &gt;</name></member>
      <member refid="class_mirror_1_1_network_connection_1a792ee1387519808fcd9980612f02704c" prot="package" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>SetHandlers</name></member>
      <member refid="class_mirror_1_1_network_connection_1ab62357e826e041bf33eea9237511bd56" prot="public" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>ToString</name></member>
      <member refid="class_mirror_1_1_network_connection_1a8b93853b218236bffe64e7621e232ab4" prot="package" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>TransportReceive</name></member>
      <member refid="class_mirror_1_1_network_connection_1a953313ac48d4fee15873bdc15a3b3f32" prot="package" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>ValidatePacketSize</name></member>
      <member refid="class_mirror_1_1_network_connection_1a6ddb080149a0b23aa764bdf967044724" prot="package" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>visList</name></member>
      <member refid="class_mirror_1_1_network_connection_1a8fa62feb5e1cbacc2557c413d4a30d2a" prot="private" virt="non-virtual"><scope>Mirror::NetworkConnection</scope><name>~NetworkConnection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
