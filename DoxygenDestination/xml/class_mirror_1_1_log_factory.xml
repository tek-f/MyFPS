<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="class_mirror_1_1_log_factory" kind="class" language="C#" prot="public">
    <compoundname>Mirror::LogFactory</compoundname>
      <sectiondef kind="package-static-attrib">
      <memberdef kind="variable" id="class_mirror_1_1_log_factory_1aaa4abbd3bd86b1c5970d7cf1d71b9678" prot="package" static="yes" mutable="no">
        <type>readonly SortedDictionary&lt; string, ILogger &gt;</type>
        <definition>readonly SortedDictionary&lt;string, ILogger&gt; Mirror.LogFactory.loggers</definition>
        <argsstring></argsstring>
        <name>loggers</name>
        <initializer>= new SortedDictionary&lt;string, ILogger&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Logging/LogFactory.cs" line="8" column="51" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Logging/LogFactory.cs" bodystart="8" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_mirror_1_1_log_factory_1abd6a1b86ed5f4ec7ac75542d4cea4943" prot="public" static="yes" mutable="no">
        <type>SortedDictionary&lt; string, ILogger &gt;.ValueCollection</type>
        <definition>SortedDictionary&lt;string, ILogger&gt;.ValueCollection Mirror.LogFactory.AllLoggers</definition>
        <argsstring></argsstring>
        <name>AllLoggers</name>
        <initializer>=&gt; loggers.Values</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Logging/LogFactory.cs" line="10" column="55" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Logging/LogFactory.cs" bodystart="10" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_mirror_1_1_log_factory_1ac92294d9fb6116019fd28064a503c512" prot="private" static="yes" mutable="no">
        <type>ILogHandler</type>
        <definition>ILogHandler Mirror.LogFactory.defaultLogHandler</definition>
        <argsstring></argsstring>
        <name>defaultLogHandler</name>
        <initializer>= Debug.unityLogger</initializer>
        <briefdescription>
<para>logHandler used for new loggers </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Logging/LogFactory.cs" line="15" column="28" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Logging/LogFactory.cs" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mirror_1_1_log_factory_1acb2e48a25d01f63de7bbf64873596830" prot="private" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool Mirror.LogFactory.debugMode</definition>
        <argsstring></argsstring>
        <name>debugMode</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>if true sets all log level to LogType.Log </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Logging/LogFactory.cs" line="20" column="21" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Logging/LogFactory.cs" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_mirror_1_1_log_factory_1afb05ea8d899d84eade87689493eb0f6c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ILogger</type>
        <definition>static ILogger Mirror.LogFactory.GetLogger&lt; T &gt;</definition>
        <argsstring>(LogType defaultLogLevel=LogType.Warning)</argsstring>
        <name>GetLogger&lt; T &gt;</name>
        <param>
          <type>LogType</type>
          <declname>defaultLogLevel</declname>
          <defval>LogType.Warning</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Logging/LogFactory.cs" line="22" column="23" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Logging/LogFactory.cs" bodystart="22" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_log_factory_1a39c385873bc671c5116c765feb094c55" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ILogger</type>
        <definition>static ILogger Mirror.LogFactory.GetLogger</definition>
        <argsstring>(System.Type type, LogType defaultLogLevel=LogType.Warning)</argsstring>
        <name>GetLogger</name>
        <param>
          <type>System.Type</type>
          <declname>type</declname>
        </param>
        <param>
          <type>LogType</type>
          <declname>defaultLogLevel</declname>
          <defval>LogType.Warning</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Logging/LogFactory.cs" line="27" column="31" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Logging/LogFactory.cs" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_log_factory_1a42bb487317e92417d5a8b3f83b3ae498" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ILogger</type>
        <definition>static ILogger Mirror.LogFactory.GetLogger</definition>
        <argsstring>(string loggerName, LogType defaultLogLevel=LogType.Warning)</argsstring>
        <name>GetLogger</name>
        <param>
          <type>string</type>
          <declname>loggerName</declname>
        </param>
        <param>
          <type>LogType</type>
          <declname>defaultLogLevel</declname>
          <defval>LogType.Warning</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Logging/LogFactory.cs" line="32" column="31" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Logging/LogFactory.cs" bodystart="32" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_log_factory_1add8960f1e98c7309ea739c35769ae83c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Mirror.LogFactory.EnableDebugMode</definition>
        <argsstring>()</argsstring>
        <name>EnableDebugMode</name>
        <briefdescription>
<para>Makes all log levels LogType.Log, this is so that NetworkManger.showDebugMessages can still be used </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Logging/LogFactory.cs" line="52" column="28" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Logging/LogFactory.cs" bodystart="52" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_mirror_1_1_log_factory_1ae485d516d3b10eb9146c7c84a6e02275" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Mirror.LogFactory.ReplaceLogHandler</definition>
        <argsstring>(ILogHandler logHandler)</argsstring>
        <name>ReplaceLogHandler</name>
        <param>
          <type>ILogHandler</type>
          <declname>logHandler</declname>
        </param>
        <briefdescription>
<para>Replacing log handler for all existing loggers and sets defaultLogHandler for new loggers </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>logHandler</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Logging/LogFactory.cs" line="66" column="28" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Logging/LogFactory.cs" bodystart="66" bodyend="74"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Logging/LogFactory.cs" line="6" column="19" bodyfile="C:/Users/aaron/Documents/GitHub/MyFPS/Assets/Mirror/Runtime/Logging/LogFactory.cs" bodystart="7" bodyend="75"/>
    <listofallmembers>
      <member refid="class_mirror_1_1_log_factory_1abd6a1b86ed5f4ec7ac75542d4cea4943" prot="public" virt="non-virtual"><scope>Mirror::LogFactory</scope><name>AllLoggers</name></member>
      <member refid="class_mirror_1_1_log_factory_1acb2e48a25d01f63de7bbf64873596830" prot="private" virt="non-virtual"><scope>Mirror::LogFactory</scope><name>debugMode</name></member>
      <member refid="class_mirror_1_1_log_factory_1ac92294d9fb6116019fd28064a503c512" prot="private" virt="non-virtual"><scope>Mirror::LogFactory</scope><name>defaultLogHandler</name></member>
      <member refid="class_mirror_1_1_log_factory_1add8960f1e98c7309ea739c35769ae83c" prot="public" virt="non-virtual"><scope>Mirror::LogFactory</scope><name>EnableDebugMode</name></member>
      <member refid="class_mirror_1_1_log_factory_1a39c385873bc671c5116c765feb094c55" prot="public" virt="non-virtual"><scope>Mirror::LogFactory</scope><name>GetLogger</name></member>
      <member refid="class_mirror_1_1_log_factory_1a42bb487317e92417d5a8b3f83b3ae498" prot="public" virt="non-virtual"><scope>Mirror::LogFactory</scope><name>GetLogger</name></member>
      <member refid="class_mirror_1_1_log_factory_1afb05ea8d899d84eade87689493eb0f6c" prot="public" virt="non-virtual"><scope>Mirror::LogFactory</scope><name>GetLogger&lt; T &gt;</name></member>
      <member refid="class_mirror_1_1_log_factory_1aaa4abbd3bd86b1c5970d7cf1d71b9678" prot="package" virt="non-virtual"><scope>Mirror::LogFactory</scope><name>loggers</name></member>
      <member refid="class_mirror_1_1_log_factory_1ae485d516d3b10eb9146c7c84a6e02275" prot="public" virt="non-virtual"><scope>Mirror::LogFactory</scope><name>ReplaceLogHandler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
